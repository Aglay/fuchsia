config("glfw_config") {
  include_dirs = [
    "include",
    "deps",
  ]
  cflags = [ "-Wall", "-Wno-deprecated" ]
  # add flags to avoid compiler warnings
  cflags += [ "-Wno-int-conversion", "-Wno-implicit-function-declaration", "-Wno-sign-compare"]
}
static_library("glfw") {
  defines = [
    "_GLFW_BUILD_DLL",
    "__GLFW_USE_HYBRID_HPG",
  ]
  sources = [
    "src/context.c",
    "src/init.c",
    "src/input.c",
    "src/monitor.c",
    "src/vulkan.c",
    "src/window.c",
    "deps/glad.c",
    "deps/getopt.c",
  ]
  if (is_mac) {
    defines += [
      "_GLFW_COCOA",
      "_GLFW_USE_RETINA",
    ]
    libs = [
      "Cocoa.framework",
      "CoreFoundation.framework",
      "CoreGraphics.framework",
      "CoreVideo.framework",
      "IOKit.framework",
      "OpenGL.framework",
    ]
    sources += [
      "src/cocoa_init.m",
      "src/cocoa_joystick.m",
      "src/cocoa_monitor.m",
      "src/cocoa_window.m",
      "src/cocoa_time.c",
      "src/posix_tls.c",
      "src/nsgl_context.m",
    ]
  } else if (is_linux) {
    defines += [
      "_GLFW_X11",
    ]
    sources += [
      "src/x11_init.c",
      "src/x11_monitor.c",
      "src/x11_window.c",
      "src/xkb_unicode.c",
      "src/linux_joystick.c",
      "src/posix_time.c",
      "src/posix_tls.c",
      "src/glx_context.c",
      "src/egl_context.c",
    ]
  }
  configs += [ ":glfw_config" ]
}
