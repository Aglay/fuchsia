# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/sysroot.gni")

assert(current_os == "fuchsia")

config("werror") {
  cflags = [ "-Werror" ]
}

config("compiler") {
  cflags = []
  cflags_c = [ "-std=c11" ]
  cflags_cc = [ "-std=c++14" ]
  configs = [
    ":compiler_sysroot",
    ":compiler_target",
    ":werror",
  ]
  asmflags = cflags + cflags_c
}

config("compiler_sysroot") {
  # The sole purpose of SYSROOT_VERSION is to change the command line on every
  # sysroot update so as to force rebuilds.
  defines = [ "SYSROOT_VERSION=$sysroot_version" ]
  cflags = [ "--sysroot=" + rebase_path(sysroot, root_build_dir) ]
  ldflags = [ "--sysroot=" + rebase_path(sysroot, root_build_dir) ]
  asmflags = cflags
}

config("compiler_target") {
  cflags = []
  ldflags = []
  if (current_cpu == "arm64") {
    cflags += [ "--target=aarch64-fuchsia" ]
    ldflags += [ "--target=aarch64-fuchsia" ]
  } else if (current_cpu == "x64") {
    cflags += [ "--target=x86_64-fuchsia" ]
    ldflags += [ "--target=x86_64-fuchsia" ]
  } else {
    assert(false, "Unsupported architecture")
  }
  asmflags = cflags
}

config("shared_library_config") {
  cflags = [ "-fPIC" ]
}

config("executable_config") {
  libs = [
    # TODO: Depending on mxio implicitly is wrong. This is currently needed so
    # printf() works, but we should wire that in explicitly and require
    # applications that want to use mxio declare their dependency explicitly.
    "mxio",
  ]
}
