# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/fidl/fidl.gni")
import("//build/test.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

static_library("fidl_codec") {
  friend = [ ":tests" ]

  public = [
    "colors.h",
    "display_handle.h",
    "display_options.h",
    "library_loader.h",
    "memory_helpers.h",
    "message_decoder.h",
    "wire_object.h",
    "wire_parser.h",
    "wire_types.h",
  ]

  sources = [
    "display_handle.cc",
    "library_loader.cc",
    "message_decoder.cc",
    "wire_object.cc",
    "wire_parser.cc",
    "wire_types.cc",
  ]

  deps = [
    "//src/lib/fxl",
    "//third_party/rapidjson",
    "//zircon/public/lib/fidl_base",
    "//zircon/system/public",
  ]
}

executable("fidl_codec_test_bin") {
  testonly = true
  sources = [
    "library_loader_test.cc",
    "message_decoder_test.cc",
    "wire_parser_test.cc",
  ]

  deps = [
    ":fidl",
    ":fidl_codec",
    ":json_for_test",
    ":list_for_test",
    "//sdk/fidl/fuchsia.sys",
    "//sdk/lib/fidl/cpp:test_support",
    "//sdk/lib/fidl/cpp/test",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gtest",
    "//third_party/rapidjson",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
  ]
}

unittest_package("fidl_codec_tests") {
  deps = [
    ":fidl_codec_test_bin",
  ]
  tests = [
    {
      name = "fidl_codec_test_bin"
      environments = basic_envs
    },
  ]
}

group("tests") {
  testonly = true

  deps = [
    ":fidl_codec_tests",
  ]
}

action("json_for_test") {
  deps = [
    ":fidl($fidl_toolchain)",
    ":fidl-composed($fidl_toolchain)",
    ":fidl-sys($fidl_toolchain)",
    "//sdk/fidl/fuchsia.sys",
    "//sdk/lib/fidl/cpp/test:frobinator",
    "//zircon/system/fidl/fuchsia-io",
  ]
  outputs = [
    "$target_gen_dir/library_loader_test_data.h",
  ]
  script = "generate_test_includes.sh"
  args = [
    rebase_path(target_gen_dir, root_build_dir) + "/library_loader_test_data.h",
    "FidlcodecExamples",
    rebase_path(root_build_dir) +
        "/fidling/gen/sdk/lib/fidl/cpp/test/frobinator.fidl.json",
    rebase_path(root_build_dir) +
        "/fidling/gen/zircon/system/fidl/fuchsia-io/fuchsia-io.fidl.json",
    rebase_path(root_build_dir) +
        "/fidling/gen/src/lib/fidl_codec/fidl.fidl.json",
    rebase_path(root_build_dir) +
        "/fidling/gen/src/lib/fidl_codec/fidl-composed.fidl.json",
    rebase_path(root_build_dir) +
        "/fidling/gen/src/lib/fidl_codec/fidl-sys.fidl.json",
  ]
}

action("list_for_test") {
  testonly = true
  deps = [
    "//sdk/fidl/fuchsia.accessibility.semantics",
    "//sdk/fidl/fuchsia.auth.oldtokens",
    "//sdk/fidl/fuchsia.bluetooth.gatt",
    "//sdk/fidl/fuchsia.bluetooth.le",
    "//sdk/fidl/fuchsia.camera",
    "//sdk/fidl/fuchsia.camera2",
    "//sdk/fidl/fuchsia.camera2.hal",
    "//sdk/fidl/fuchsia.castauth",
    "//sdk/fidl/fuchsia.castconfig",
    "//sdk/fidl/fuchsia.castsetup",
    "//sdk/fidl/fuchsia.castsysteminfo",
    "//sdk/fidl/fuchsia.deprecatedtimezone",
    "//sdk/fidl/fuchsia.developer.tiles",
    "//sdk/fidl/fuchsia.factory",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/fidl/fuchsia.fonts",
    "//sdk/fidl/fuchsia.hwinfo",
    "//sdk/fidl/fuchsia.images",
    "//sdk/fidl/fuchsia.math",
    "//sdk/fidl/fuchsia.media",
    "//sdk/fidl/fuchsia.media.audio",
    "//sdk/fidl/fuchsia.media.drm",
    "//sdk/fidl/fuchsia.media.playback",
    "//sdk/fidl/fuchsia.media.sessions2",
    "//sdk/fidl/fuchsia.mediacodec",
    "//sdk/fidl/fuchsia.net.http",
    "//sdk/fidl/fuchsia.net.mdns",
    "//sdk/fidl/fuchsia.net.oldhttp",
    "//sdk/fidl/fuchsia.netstack",
    "//sdk/fidl/fuchsia.settings",
    "//sdk/fidl/fuchsia.simplecamera",
    "//sdk/fidl/fuchsia.sys",
    "//sdk/fidl/fuchsia.sys.test",
    "//sdk/fidl/fuchsia.ui.app",
    "//sdk/fidl/fuchsia.ui.gfx",
    "//sdk/fidl/fuchsia.ui.input",
    "//sdk/fidl/fuchsia.ui.input2",
    "//sdk/fidl/fuchsia.ui.policy",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/fidl/fuchsia.ui.types",
    "//sdk/fidl/fuchsia.ui.views",
    "//sdk/fidl/fuchsia.update.channel",
    "//sdk/fidl/fuchsia.update.channelcontrol",
    "//sdk/fidl/fuchsia.web",
    "//sdk/fidl/fuchsia.wlan.service",
    "//zircon/system/fidl/fuchsia-cobalt",
    "//zircon/system/fidl/fuchsia-hardware-goldfish-address-space",
    "//zircon/system/fidl/fuchsia-hardware-goldfish-control",
    "//zircon/system/fidl/fuchsia-hardware-goldfish-pipe",
    "//zircon/system/fidl/fuchsia-logger",
    "//zircon/system/fidl/fuchsia-mem",
    "//zircon/system/fidl/fuchsia-posix-socket",
    "//zircon/system/fidl/fuchsia-process",
    "//zircon/system/fidl/fuchsia-sysinfo",
    "//zircon/system/fidl/fuchsia-tracing-provider",
  ]
  outputs = [
    "$target_gen_dir/list_test_data.h",
  ]
  script = "generate_test_includes.sh"
  args = [
    rebase_path(target_gen_dir, root_build_dir) + "/list_test_data.h",
    "SdkExamples",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.accessibility.semantics/fuchsia.accessibility.semantics.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.auth.oldtokens/fuchsia.auth.oldtokens.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.bluetooth.gatt/fuchsia.bluetooth.gatt.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.bluetooth.le/fuchsia.bluetooth.le.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.camera/fuchsia.camera.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.camera2/fuchsia.camera2.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.camera2.hal/fuchsia.camera2.hal.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.castauth/fuchsia.castauth.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.castconfig/fuchsia.castconfig.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.castsetup/fuchsia.castsetup.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.castsysteminfo/fuchsia.castsysteminfo.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.deprecatedtimezone/fuchsia.deprecatedtimezone.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.developer.tiles/fuchsia.developer.tiles.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.factory/fuchsia.factory.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.feedback/fuchsia.feedback.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.fonts/fuchsia.fonts.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.hwinfo/fuchsia.hwinfo.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.images/fuchsia.images.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.math/fuchsia.math.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.media/fuchsia.media.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.media.audio/fuchsia.media.audio.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.media.drm/fuchsia.media.drm.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.media.playback/fuchsia.media.playback.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.media.sessions2/fuchsia.media.sessions2.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.mediacodec/fuchsia.mediacodec.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.net.http/fuchsia.net.http.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.net.mdns/fuchsia.net.mdns.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.net.oldhttp/fuchsia.net.oldhttp.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.netstack/fuchsia.netstack.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.settings/fuchsia.settings.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.simplecamera/fuchsia.simplecamera.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.sys/fuchsia.sys.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.sys.test/fuchsia.sys.test.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.ui.app/fuchsia.ui.app.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.ui.gfx/fuchsia.ui.gfx.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.ui.input/fuchsia.ui.input.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.ui.input2/fuchsia.ui.input2.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.ui.policy/fuchsia.ui.policy.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.ui.scenic/fuchsia.ui.scenic.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.ui.types/fuchsia.ui.types.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.ui.views/fuchsia.ui.views.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.update.channel/fuchsia.update.channel.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.update.channelcontrol/fuchsia.update.channelcontrol.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.web/fuchsia.web.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/sdk/fidl/fuchsia.wlan.service/fuchsia.wlan.service.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-cobalt/fuchsia-cobalt.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-hardware-goldfish-address-space/fuchsia-hardware-goldfish-address-space.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-hardware-goldfish-control/fuchsia-hardware-goldfish-control.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-hardware-goldfish-pipe/fuchsia-hardware-goldfish-pipe.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-logger/fuchsia-logger.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-mem/fuchsia-mem.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-posix-socket/fuchsia-posix-socket.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-process/fuchsia-process.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-sysinfo/fuchsia-sysinfo.fidl.json",
    rebase_path(root_build_dir) +
    "/fidling/gen/zircon/system/fidl/fuchsia-tracing-provider/fuchsia-tracing-provider.fidl.json",
  ]
}

fidl("fidl") {
  name = "test.fidlcodec.examples"

  sources = [
    "testdata/empty.test.fidl",
    "testdata/reserved_member.test.fidl",
    "testdata/types.test.fidl",
  ]
}

fidl("fidl-composed") {
  name = "test.fidlcodec.composedinto"

  sources = [
    "testdata/composed_into.test.fidl",
  ]

  public_deps = [
    ":fidl",
  ]
}

fidl("fidl-sys") {
  name = "test.fidlcodec.sys"

  sources = [
    "testdata/sys.test.fidl",
  ]
}
