# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")

executable("support") {
  testonly = true
  sources = [ "support.cc" ]
  deps = [
    "//sdk/fidl/fuchsia.boot",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_c",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot_llcpp",
    "//sdk/lib/sys/cpp",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
    "//zircon/system/ulib/fidl-async:fidl-async-cpp",
    "//zircon/system/ulib/mock-boot-arguments",
  ]
}

package("isolated-devmgr") {
  testonly = true
  meta = [
    {
      path = rebase_path("meta/isolated_devmgr.cml")
      dest = "isolated_devmgr.cm"
    },
    {
      path = rebase_path("meta/driver_manager_test.cml")
      dest = "driver_manager_test.cm"
    },
  ]
  binaries = [
    {
      name = "support"
    },
    {
      name = "driver_manager"
    },
    {
      name = "driver_host"
    },

    # -- Drivers --
    {
      name = "ramdisk.so"
      dest = "driver/ramdisk.so"
    },
    {
      name = "block.core.so"
      dest = "driver/block.core.so"
    },
    {
      name = "fvm.so"
      dest = "driver/fvm.so"
    },
  ]
  deps = [
    ":support",
    "//src/devices/bin/driver_host:driver_host",
    "//src/devices/bin/driver_manager",
    "//src/devices/block/drivers/core",
    "//src/devices/block/drivers/fvm",
    "//src/devices/block/drivers/ramdisk:ramdisk",
  ]
}

source_set("client") {
  testonly = true
  sources = [
    "bind_devfs_to_namespace.cc",
    "bind_devfs_to_namespace.h",
    "fvm.cc",
    "fvm.h",
    "ram_disk.cc",
    "ram_disk.h",
  ]
  deps = [
    "//sdk/fidl/fuchsia.device",
    "//sdk/fidl/fuchsia.device:fuchsia.device_llcpp",
    "//sdk/fidl/fuchsia.sys2",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/syslog/cpp",
    "//zircon/public/lib/sync",
    "//zircon/system/ulib/fs-management",
  ]
  public_deps = [
    "//zircon/public/lib/zxc",
    "//zircon/system/ulib/ramdevice-client",
  ]
}

group("v2_component") {
  testonly = true
  deps = [ ":isolated-devmgr" ]
  public_deps = [ ":client" ]
}
