# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/dart/test.gni")
import("//build/host.gni")
import("//build/testing/environments.gni")
import("//build/testing/host_test_data.gni")

# TODO(omerlevran): Find a cleaner way to this by properly structuring the deps
# between the rules. Please try to avoid using this pattern.
_shared_out_dir = get_label_info(":bogus(${target_toolchain})", "root_out_dir")

dart_test("package_manager_test") {
  sources = [ "package_manager_test.dart" ]

  deps = [
    "//cts/util/pkg:pkg",
    "//cts/util/ports:ports",
    "//sdk/testing/sl4f/client",
    "//third_party/dart-pkg/pub/logging",
    "//third_party/dart-pkg/pub/quiver",
    "//third_party/dart-pkg/pub/test",
  ]
  non_dart_deps = [ ":runtime_deps($host_toolchain)" ]
  args = [ "--data-dir=" + rebase_path(_shared_out_dir) ]

  # Runs on "main" builders (try and ci) in QEMU environments, but only on x64,
  # as we don't currently support Dart on arm64 hosts.
  environments = []
  if (is_host && target_cpu == "x64") {
    environments = [ emu_env ]
  }
}

if (is_host) {
  host_test_data("runtime_deps") {
    sources = [
      "$_shared_out_dir/obj/garnet/examples/components/component_hello_world/meta.far",
      "$_shared_out_dir/obj/garnet/examples/components/component_hello_world/package_manifest.json",
      "$host_tools_dir/pm",
    ]
    outputs = [ "$target_gen_dir/runtime_deps/{{source_file_part}}" ]
    deps = [
      "//garnet/examples/components:component_hello_world($default_toolchain)",
      "//garnet/packages/tools:sl4f",  # Required to run tests locally.
      "//src/sys/pkg/bin/pm:host($host_toolchain)",
    ]
  }
}

group("tests") {
  testonly = true

  deps = [ ":package_manager_test($host_toolchain)" ]
}
