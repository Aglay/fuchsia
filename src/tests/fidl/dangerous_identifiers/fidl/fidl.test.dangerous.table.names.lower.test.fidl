// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.table.names.lower;
using membertype = uint32;

table abstract {
    1: membertype member;
};

table alignas {
    1: membertype member;
};

table alignof {
    1: membertype member;
};

table and {
    1: membertype member;
};

table and_eq {
    1: membertype member;
};

table as {
    1: membertype member;
};

table asm {
    1: membertype member;
};

table assert {
    1: membertype member;
};

table async {
    1: membertype member;
};

table atomic_cancel {
    1: membertype member;
};

table atomic_commit {
    1: membertype member;
};

table atomic_noexcept {
    1: membertype member;
};

table auto {
    1: membertype member;
};

table await {
    1: membertype member;
};

table become {
    1: membertype member;
};

table bitand {
    1: membertype member;
};

table bitor {
    1: membertype member;
};

table bool {
    1: membertype member;
};

table box {
    1: membertype member;
};

table break {
    1: membertype member;
};

table byte {
    1: membertype member;
};

table bytes {
    1: membertype member;
};

table case {
    1: membertype member;
};

table catch {
    1: membertype member;
};

table chan {
    1: membertype member;
};

table char {
    1: membertype member;
};

table char16_t {
    1: membertype member;
};

table char32_t {
    1: membertype member;
};

table class {
    1: membertype member;
};

table co_await {
    1: membertype member;
};

table co_return {
    1: membertype member;
};

table co_yield {
    1: membertype member;
};

table coding_traits {
    1: membertype member;
};

table compl {
    1: membertype member;
};

table concept {
    1: membertype member;
};

table const {
    1: membertype member;
};

table const_cast {
    1: membertype member;
};

table constexpr {
    1: membertype member;
};

table continue {
    1: membertype member;
};

table controller {
    1: membertype member;
};

table covariant {
    1: membertype member;
};

table crate {
    1: membertype member;
};

table decltype {
    1: membertype member;
};

table decoder {
    1: membertype member;
};

table default {
    1: membertype member;
};

table defer {
    1: membertype member;
};

table deferred {
    1: membertype member;
};

table delete {
    1: membertype member;
};

table do {
    1: membertype member;
};

table double {
    1: membertype member;
};

table dynamic {
    1: membertype member;
};

table dynamic_cast {
    1: membertype member;
};

table else {
    1: membertype member;
};

table encoder {
    1: membertype member;
};

table ensure_values_instantiated {
    1: membertype member;
};

table enum {
    1: membertype member;
};

table empty {
    1: membertype member;
};

table err {
    1: membertype member;
};

table explicit {
    1: membertype member;
};

table export {
    1: membertype member;
};

table extends {
    1: membertype member;
};

table extern {
    1: membertype member;
};

table external {
    1: membertype member;
};

table factory {
    1: membertype member;
};

table fallthrough {
    1: membertype member;
};

table false {
    1: membertype member;
};

table fidl {
    1: membertype member;
};

table fidl_type {
    1: membertype member;
};

table final {
    1: membertype member;
};

table finally {
    1: membertype member;
};

table float {
    1: membertype member;
};

table fn {
    1: membertype member;
};

table for {
    1: membertype member;
};

table friend {
    1: membertype member;
};

table func {
    1: membertype member;
};

table future {
    1: membertype member;
};

table futures {
    1: membertype member;
};

table get {
    1: membertype member;
};

table go {
    1: membertype member;
};

table goto {
    1: membertype member;
};

table has_invalid_tag {
    1: membertype member;
};

table hash_code {
    1: membertype member;
};

table if {
    1: membertype member;
};

table impl {
    1: membertype member;
};

table implements {
    1: membertype member;
};

table import {
    1: membertype member;
};

table in {
    1: membertype member;
};

table index {
    1: membertype member;
};

table inline {
    1: membertype member;
};

table int {
    1: membertype member;
};

table int16 {
    1: membertype member;
};

table int32 {
    1: membertype member;
};

table int64 {
    1: membertype member;
};

table int8 {
    1: membertype member;
};

table interface {
    1: membertype member;
};

table internal_tag {
    1: membertype member;
};

table is {
    1: membertype member;
};

table let {
    1: membertype member;
};

table lhs {
    1: membertype member;
};

table library {
    1: membertype member;
};

table list {
    1: membertype member;
};

table long {
    1: membertype member;
};

table loop {
    1: membertype member;
};

table macro {
    1: membertype member;
};

table map {
    1: membertype member;
};

table match {
    1: membertype member;
};

table mixin {
    1: membertype member;
};

table mod {
    1: membertype member;
};

table module {
    1: membertype member;
};

table move {
    1: membertype member;
};

table mut {
    1: membertype member;
};

table mutable {
    1: membertype member;
};

table namespace {
    1: membertype member;
};

table never {
    1: membertype member;
};

table new {
    1: membertype member;
};

table no_such_method {
    1: membertype member;
};

table noexcept {
    1: membertype member;
};

table none {
    1: membertype member;
};

table not {
    1: membertype member;
};

table not_eq {
    1: membertype member;
};

table null {
    1: membertype member;
};

table nullptr {
    1: membertype member;
};

table num {
    1: membertype member;
};

table object {
    1: membertype member;
};

table offset {
    1: membertype member;
};

table offsetof {
    1: membertype member;
};

table ok {
    1: membertype member;
};

table on_open {
    1: membertype member;
};

table operator {
    1: membertype member;
};

table option {
    1: membertype member;
};

table or {
    1: membertype member;
};

table or_eq {
    1: membertype member;
};

table override {
    1: membertype member;
};

table package {
    1: membertype member;
};

table part {
    1: membertype member;
};

table priv {
    1: membertype member;
};

table private {
    1: membertype member;
};

table proc {
    1: membertype member;
};

table protected {
    1: membertype member;
};

table proxy {
    1: membertype member;
};

table pub {
    1: membertype member;
};

table public {
    1: membertype member;
};

table pure {
    1: membertype member;
};

table range {
    1: membertype member;
};

table ref {
    1: membertype member;
};

table register {
    1: membertype member;
};

table reinterpret_cast {
    1: membertype member;
};

table requires {
    1: membertype member;
};

table result {
    1: membertype member;
};

table rethrow {
    1: membertype member;
};

table return {
    1: membertype member;
};

table rhs {
    1: membertype member;
};

table rune {
    1: membertype member;
};

table runtime_type {
    1: membertype member;
};

table select {
    1: membertype member;
};

table self {
    1: membertype member;
};

table send {
    1: membertype member;
};

table set {
    1: membertype member;
};

table set_controller {
    1: membertype member;
};

table short {
    1: membertype member;
};

table signed {
    1: membertype member;
};

table sizeof {
    1: membertype member;
};

table some {
    1: membertype member;
};

table static {
    1: membertype member;
};

table static_assert {
    1: membertype member;
};

table static_cast {
    1: membertype member;
};

table stream {
    1: membertype member;
};

table string {
    1: membertype member;
};

table struct {
    1: membertype member;
};

table stub {
    1: membertype member;
};

table super {
    1: membertype member;
};

table switch {
    1: membertype member;
};

table synchronized {
    1: membertype member;
};

table template {
    1: membertype member;
};

table this {
    1: membertype member;
};

table thread_local {
    1: membertype member;
};

table throw {
    1: membertype member;
};

table to_string {
    1: membertype member;
};

table trait {
    1: membertype member;
};

table true {
    1: membertype member;
};

table try {
    1: membertype member;
};

table type {
    1: membertype member;
};

table typedef {
    1: membertype member;
};

table typeid {
    1: membertype member;
};

table typename {
    1: membertype member;
};

table typeof {
    1: membertype member;
};

table uint16 {
    1: membertype member;
};

table uint64 {
    1: membertype member;
};

table uint8 {
    1: membertype member;
};

table union {
    1: membertype member;
};

table unknown {
    1: membertype member;
};

table unknown_bytes {
    1: membertype member;
};

[BindingsDenylist = "dart"]
table unknown_data {
    1: membertype member;
};

table unsafe {
    1: membertype member;
};

table unsigned {
    1: membertype member;
};

table unsized {
    1: membertype member;
};

table use {
    1: membertype member;
};

table using {
    1: membertype member;
};

table value {
    1: membertype member;
};

table value_of {
    1: membertype member;
};

table value_union {
    1: membertype member;
};

table values_map {
    1: membertype member;
};

table var {
    1: membertype member;
};

table vec {
    1: membertype member;
};

table virtual {
    1: membertype member;
};

table void {
    1: membertype member;
};

table volatile {
    1: membertype member;
};

table wchar_t {
    1: membertype member;
};

table where {
    1: membertype member;
};

table which {
    1: membertype member;
};

table while {
    1: membertype member;
};

table with {
    1: membertype member;
};

table xor {
    1: membertype member;
};

table xor_eq {
    1: membertype member;
};

table xunion {
    1: membertype member;
};

table yield {
    1: membertype member;
};

table zx {
    1: membertype member;
};

table DangerousMembers {
    1: abstract f0;
    2: alignas f1;
    3: alignof f2;
    4: and f3;
    5: and_eq f4;
    6: as f5;
    7: asm f6;
    8: assert f7;
    9: async f8;
    10: atomic_cancel f9;
    11: atomic_commit f10;
    12: atomic_noexcept f11;
    13: auto f12;
    14: await f13;
    15: become f14;
    16: bitand f15;
    17: bitor f16;
    18: bool f17;
    19: box f18;
    20: break f19;
    21: byte f20;
    215: bytes f214;
    22: case f21;
    23: catch f22;
    24: chan f23;
    25: char f24;
    26: char16_t f25;
    27: char32_t f26;
    28: class f27;
    29: co_await f28;
    30: co_return f29;
    31: co_yield f30;
    32: coding_traits f31;
    33: compl f32;
    34: concept f33;
    35: const f34;
    36: const_cast f35;
    37: constexpr f36;
    38: continue f37;
    39: controller f38;
    40: covariant f39;
    41: crate f40;
    42: decltype f41;
    43: decoder f42;
    44: default f43;
    45: defer f44;
    46: deferred f45;
    47: delete f46;
    48: do f47;
    49: double f48;
    50: dynamic f49;
    51: dynamic_cast f50;
    52: else f51;
    53: encoder f52;
    54: ensure_values_instantiated f53;
    55: enum f54;
    56: empty f55;
    57: err f56;
    58: explicit f57;
    59: export f58;
    60: extends f59;
    61: extern f60;
    62: external f61;
    63: factory f62;
    64: fallthrough f63;
    65: false f64;
    66: fidl f65;
    67: fidl_type f66;
    68: final f67;
    69: finally f68;
    70: float f69;
    71: fn f70;
    72: for f71;
    73: friend f72;
    74: func f73;
    75: future f74;
    76: futures f75;
    77: get f76;
    78: go f77;
    79: goto f78;
    80: has_invalid_tag f79;
    81: hash_code f80;
    82: if f81;
    83: impl f82;
    84: implements f83;
    85: import f84;
    86: in f85;
    87: index f86;
    88: inline f87;
    89: int f88;
    90: int16 f89;
    91: int32 f90;
    92: int64 f91;
    93: int8 f92;
    94: interface f93;
    95: internal_tag f94;
    96: is f95;
    97: let f96;
    98: lhs f97;
    99: library f98;
    100: list f99;
    101: long f100;
    102: loop f101;
    103: macro f102;
    104: map f103;
    105: match f104;
    106: mixin f105;
    107: mod f106;
    108: module f107;
    109: move f108;
    110: mut f109;
    111: mutable f110;
    112: namespace f111;
    113: never f112;
    114: new f113;
    115: no_such_method f114;
    116: noexcept f115;
    117: none f116;
    118: not f117;
    119: not_eq f118;
    120: null f119;
    121: nullptr f120;
    122: num f121;
    123: object f122;
    124: offset f123;
    125: offsetof f124;
    126: ok f125;
    127: on_open f126;
    128: operator f127;
    129: option f128;
    130: or f129;
    131: or_eq f130;
    132: override f131;
    133: package f132;
    134: part f133;
    135: priv f134;
    136: private f135;
    137: proc f136;
    138: protected f137;
    139: proxy f138;
    140: pub f139;
    141: public f140;
    142: pure f141;
    143: range f142;
    144: ref f143;
    145: register f144;
    146: reinterpret_cast f145;
    147: requires f146;
    148: result f147;
    149: rethrow f148;
    150: return f149;
    151: rhs f150;
    152: rune f151;
    153: runtime_type f152;
    154: select f153;
    155: self f154;
    156: send f155;
    157: set f156;
    158: set_controller f157;
    159: short f158;
    160: signed f159;
    161: sizeof f160;
    162: some f161;
    163: static f162;
    164: static_assert f163;
    165: static_cast f164;
    166: stream f165;
    167: string f166;
    168: struct f167;
    169: stub f168;
    170: super f169;
    171: switch f170;
    172: synchronized f171;
    173: template f172;
    174: this f173;
    175: thread_local f174;
    176: throw f175;
    177: to_string f176;
    178: trait f177;
    179: true f178;
    180: try f179;
    181: type f180;
    182: typedef f181;
    183: typeid f182;
    184: typename f183;
    185: typeof f184;
    186: uint16 f185;
    187: uint32 f186;
    188: uint64 f187;
    189: uint8 f188;
    190: union f189;
    216: unknown f215;
    217: unknown_bytes f216;
    [BindingsDenylist = "dart"]
    218: unknown_data f217;
    191: unsafe f190;
    192: unsigned f191;
    193: unsized f192;
    194: use f193;
    195: using f194;
    196: value f195;
    197: value_of f196;
    198: value_union f197;
    199: values_map f198;
    200: var f199;
    201: vec f200;
    202: virtual f201;
    203: void f202;
    204: volatile f203;
    205: wchar_t f204;
    206: where f205;
    207: which f206;
    208: while f207;
    209: with f208;
    210: xor f209;
    211: xor_eq f210;
    212: xunion f211;
    213: yield f212;
    214: zx f213;
};
