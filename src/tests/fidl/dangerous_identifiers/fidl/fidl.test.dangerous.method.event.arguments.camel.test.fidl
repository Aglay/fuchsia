// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.method.event.arguments.camel;
using argtype = uint32;

protocol DangerousResponseArguments {
    -> Event0(argtype Abstract);
    -> Event1(argtype Alignas);
    -> Event2(argtype Alignof);
    -> Event3(argtype And);
    -> Event4(argtype AndEq);
    -> Event5(argtype As);
    -> Event6(argtype Asm);
    -> Event7(argtype Assert);
    -> Event8(argtype Async);
    -> Event9(argtype AtomicCancel);
    -> Event10(argtype AtomicCommit);
    -> Event11(argtype AtomicNoexcept);
    -> Event12(argtype Auto);
    -> Event13(argtype Await);
    -> Event14(argtype Become);
    -> Event15(argtype Bitand);
    -> Event16(argtype Bitor);
    -> Event17(argtype Bool);
    -> Event18(argtype Box);
    -> Event19(argtype Break);
    -> Event20(argtype Byte);
    -> Event21(argtype Case);
    -> Event22(argtype Catch);
    -> Event23(argtype Chan);
    -> Event24(argtype Char);
    -> Event25(argtype Char16T);
    -> Event26(argtype Char32T);
    -> Event27(argtype Class);
    -> Event28(argtype CoAwait);
    -> Event29(argtype CoReturn);
    -> Event30(argtype CoYield);
    -> Event31(argtype CodingTraits);
    -> Event32(argtype Compl);
    -> Event33(argtype Concept);
    -> Event34(argtype Const);
    -> Event35(argtype ConstCast);
    -> Event36(argtype Constexpr);
    -> Event37(argtype Continue);
    -> Event38(argtype Controller);
    -> Event39(argtype Covariant);
    -> Event40(argtype Crate);
    -> Event41(argtype Decltype);
    -> Event42(argtype Decoder);
    -> Event43(argtype Default);
    -> Event44(argtype Defer);
    -> Event45(argtype Deferred);
    -> Event46(argtype Delete);
    -> Event47(argtype Do);
    -> Event48(argtype Double);
    -> Event49(argtype Dynamic);
    -> Event50(argtype DynamicCast);
    -> Event51(argtype Else);
    -> Event52(argtype Encoder);
    -> Event53(argtype EnsureValuesInstantiated);
    -> Event54(argtype Enum);
    -> Event55(argtype Empty);
    -> Event56(argtype Err);
    -> Event57(argtype Explicit);
    -> Event58(argtype Export);
    -> Event59(argtype Extends);
    -> Event60(argtype Extern);
    -> Event61(argtype External);
    -> Event62(argtype Factory);
    -> Event63(argtype Fallthrough);
    -> Event64(argtype False);
    -> Event65(argtype Fidl);
    -> Event66(argtype FidlType);
    -> Event67(argtype Final);
    -> Event68(argtype Finally);
    -> Event69(argtype Float);
    -> Event70(argtype Fn);
    -> Event71(argtype For);
    -> Event72(argtype Friend);
    -> Event73(argtype Func);
    -> Event74(argtype Future);
    -> Event75(argtype Futures);
    -> Event76(argtype Get);
    -> Event77(argtype Go);
    -> Event78(argtype Goto);
    -> Event79(argtype HasInvalidTag);
    -> Event80(argtype HashCode);
    -> Event81(argtype If);
    -> Event82(argtype Impl);
    -> Event83(argtype Implements);
    -> Event84(argtype Import);
    -> Event85(argtype In);
    -> Event86(argtype Index);
    -> Event87(argtype Inline);
    -> Event88(argtype Int);
    -> Event89(argtype Int16);
    -> Event90(argtype Int32);
    -> Event91(argtype Int64);
    -> Event92(argtype Int8);
    -> Event93(argtype Interface);
    -> Event94(argtype InternalTag);
    -> Event95(argtype Is);
    -> Event96(argtype Let);
    -> Event97(argtype Lhs);
    -> Event98(argtype Library);
    -> Event99(argtype List);
    -> Event100(argtype Long);
    -> Event101(argtype Loop);
    -> Event102(argtype Macro);
    -> Event103(argtype Map);
    -> Event104(argtype Match);
    -> Event105(argtype Mixin);
    -> Event106(argtype Mod);
    -> Event107(argtype Module);
    -> Event108(argtype Move);
    -> Event109(argtype Mut);
    -> Event110(argtype Mutable);
    -> Event111(argtype Namespace);
    -> Event112(argtype Never);
    -> Event113(argtype New);
    -> Event114(argtype NoSuchMethod);
    -> Event115(argtype Noexcept);
    -> Event116(argtype None);
    -> Event117(argtype Not);
    -> Event118(argtype NotEq);
    -> Event119(argtype Null);
    -> Event120(argtype Nullptr);
    -> Event121(argtype Num);
    -> Event122(argtype Object);
    -> Event123(argtype Offset);
    -> Event124(argtype Offsetof);
    -> Event125(argtype Ok);
    -> Event126(argtype OnOpen);
    -> Event127(argtype Operator);
    -> Event128(argtype Option);
    -> Event129(argtype Or);
    -> Event130(argtype OrEq);
    -> Event131(argtype Override);
    -> Event132(argtype Package);
    -> Event133(argtype Part);
    -> Event134(argtype Priv);
    -> Event135(argtype Private);
    -> Event136(argtype Proc);
    -> Event137(argtype Protected);
    -> Event138(argtype Proxy);
    -> Event139(argtype Pub);
    -> Event140(argtype Public);
    -> Event141(argtype Pure);
    -> Event142(argtype Range);
    -> Event143(argtype Ref);
    -> Event144(argtype Register);
    -> Event145(argtype ReinterpretCast);
    -> Event146(argtype Requires);
    -> Event147(argtype Result);
    -> Event148(argtype Rethrow);
    -> Event149(argtype Return);
    -> Event150(argtype Rhs);
    -> Event151(argtype Rune);
    -> Event152(argtype RuntimeType);
    -> Event153(argtype Select);
    -> Event154(argtype Self);
    -> Event155(argtype Send);
    -> Event156(argtype Set);
    -> Event157(argtype SetController);
    -> Event158(argtype Short);
    -> Event159(argtype Signed);
    -> Event160(argtype Sizeof);
    -> Event161(argtype Some);
    -> Event162(argtype Static);
    -> Event163(argtype StaticAssert);
    -> Event164(argtype StaticCast);
    -> Event165(argtype Stream);
    -> Event166(argtype String);
    -> Event167(argtype Struct);
    -> Event168(argtype Stub);
    -> Event169(argtype Super);
    -> Event170(argtype Switch);
    -> Event171(argtype Synchronized);
    -> Event172(argtype Template);
    -> Event173(argtype This);
    -> Event174(argtype ThreadLocal);
    -> Event175(argtype Throw);
    -> Event176(argtype ToString);
    -> Event177(argtype Trait);
    -> Event178(argtype True);
    -> Event179(argtype Try);
    -> Event180(argtype Type);
    -> Event181(argtype Typedef);
    -> Event182(argtype Typeid);
    -> Event183(argtype Typename);
    -> Event184(argtype Typeof);
    -> Event185(argtype Uint16);
    -> Event186(argtype Uint32);
    -> Event187(argtype Uint64);
    -> Event188(argtype Uint8);
    -> Event189(argtype Union);
    -> Event190(argtype Unsafe);
    -> Event191(argtype Unsigned);
    -> Event192(argtype Unsized);
    -> Event193(argtype Use);
    -> Event194(argtype Using);
    -> Event195(argtype Value);
    -> Event196(argtype ValueOf);
    -> Event197(argtype ValueUnion);
    -> Event198(argtype ValuesMap);
    -> Event199(argtype Var);
    -> Event200(argtype Vec);
    -> Event201(argtype Virtual);
    -> Event202(argtype Void);
    -> Event203(argtype Volatile);
    -> Event204(argtype WcharT);
    -> Event205(argtype Where);
    -> Event206(argtype Which);
    -> Event207(argtype While);
    -> Event208(argtype With);
    -> Event209(argtype Xor);
    -> Event210(argtype XorEq);
    -> Event211(argtype Xunion);
    -> Event212(argtype Yield);
    -> Event213(argtype Zx);
};
