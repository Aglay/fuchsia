// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.method.event.arguments.upper;
using argtype = uint32;

protocol DangerousResponseArguments {
    -> Event0(argtype ABSTRACT);
    -> Event1(argtype ALIGNAS);
    -> Event2(argtype ALIGNOF);
    -> Event3(argtype AND);
    -> Event4(argtype AND_EQ);
    -> Event5(argtype AS);
    -> Event6(argtype ASM);
    -> Event7(argtype ASSERT);
    -> Event8(argtype ASYNC);
    -> Event9(argtype ATOMIC_CANCEL);
    -> Event10(argtype ATOMIC_COMMIT);
    -> Event11(argtype ATOMIC_NOEXCEPT);
    -> Event12(argtype AUTO);
    -> Event13(argtype AWAIT);
    -> Event14(argtype BECOME);
    -> Event15(argtype BITAND);
    -> Event16(argtype BITOR);
    -> Event17(argtype BOOL);
    -> Event18(argtype BOX);
    -> Event19(argtype BREAK);
    -> Event20(argtype BYTE);
    -> Event214(argtype BYTES);
    -> Event21(argtype CASE);
    -> Event22(argtype CATCH);
    -> Event23(argtype CHAN);
    -> Event24(argtype CHAR);
    -> Event25(argtype CHAR16_T);
    -> Event26(argtype CHAR32_T);
    -> Event27(argtype CLASS);
    -> Event28(argtype CO_AWAIT);
    -> Event29(argtype CO_RETURN);
    -> Event30(argtype CO_YIELD);
    -> Event31(argtype CODING_TRAITS);
    -> Event32(argtype COMPL);
    -> Event33(argtype CONCEPT);
    -> Event34(argtype CONST);
    -> Event35(argtype CONST_CAST);
    -> Event36(argtype CONSTEXPR);
    -> Event37(argtype CONTINUE);
    -> Event38(argtype CONTROLLER);
    -> Event39(argtype COVARIANT);
    -> Event40(argtype CRATE);
    -> Event41(argtype DECLTYPE);
    -> Event42(argtype DECODER);
    -> Event43(argtype DEFAULT);
    -> Event44(argtype DEFER);
    -> Event45(argtype DEFERRED);
    -> Event46(argtype DELETE);
    -> Event47(argtype DO);
    -> Event48(argtype DOUBLE);
    -> Event49(argtype DYNAMIC);
    -> Event50(argtype DYNAMIC_CAST);
    -> Event51(argtype ELSE);
    -> Event52(argtype ENCODER);
    -> Event53(argtype ENSURE_VALUES_INSTANTIATED);
    -> Event54(argtype ENUM);
    -> Event55(argtype EMPTY);
    -> Event56(argtype ERR);
    -> Event57(argtype EXPLICIT);
    -> Event58(argtype EXPORT);
    -> Event59(argtype EXTENDS);
    -> Event60(argtype EXTERN);
    -> Event61(argtype EXTERNAL);
    -> Event62(argtype FACTORY);
    -> Event63(argtype FALLTHROUGH);
    -> Event64(argtype FALSE);
    -> Event65(argtype FIDL);
    -> Event66(argtype FIDL_TYPE);
    -> Event67(argtype FINAL);
    -> Event68(argtype FINALLY);
    -> Event69(argtype FLOAT);
    -> Event70(argtype FN);
    -> Event71(argtype FOR);
    -> Event72(argtype FRIEND);
    -> Event73(argtype FUNC);
    -> Event74(argtype FUTURE);
    -> Event75(argtype FUTURES);
    -> Event76(argtype GET);
    -> Event77(argtype GO);
    -> Event78(argtype GOTO);
    -> Event79(argtype HAS_INVALID_TAG);
    -> Event80(argtype HASH_CODE);
    -> Event81(argtype IF);
    -> Event82(argtype IMPL);
    -> Event83(argtype IMPLEMENTS);
    -> Event84(argtype IMPORT);
    -> Event85(argtype IN);
    -> Event86(argtype INDEX);
    -> Event87(argtype INLINE);
    -> Event88(argtype INT);
    -> Event89(argtype INT16);
    -> Event90(argtype INT32);
    -> Event91(argtype INT64);
    -> Event92(argtype INT8);
    -> Event93(argtype INTERFACE);
    -> Event94(argtype INTERNAL_TAG);
    -> Event95(argtype IS);
    -> Event96(argtype LET);
    -> Event97(argtype LHS);
    -> Event98(argtype LIBRARY);
    -> Event99(argtype LIST);
    -> Event100(argtype LONG);
    -> Event101(argtype LOOP);
    -> Event102(argtype MACRO);
    -> Event103(argtype MAP);
    -> Event104(argtype MATCH);
    -> Event105(argtype MIXIN);
    -> Event106(argtype MOD);
    -> Event107(argtype MODULE);
    -> Event108(argtype MOVE);
    -> Event109(argtype MUT);
    -> Event110(argtype MUTABLE);
    -> Event111(argtype NAMESPACE);
    -> Event112(argtype NEVER);
    -> Event113(argtype NEW);
    -> Event114(argtype NO_SUCH_METHOD);
    -> Event115(argtype NOEXCEPT);
    -> Event116(argtype NONE);
    -> Event117(argtype NOT);
    -> Event118(argtype NOT_EQ);
    -> Event119(argtype NULL);
    -> Event120(argtype NULLPTR);
    -> Event121(argtype NUM);
    -> Event122(argtype OBJECT);
    -> Event123(argtype OFFSET);
    -> Event124(argtype OFFSETOF);
    -> Event125(argtype OK);
    -> Event126(argtype ON_OPEN);
    -> Event127(argtype OPERATOR);
    -> Event128(argtype OPTION);
    -> Event129(argtype OR);
    -> Event130(argtype OR_EQ);
    -> Event131(argtype OVERRIDE);
    -> Event132(argtype PACKAGE);
    -> Event133(argtype PART);
    -> Event134(argtype PRIV);
    -> Event135(argtype PRIVATE);
    -> Event136(argtype PROC);
    -> Event137(argtype PROTECTED);
    -> Event138(argtype PROXY);
    -> Event139(argtype PUB);
    -> Event140(argtype PUBLIC);
    -> Event141(argtype PURE);
    -> Event142(argtype RANGE);
    -> Event143(argtype REF);
    -> Event144(argtype REGISTER);
    -> Event145(argtype REINTERPRET_CAST);
    -> Event146(argtype REQUIRES);
    -> Event147(argtype RESULT);
    -> Event148(argtype RETHROW);
    -> Event149(argtype RETURN);
    -> Event150(argtype RHS);
    -> Event151(argtype RUNE);
    -> Event152(argtype RUNTIME_TYPE);
    -> Event153(argtype SELECT);
    -> Event154(argtype SELF);
    -> Event155(argtype SEND);
    -> Event156(argtype SET);
    -> Event157(argtype SET_CONTROLLER);
    -> Event158(argtype SHORT);
    -> Event159(argtype SIGNED);
    -> Event160(argtype SIZEOF);
    -> Event161(argtype SOME);
    -> Event162(argtype STATIC);
    -> Event163(argtype STATIC_ASSERT);
    -> Event164(argtype STATIC_CAST);
    -> Event165(argtype STREAM);
    -> Event166(argtype STRING);
    -> Event167(argtype STRUCT);
    -> Event168(argtype STUB);
    -> Event169(argtype SUPER);
    -> Event170(argtype SWITCH);
    -> Event171(argtype SYNCHRONIZED);
    -> Event172(argtype TEMPLATE);
    -> Event173(argtype THIS);
    -> Event174(argtype THREAD_LOCAL);
    -> Event175(argtype THROW);
    -> Event176(argtype TO_STRING);
    -> Event177(argtype TRAIT);
    -> Event178(argtype TRUE);
    -> Event179(argtype TRY);
    -> Event180(argtype TYPE);
    -> Event181(argtype TYPEDEF);
    -> Event182(argtype TYPEID);
    -> Event183(argtype TYPENAME);
    -> Event184(argtype TYPEOF);
    -> Event185(argtype UINT16);
    -> Event186(argtype UINT32);
    -> Event187(argtype UINT64);
    -> Event188(argtype UINT8);
    -> Event189(argtype UNION);
    -> Event215(argtype UNKNOWN);
    -> Event216(argtype UNKNOWN_BYTES);
    [BindingsDenylist = "dart"]
    -> Event217(argtype UNKNOWN_DATA);
    -> Event190(argtype UNSAFE);
    -> Event191(argtype UNSIGNED);
    -> Event192(argtype UNSIZED);
    -> Event193(argtype USE);
    -> Event194(argtype USING);
    -> Event195(argtype VALUE);
    -> Event196(argtype VALUE_OF);
    -> Event197(argtype VALUE_UNION);
    -> Event198(argtype VALUES_MAP);
    -> Event199(argtype VAR);
    -> Event200(argtype VEC);
    -> Event201(argtype VIRTUAL);
    -> Event202(argtype VOID);
    -> Event203(argtype VOLATILE);
    -> Event204(argtype WCHAR_T);
    -> Event205(argtype WHERE);
    -> Event206(argtype WHICH);
    -> Event207(argtype WHILE);
    -> Event208(argtype WITH);
    -> Event209(argtype XOR);
    -> Event210(argtype XOR_EQ);
    -> Event211(argtype XUNION);
    -> Event212(argtype YIELD);
    -> Event213(argtype ZX);
};
