// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by //src/tests/fidl/dangerous_identifiers/generate.
library fidl.test.dangerous.enums.camel;

enum Abstract {
    MEMBER = 1;
};

enum Alignas {
    MEMBER = 1;
};

enum Alignof {
    MEMBER = 1;
};

enum And {
    MEMBER = 1;
};

enum AndEq {
    MEMBER = 1;
};

enum As {
    MEMBER = 1;
};

enum Asm {
    MEMBER = 1;
};

enum Assert {
    MEMBER = 1;
};

enum Async {
    MEMBER = 1;
};

enum AtomicCancel {
    MEMBER = 1;
};

enum AtomicCommit {
    MEMBER = 1;
};

enum AtomicNoexcept {
    MEMBER = 1;
};

enum Auto {
    MEMBER = 1;
};

enum Await {
    MEMBER = 1;
};

enum Become {
    MEMBER = 1;
};

enum Bitand {
    MEMBER = 1;
};

enum Bitor {
    MEMBER = 1;
};

enum Bool {
    MEMBER = 1;
};

enum Box {
    MEMBER = 1;
};

enum Break {
    MEMBER = 1;
};

enum Byte {
    MEMBER = 1;
};

enum Bytes {
    MEMBER = 1;
};

enum Case {
    MEMBER = 1;
};

enum Catch {
    MEMBER = 1;
};

enum Chan {
    MEMBER = 1;
};

enum Char {
    MEMBER = 1;
};

enum Char16T {
    MEMBER = 1;
};

enum Char32T {
    MEMBER = 1;
};

enum Class {
    MEMBER = 1;
};

enum CoAwait {
    MEMBER = 1;
};

enum CoReturn {
    MEMBER = 1;
};

enum CoYield {
    MEMBER = 1;
};

enum CodingTraits {
    MEMBER = 1;
};

enum Compl {
    MEMBER = 1;
};

enum Concept {
    MEMBER = 1;
};

enum Const {
    MEMBER = 1;
};

enum ConstCast {
    MEMBER = 1;
};

enum Constexpr {
    MEMBER = 1;
};

enum Continue {
    MEMBER = 1;
};

enum Controller {
    MEMBER = 1;
};

enum Covariant {
    MEMBER = 1;
};

enum Crate {
    MEMBER = 1;
};

enum Decltype {
    MEMBER = 1;
};

enum Decoder {
    MEMBER = 1;
};

enum Default {
    MEMBER = 1;
};

enum Defer {
    MEMBER = 1;
};

enum Deferred {
    MEMBER = 1;
};

enum Delete {
    MEMBER = 1;
};

enum Do {
    MEMBER = 1;
};

enum Double {
    MEMBER = 1;
};

enum Dynamic {
    MEMBER = 1;
};

enum DynamicCast {
    MEMBER = 1;
};

enum Else {
    MEMBER = 1;
};

enum Encoder {
    MEMBER = 1;
};

enum EnsureValuesInstantiated {
    MEMBER = 1;
};

enum Enum {
    MEMBER = 1;
};

enum Empty {
    MEMBER = 1;
};

enum Err {
    MEMBER = 1;
};

enum Explicit {
    MEMBER = 1;
};

enum Export {
    MEMBER = 1;
};

enum Extends {
    MEMBER = 1;
};

enum Extern {
    MEMBER = 1;
};

enum External {
    MEMBER = 1;
};

enum Factory {
    MEMBER = 1;
};

enum Fallthrough {
    MEMBER = 1;
};

enum False {
    MEMBER = 1;
};

enum Fidl {
    MEMBER = 1;
};

enum FidlType {
    MEMBER = 1;
};

enum Final {
    MEMBER = 1;
};

enum Finally {
    MEMBER = 1;
};

enum Float {
    MEMBER = 1;
};

enum Fn {
    MEMBER = 1;
};

enum For {
    MEMBER = 1;
};

enum Friend {
    MEMBER = 1;
};

enum Func {
    MEMBER = 1;
};

enum Future {
    MEMBER = 1;
};

enum Futures {
    MEMBER = 1;
};

enum Get {
    MEMBER = 1;
};

enum Go {
    MEMBER = 1;
};

enum Goto {
    MEMBER = 1;
};

enum HasInvalidTag {
    MEMBER = 1;
};

enum HashCode {
    MEMBER = 1;
};

enum If {
    MEMBER = 1;
};

enum Impl {
    MEMBER = 1;
};

enum Implements {
    MEMBER = 1;
};

enum Import {
    MEMBER = 1;
};

enum In {
    MEMBER = 1;
};

enum Index {
    MEMBER = 1;
};

enum Inline {
    MEMBER = 1;
};

enum Int {
    MEMBER = 1;
};

enum Int16 {
    MEMBER = 1;
};

enum Int32 {
    MEMBER = 1;
};

enum Int64 {
    MEMBER = 1;
};

enum Int8 {
    MEMBER = 1;
};

enum Interface {
    MEMBER = 1;
};

enum InternalTag {
    MEMBER = 1;
};

enum Is {
    MEMBER = 1;
};

enum Let {
    MEMBER = 1;
};

enum Lhs {
    MEMBER = 1;
};

enum Library {
    MEMBER = 1;
};

enum List {
    MEMBER = 1;
};

enum Long {
    MEMBER = 1;
};

enum Loop {
    MEMBER = 1;
};

enum Macro {
    MEMBER = 1;
};

enum Map {
    MEMBER = 1;
};

enum Match {
    MEMBER = 1;
};

enum Mixin {
    MEMBER = 1;
};

enum Mod {
    MEMBER = 1;
};

enum Module {
    MEMBER = 1;
};

enum Move {
    MEMBER = 1;
};

enum Mut {
    MEMBER = 1;
};

enum Mutable {
    MEMBER = 1;
};

enum Namespace {
    MEMBER = 1;
};

enum Never {
    MEMBER = 1;
};

enum New {
    MEMBER = 1;
};

enum NoSuchMethod {
    MEMBER = 1;
};

enum Noexcept {
    MEMBER = 1;
};

enum None {
    MEMBER = 1;
};

enum Not {
    MEMBER = 1;
};

enum NotEq {
    MEMBER = 1;
};

enum Null {
    MEMBER = 1;
};

enum Nullptr {
    MEMBER = 1;
};

enum Num {
    MEMBER = 1;
};

enum Object {
    MEMBER = 1;
};

enum Offset {
    MEMBER = 1;
};

enum Offsetof {
    MEMBER = 1;
};

enum Ok {
    MEMBER = 1;
};

enum OnOpen {
    MEMBER = 1;
};

enum Operator {
    MEMBER = 1;
};

enum Option {
    MEMBER = 1;
};

enum Or {
    MEMBER = 1;
};

enum OrEq {
    MEMBER = 1;
};

enum Override {
    MEMBER = 1;
};

enum Package {
    MEMBER = 1;
};

enum Part {
    MEMBER = 1;
};

enum Priv {
    MEMBER = 1;
};

enum Private {
    MEMBER = 1;
};

enum Proc {
    MEMBER = 1;
};

enum Protected {
    MEMBER = 1;
};

enum Proxy {
    MEMBER = 1;
};

enum Pub {
    MEMBER = 1;
};

enum Public {
    MEMBER = 1;
};

enum Pure {
    MEMBER = 1;
};

enum Range {
    MEMBER = 1;
};

enum Ref {
    MEMBER = 1;
};

enum Register {
    MEMBER = 1;
};

enum ReinterpretCast {
    MEMBER = 1;
};

enum Requires {
    MEMBER = 1;
};

enum Result {
    MEMBER = 1;
};

enum Rethrow {
    MEMBER = 1;
};

enum Return {
    MEMBER = 1;
};

enum Rhs {
    MEMBER = 1;
};

enum Rune {
    MEMBER = 1;
};

enum RuntimeType {
    MEMBER = 1;
};

enum Select {
    MEMBER = 1;
};

enum Self {
    MEMBER = 1;
};

enum Send {
    MEMBER = 1;
};

enum Set {
    MEMBER = 1;
};

enum SetController {
    MEMBER = 1;
};

enum Short {
    MEMBER = 1;
};

enum Signed {
    MEMBER = 1;
};

enum Sizeof {
    MEMBER = 1;
};

enum Some {
    MEMBER = 1;
};

enum Static {
    MEMBER = 1;
};

enum StaticAssert {
    MEMBER = 1;
};

enum StaticCast {
    MEMBER = 1;
};

enum Stream {
    MEMBER = 1;
};

enum String {
    MEMBER = 1;
};

enum Struct {
    MEMBER = 1;
};

enum Stub {
    MEMBER = 1;
};

enum Super {
    MEMBER = 1;
};

enum Switch {
    MEMBER = 1;
};

enum Synchronized {
    MEMBER = 1;
};

enum Template {
    MEMBER = 1;
};

enum This {
    MEMBER = 1;
};

enum ThreadLocal {
    MEMBER = 1;
};

enum Throw {
    MEMBER = 1;
};

enum ToString {
    MEMBER = 1;
};

enum Trait {
    MEMBER = 1;
};

enum True {
    MEMBER = 1;
};

enum Try {
    MEMBER = 1;
};

enum Type {
    MEMBER = 1;
};

enum Typedef {
    MEMBER = 1;
};

enum Typeid {
    MEMBER = 1;
};

enum Typename {
    MEMBER = 1;
};

enum Typeof {
    MEMBER = 1;
};

enum Uint16 {
    MEMBER = 1;
};

enum Uint32 {
    MEMBER = 1;
};

enum Uint64 {
    MEMBER = 1;
};

enum Uint8 {
    MEMBER = 1;
};

enum Union {
    MEMBER = 1;
};

enum Unknown {
    MEMBER = 1;
};

enum UnknownBytes {
    MEMBER = 1;
};

[BindingsDenylist = "dart"]
enum UnknownData {
    MEMBER = 1;
};

enum Unsafe {
    MEMBER = 1;
};

enum Unsigned {
    MEMBER = 1;
};

enum Unsized {
    MEMBER = 1;
};

enum Use {
    MEMBER = 1;
};

enum Using {
    MEMBER = 1;
};

enum Value {
    MEMBER = 1;
};

enum ValueOf {
    MEMBER = 1;
};

enum ValueUnion {
    MEMBER = 1;
};

enum ValuesMap {
    MEMBER = 1;
};

enum Var {
    MEMBER = 1;
};

enum Vec {
    MEMBER = 1;
};

enum Virtual {
    MEMBER = 1;
};

enum Void {
    MEMBER = 1;
};

enum Volatile {
    MEMBER = 1;
};

enum WcharT {
    MEMBER = 1;
};

enum Where {
    MEMBER = 1;
};

enum Which {
    MEMBER = 1;
};

enum While {
    MEMBER = 1;
};

enum With {
    MEMBER = 1;
};

enum Xor {
    MEMBER = 1;
};

enum XorEq {
    MEMBER = 1;
};

enum Xunion {
    MEMBER = 1;
};

enum Yield {
    MEMBER = 1;
};

enum Zx {
    MEMBER = 1;
};

enum DangerousMembers {
    Abstract = 0;
    Alignas = 1;
    Alignof = 2;
    And = 3;
    AndEq = 4;
    As = 5;
    Asm = 6;
    Assert = 7;
    Async = 8;
    AtomicCancel = 9;
    AtomicCommit = 10;
    AtomicNoexcept = 11;
    Auto = 12;
    Await = 13;
    Become = 14;
    Bitand = 15;
    Bitor = 16;
    Bool = 17;
    Box = 18;
    Break = 19;
    Byte = 20;
    Bytes = 214;
    Case = 21;
    Catch = 22;
    Chan = 23;
    Char = 24;
    Char16T = 25;
    Char32T = 26;
    Class = 27;
    CoAwait = 28;
    CoReturn = 29;
    CoYield = 30;
    CodingTraits = 31;
    Compl = 32;
    Concept = 33;
    Const = 34;
    ConstCast = 35;
    Constexpr = 36;
    Continue = 37;
    Controller = 38;
    Covariant = 39;
    Crate = 40;
    Decltype = 41;
    Decoder = 42;
    Default = 43;
    Defer = 44;
    Deferred = 45;
    Delete = 46;
    Do = 47;
    Double = 48;
    Dynamic = 49;
    DynamicCast = 50;
    Else = 51;
    Encoder = 52;
    EnsureValuesInstantiated = 53;
    Enum = 54;
    Empty = 55;
    Err = 56;
    Explicit = 57;
    Export = 58;
    Extends = 59;
    Extern = 60;
    External = 61;
    Factory = 62;
    Fallthrough = 63;
    False = 64;
    Fidl = 65;
    FidlType = 66;
    Final = 67;
    Finally = 68;
    Float = 69;
    Fn = 70;
    For = 71;
    Friend = 72;
    Func = 73;
    Future = 74;
    Futures = 75;
    Get = 76;
    Go = 77;
    Goto = 78;
    HasInvalidTag = 79;
    HashCode = 80;
    If = 81;
    Impl = 82;
    Implements = 83;
    Import = 84;
    In = 85;
    Index = 86;
    Inline = 87;
    Int = 88;
    Int16 = 89;
    Int32 = 90;
    Int64 = 91;
    Int8 = 92;
    Interface = 93;
    InternalTag = 94;
    Is = 95;
    Let = 96;
    Lhs = 97;
    Library = 98;
    List = 99;
    Long = 100;
    Loop = 101;
    Macro = 102;
    Map = 103;
    Match = 104;
    Mixin = 105;
    Mod = 106;
    Module = 107;
    Move = 108;
    Mut = 109;
    Mutable = 110;
    Namespace = 111;
    Never = 112;
    New = 113;
    NoSuchMethod = 114;
    Noexcept = 115;
    None = 116;
    Not = 117;
    NotEq = 118;
    Null = 119;
    Nullptr = 120;
    Num = 121;
    Object = 122;
    Offset = 123;
    Offsetof = 124;
    Ok = 125;
    OnOpen = 126;
    Operator = 127;
    Option = 128;
    Or = 129;
    OrEq = 130;
    Override = 131;
    Package = 132;
    Part = 133;
    Priv = 134;
    Private = 135;
    Proc = 136;
    Protected = 137;
    Proxy = 138;
    Pub = 139;
    Public = 140;
    Pure = 141;
    Range = 142;
    Ref = 143;
    Register = 144;
    ReinterpretCast = 145;
    Requires = 146;
    Result = 147;
    Rethrow = 148;
    Return = 149;
    Rhs = 150;
    Rune = 151;
    RuntimeType = 152;
    Select = 153;
    Self = 154;
    Send = 155;
    Set = 156;
    SetController = 157;
    Short = 158;
    Signed = 159;
    Sizeof = 160;
    Some = 161;
    Static = 162;
    StaticAssert = 163;
    StaticCast = 164;
    Stream = 165;
    String = 166;
    Struct = 167;
    Stub = 168;
    Super = 169;
    Switch = 170;
    Synchronized = 171;
    Template = 172;
    This = 173;
    ThreadLocal = 174;
    Throw = 175;
    ToString = 176;
    Trait = 177;
    True = 178;
    Try = 179;
    Type = 180;
    Typedef = 181;
    Typeid = 182;
    Typename = 183;
    Typeof = 184;
    Uint16 = 185;
    Uint32 = 186;
    Uint64 = 187;
    Uint8 = 188;
    Union = 189;
    Unknown = 215;
    UnknownBytes = 216;
    [BindingsDenylist = "dart"]
    UnknownData = 217;
    Unsafe = 190;
    Unsigned = 191;
    Unsized = 192;
    Use = 193;
    Using = 194;
    Value = 195;
    ValueOf = 196;
    ValueUnion = 197;
    ValuesMap = 198;
    Var = 199;
    Vec = 200;
    Virtual = 201;
    Void = 202;
    Volatile = 203;
    WcharT = 204;
    Where = 205;
    Which = 206;
    While = 207;
    With = 208;
    Xor = 209;
    XorEq = 210;
    Xunion = 211;
    Yield = 212;
    Zx = 213;
};
