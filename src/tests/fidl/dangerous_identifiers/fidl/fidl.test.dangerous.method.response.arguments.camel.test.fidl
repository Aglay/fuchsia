// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by //src/tests/fidl/dangerous_identifiers/generate.
library fidl.test.dangerous.method.response.arguments.camel;
alias argtype = uint32;

protocol DangerousResponseArguments {
    Method0() -> (argtype Abstract);
    Method1() -> (argtype Alignas);
    Method2() -> (argtype Alignof);
    Method3() -> (argtype And);
    Method4() -> (argtype AndEq);
    Method5() -> (argtype As);
    Method6() -> (argtype Asm);
    Method7() -> (argtype Assert);
    Method8() -> (argtype Async);
    Method9() -> (argtype AtomicCancel);
    Method10() -> (argtype AtomicCommit);
    Method11() -> (argtype AtomicNoexcept);
    Method12() -> (argtype Auto);
    Method13() -> (argtype Await);
    Method14() -> (argtype Become);
    Method15() -> (argtype Bitand);
    Method16() -> (argtype Bitor);
    Method17() -> (argtype Bool);
    Method18() -> (argtype Box);
    Method19() -> (argtype Break);
    Method20() -> (argtype Byte);
    Method214() -> (argtype Bytes);
    Method21() -> (argtype Case);
    Method22() -> (argtype Catch);
    Method23() -> (argtype Chan);
    Method24() -> (argtype Char);
    Method25() -> (argtype Char16T);
    Method26() -> (argtype Char32T);
    Method27() -> (argtype Class);
    Method28() -> (argtype CoAwait);
    Method29() -> (argtype CoReturn);
    Method30() -> (argtype CoYield);
    Method31() -> (argtype CodingTraits);
    Method32() -> (argtype Compl);
    Method33() -> (argtype Concept);
    Method34() -> (argtype Const);
    Method35() -> (argtype ConstCast);
    Method36() -> (argtype Constexpr);
    Method37() -> (argtype Continue);
    Method38() -> (argtype Controller);
    Method39() -> (argtype Covariant);
    Method40() -> (argtype Crate);
    Method41() -> (argtype Decltype);
    Method42() -> (argtype Decoder);
    Method43() -> (argtype Default);
    Method44() -> (argtype Defer);
    Method45() -> (argtype Deferred);
    Method46() -> (argtype Delete);
    Method47() -> (argtype Do);
    Method48() -> (argtype Double);
    Method49() -> (argtype Dynamic);
    Method50() -> (argtype DynamicCast);
    Method51() -> (argtype Else);
    Method52() -> (argtype Encoder);
    Method53() -> (argtype EnsureValuesInstantiated);
    Method54() -> (argtype Enum);
    Method55() -> (argtype Empty);
    Method56() -> (argtype Err);
    Method57() -> (argtype Explicit);
    Method58() -> (argtype Export);
    Method59() -> (argtype Extends);
    Method60() -> (argtype Extern);
    Method61() -> (argtype External);
    Method62() -> (argtype Factory);
    Method63() -> (argtype Fallthrough);
    Method64() -> (argtype False);
    Method65() -> (argtype Fidl);
    Method66() -> (argtype FidlType);
    Method67() -> (argtype Final);
    Method68() -> (argtype Finally);
    Method69() -> (argtype Float);
    Method70() -> (argtype Fn);
    Method71() -> (argtype For);
    Method72() -> (argtype Friend);
    Method73() -> (argtype Func);
    Method74() -> (argtype Future);
    Method75() -> (argtype Futures);
    Method76() -> (argtype Get);
    Method77() -> (argtype Go);
    Method78() -> (argtype Goto);
    Method79() -> (argtype HasInvalidTag);
    Method80() -> (argtype HashCode);
    Method81() -> (argtype If);
    Method82() -> (argtype Impl);
    Method83() -> (argtype Implements);
    Method84() -> (argtype Import);
    Method85() -> (argtype In);
    Method86() -> (argtype Index);
    Method87() -> (argtype Inline);
    Method88() -> (argtype Int);
    Method89() -> (argtype Int16);
    Method90() -> (argtype Int32);
    Method91() -> (argtype Int64);
    Method92() -> (argtype Int8);
    Method93() -> (argtype Interface);
    Method94() -> (argtype InternalTag);
    Method95() -> (argtype Is);
    Method96() -> (argtype Let);
    Method97() -> (argtype Lhs);
    Method98() -> (argtype Library);
    Method99() -> (argtype List);
    Method100() -> (argtype Long);
    Method101() -> (argtype Loop);
    Method102() -> (argtype Macro);
    Method103() -> (argtype Map);
    Method104() -> (argtype Match);
    Method105() -> (argtype Mixin);
    Method106() -> (argtype Mod);
    Method107() -> (argtype Module);
    Method108() -> (argtype Move);
    Method109() -> (argtype Mut);
    Method110() -> (argtype Mutable);
    Method111() -> (argtype Namespace);
    Method112() -> (argtype Never);
    Method113() -> (argtype New);
    Method114() -> (argtype NoSuchMethod);
    Method115() -> (argtype Noexcept);
    Method116() -> (argtype None);
    Method117() -> (argtype Not);
    Method118() -> (argtype NotEq);
    Method119() -> (argtype Null);
    Method120() -> (argtype Nullptr);
    Method121() -> (argtype Num);
    Method122() -> (argtype Object);
    Method123() -> (argtype Offset);
    Method124() -> (argtype Offsetof);
    Method125() -> (argtype Ok);
    Method126() -> (argtype OnOpen);
    Method127() -> (argtype Operator);
    Method128() -> (argtype Option);
    Method129() -> (argtype Or);
    Method130() -> (argtype OrEq);
    Method131() -> (argtype Override);
    Method132() -> (argtype Package);
    Method133() -> (argtype Part);
    Method134() -> (argtype Priv);
    Method135() -> (argtype Private);
    Method136() -> (argtype Proc);
    Method137() -> (argtype Protected);
    Method138() -> (argtype Proxy);
    Method139() -> (argtype Pub);
    Method140() -> (argtype Public);
    Method141() -> (argtype Pure);
    Method142() -> (argtype Range);
    Method143() -> (argtype Ref);
    Method144() -> (argtype Register);
    Method145() -> (argtype ReinterpretCast);
    Method146() -> (argtype Requires);
    Method147() -> (argtype Result);
    Method148() -> (argtype Rethrow);
    Method149() -> (argtype Return);
    Method150() -> (argtype Rhs);
    Method151() -> (argtype Rune);
    Method152() -> (argtype RuntimeType);
    Method153() -> (argtype Select);
    Method154() -> (argtype Self);
    Method155() -> (argtype Send);
    Method156() -> (argtype Set);
    Method157() -> (argtype SetController);
    Method158() -> (argtype Short);
    Method159() -> (argtype Signed);
    Method160() -> (argtype Sizeof);
    Method161() -> (argtype Some);
    Method162() -> (argtype Static);
    Method163() -> (argtype StaticAssert);
    Method164() -> (argtype StaticCast);
    Method165() -> (argtype Stream);
    Method166() -> (argtype String);
    Method167() -> (argtype Struct);
    Method168() -> (argtype Stub);
    Method169() -> (argtype Super);
    Method170() -> (argtype Switch);
    Method171() -> (argtype Synchronized);
    Method172() -> (argtype Template);
    Method173() -> (argtype This);
    Method174() -> (argtype ThreadLocal);
    Method175() -> (argtype Throw);
    Method176() -> (argtype ToString);
    Method177() -> (argtype Trait);
    Method178() -> (argtype True);
    Method179() -> (argtype Try);
    Method180() -> (argtype Type);
    Method181() -> (argtype Typedef);
    Method182() -> (argtype Typeid);
    Method183() -> (argtype Typename);
    Method184() -> (argtype Typeof);
    Method185() -> (argtype Uint16);
    Method186() -> (argtype Uint32);
    Method187() -> (argtype Uint64);
    Method188() -> (argtype Uint8);
    Method189() -> (argtype Union);
    Method215() -> (argtype Unknown);
    Method216() -> (argtype UnknownBytes);
    [BindingsDenylist = "dart"]
    Method217() -> (argtype UnknownData);
    Method190() -> (argtype Unsafe);
    Method191() -> (argtype Unsigned);
    Method192() -> (argtype Unsized);
    Method193() -> (argtype Use);
    Method194() -> (argtype Using);
    Method195() -> (argtype Value);
    Method196() -> (argtype ValueOf);
    Method197() -> (argtype ValueUnion);
    Method198() -> (argtype ValuesMap);
    Method199() -> (argtype Var);
    Method200() -> (argtype Vec);
    Method201() -> (argtype Virtual);
    Method202() -> (argtype Void);
    Method203() -> (argtype Volatile);
    Method204() -> (argtype WcharT);
    Method205() -> (argtype Where);
    Method206() -> (argtype Which);
    Method207() -> (argtype While);
    Method208() -> (argtype With);
    Method209() -> (argtype Xor);
    Method210() -> (argtype XorEq);
    Method211() -> (argtype Xunion);
    Method212() -> (argtype Yield);
    Method213() -> (argtype Zx);
};
