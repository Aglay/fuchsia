// Copyright 2020 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library conformance;

// TODO(fxbug.dev/36441): Allow bindings to compile on host with handles.

resource struct SingleHandle {
    handle h;
};

resource struct SingleOptionalHandle {
    handle? h;
};

resource struct ArrayOfHandles {
    array<handle>:3 a;
};

resource struct ArrayOfOptionalHandles {
    array<handle?>:3 a;
};

resource struct VectorOfHandles {
    vector<handle> v;
};

resource struct VectorOfOptionalHandles {
    vector<handle?> v;
};

// This is not a reference to library zx to avoid complexity in the test data.
// A local handle is defined here that contains subtypes that this test cares
// about.
enum obj_type : uint32 {
    NONE = 0;
    CHANNEL = 4;
    EVENT = 5;
};

resource_definition handle : uint32 {
    properties {
        obj_type subtype;
    };
};

resource struct MultipleHandleSubtypes {
    handle untyped;
    handle:EVENT event;
    handle:CHANNEL channel;
};

resource table ReservedFieldTable {
    1: reserved;
};

resource struct ReservedFieldTableStruct {
    ReservedFieldTable table;
};

resource struct EventWithDefaultRights {
    // 53251 is ZX_DEFAULT_EVENT_RIGHTS.
    // TODO(fxbug.dev/41920) Replace with constant value.
    handle:<EVENT, 53251> h;
};

resource struct EventWithReducedRights {
    // 49155 is ZX_RIGHTS_BASIC, which is missing ZX_RIGHT_SIGNAL
    // TODO(fxbug.dev/41920) Replace with constant value.
    handle:<EVENT, 49155> h;
};

resource union UnionOfEventWithReducedRights {
    1: EventWithReducedRights s;
};

resource table TableOfUnionOfEventWithReducedRights {
    1: UnionOfEventWithReducedRights uu;
};

resource struct StructOfTableOfUnionOfEventWithReducedRights {
    TableOfUnionOfEventWithReducedRights t;
};

resource struct ArrayOfVectorOfEventInStructWithReducedRights {
    // 49155 is ZX_RIGHTS_BASIC.
    // TODO(fxbug.dev/41920) Replace with constant value.
    array<vector<handle:<EVENT, 49155>>:1>:1 h;
};

resource struct VectorOfArrayOfEventInStructWithReducedRights {
    // 49155 is ZX_RIGHTS_BASIC.
    // TODO(fxbug.dev/41920) Replace with constant value.
    vector<array<handle:<EVENT, 49155>>:1>:1 h;
};

resource table ArrayOfVectorOfEventInTableWithReducedRights {
    // 49155 is ZX_RIGHTS_BASIC.
    // TODO(fxbug.dev/41920) Replace with constant value.
    1: array<vector<handle:<EVENT, 49155>>:1>:1 h;
};

resource struct ArrayOfVectorOfEventInTableWithReducedRightsStruct {
    ArrayOfVectorOfEventInTableWithReducedRights t;
};

resource table VectorOfArrayOfEventInTableWithReducedRights {
    // 49155 is ZX_RIGHTS_BASIC.
    // TODO(fxbug.dev/41920) Replace with constant value.
    1: vector<array<handle:<EVENT, 49155>>:1>:1 h;
};

resource struct VectorOfArrayOfEventInTableWithReducedRightsStruct {
    VectorOfArrayOfEventInTableWithReducedRights t;
};

resource union ArrayOfVectorOfEventInUnionWithReducedRights {
    // 49155 is ZX_RIGHTS_BASIC.
    // TODO(fxbug.dev/41920) Replace with constant value.
    1: array<vector<handle:<EVENT, 49155>>:1>:1 h;
};

resource struct ArrayOfVectorOfEventInUnionWithReducedRightsStruct {
    ArrayOfVectorOfEventInUnionWithReducedRights t;
};

resource union VectorOfArrayOfEventInUnionWithReducedRights {
    // 49155 is ZX_RIGHTS_BASIC.
    // TODO(fxbug.dev/41920) Replace with constant value.
    1: vector<array<handle:<EVENT, 49155>>:1>:1 h;
};

resource struct VectorOfArrayOfEventInUnionWithReducedRightsStruct {
    VectorOfArrayOfEventInUnionWithReducedRights t;
};
