// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

success("BoolTrue") {
    value = MyBool {
        value: true,
    },
    bytes = {
        old, v1 = [
            0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("BoolFalse") {
    value = MyBool {
        value: false,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("ByteZero") {
    value = MyByte {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Byte255") {
    value = MyByte {
        value: 255,
    },
    bytes = {
        old, v1 = [
            0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int8Min") {
    value = MyInt8 {
        value: -128,
    },
    bytes = {
        old, v1 = [
            0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int8Zero") {
    value = MyInt8 {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int8Max") {
    value = MyInt8 {
        value: 127,
    },
    bytes = {
        old, v1 = [
            0x7f,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int16Min") {
    value = MyInt16 {
        value: -32768,
    },
    bytes = {
        old, v1 = [
            0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int16Zero") {
    value = MyInt16 {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int16Max") {
    value = MyInt16 {
        value: 32767,
    },
    bytes = {
        old, v1 = [
            0xff,0x7f,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int32Min") {
    value = MyInt32 {
        value: -2147483648,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int32Zero") {
    value = MyInt32 {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int32Max") {
    value = MyInt32 {
        value: 2147483647,
    },
    bytes = {
        old, v1 = [
            0xff,0xff,0xff,0x7f,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int64Min") {
    value = MyInt64 {
        value: -9223372036854775808,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,
        ],
    },
}

success("Int64Zero") {
    value = MyInt64 {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Int64Max") {
    value = MyInt64 {
        value: 9223372036854775807,
    },
    bytes = {
        old, v1 = [
            0xff,0xff,0xff,0xff,0xff,0xff,0xff,0x7f,
        ],
    },
}

success("Uint8Zero") {
    value = MyUint8 {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Uint8Max") {
    value = MyUint8 {
        value: 255,
    },
    bytes = {
        old, v1 = [
            0xff,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Uint16Zero") {
    value = MyUint16 {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Uint16Max") {
    value = MyUint16 {
        value: 65535,
    },
    bytes = {
        old, v1 = [
            0xff,0xff,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Uint32Zero") {
    value = MyUint32 {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Uint32Max") {
    value = MyUint32 {
        value: 4294967295,
    },
    bytes = {
        old, v1 = [
            0xff,0xff,0xff,0xff,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Uint64Zero") {
    value = MyUint64 {
        value: 0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Uint64Max") {
    value = MyUint64 {
        value: 18446744073709551615,
    },
    bytes = {
        old, v1 = [
            0xff,0xff,0xff,0xff,0xff,0xff,0xff,0xff,
        ],
    },
}

// Note: floats are tricky and there may be failures do to cpu architecture
// and similar reasons.

success("Float32Zero") {
    value = MyFloat32 {
        value: 0.0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Float32One") {
    value = MyFloat32 {
        value: 1.0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x80,0x3f,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Float32MinusOne") {
    value = MyFloat32 {
        value: -1.0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x80,0xbf,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Float32Max") {
    value = MyFloat32 {
        value: 3.40282346638528859811704183484516925440e+38,
    },
    bytes = {
        old, v1 = [
            0xff,0xff,0x7f,0x7f,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Float64Zero") {
    value = MyFloat64 {
        value: 0.0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
        ],
    },
}

success("Float64One") {
    value = MyFloat64 {
        value: 1.0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0xf0,0x3f,
        ],
    },
}

success("Float64MinusOne") {
    value = MyFloat64 {
        value: -1.0,
    },
    bytes = {
        old, v1 = [
            0x00,0x00,0x00,0x00,0x00,0x00,0xf0,0xbf,
        ],
    },
}

success("Float64Max") {
    value = MyFloat64 {
        value: 1.797693134862315708145274237317043567981e+308,
    },
    bytes = {
        old, v1 = [
            0xff,0xff,0xff,0xff,0xff,0xff,0xef,0x7f,
        ],
    },
}
