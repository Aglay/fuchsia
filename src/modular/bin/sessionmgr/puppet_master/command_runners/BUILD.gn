# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

group("command_runners") {
  testonly = true
  deps = [
    ":add_mod_command_runner",
    ":add_mod_command_runner_unittest",
    ":command_runner",
    ":focus_mod_command_runner",
    ":focus_mod_command_runner_unittest",
    ":no_op_command_runner",
    ":no_op_command_runner_unittest",
    ":remove_mod_command_runner",
    ":remove_mod_command_runner_unittest",
    ":set_focus_state_command_runner",
    ":set_focus_state_command_runner_unittest",
    ":set_kind_of_proto_story_option_command_runner",
    ":set_kind_of_proto_story_option_command_runner_unittest",
    "operation_calls",
  ]
}

source_set("command_runner") {
  sources = [
    "command_runner.cc",
    "command_runner.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.modular",
    "//src/modular/bin/sessionmgr/storage",
  ]
}

source_set("no_op_command_runner") {
  sources = [
    "no_op_command_runner.cc",
    "no_op_command_runner.h",
  ]

  public_deps = [
    ":command_runner",
    "//sdk/fidl/fuchsia.modular",
  ]
}

executable("no_op_command_runner_unittest") {
  testonly = true

  sources = [
    "no_op_command_runner_unittest.cc",
  ]

  deps = [
    ":no_op_command_runner",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/gtest",
    "//src/lib/fxl/test:gtest_main",
    "//src/modular/lib/testing:test_with_session_storage",
  ]
}

source_set("add_mod_command_runner") {
  sources = [
    "add_mod_command_runner.cc",
    "add_mod_command_runner.h",
  ]

  deps = [
    "//src/lib/fxl",
    "//src/modular/bin/sessionmgr/puppet_master/command_runners/operation_calls:add_mod_call",
    "//src/modular/lib/module_manifest:module_facet_reader",
  ]

  public_deps = [
    ":command_runner",
    "//src/modular/lib/async/cpp:operation",
  ]
}

executable("add_mod_command_runner_unittest") {
  testonly = true

  sources = [
    "add_mod_command_runner_unittest.cc",
  ]

  deps = [
    ":add_mod_command_runner",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/gtest",
    "//sdk/lib/fidl/cpp",
    "//src/lib/fxl",
    "//src/lib/fxl/test:gtest_main",
    "//src/modular/lib/testing:entity_resolver_fake",
    "//src/modular/lib/testing:module_facet_reader_fake",
    "//src/modular/lib/testing:module_resolver_fake",
    "//src/modular/lib/testing:test_with_session_storage",
  ]
}

source_set("remove_mod_command_runner") {
  sources = [
    "remove_mod_command_runner.cc",
    "remove_mod_command_runner.h",
  ]

  deps = [
    "//src/lib/fxl",
  ]

  public_deps = [
    ":command_runner",
    "//src/modular/lib/async/cpp:operation",
  ]
}

executable("remove_mod_command_runner_unittest") {
  testonly = true

  sources = [
    "remove_mod_command_runner_unittest.cc",
  ]

  deps = [
    ":remove_mod_command_runner",
    "//garnet/public/lib/gtest",
    "//src/lib/fxl/test:gtest_main",
    "//src/modular/lib/testing:test_with_session_storage",
  ]
}

source_set("set_focus_state_command_runner") {
  sources = [
    "set_focus_state_command_runner.cc",
    "set_focus_state_command_runner.h",
  ]

  deps = [
    "//src/lib/fxl",
  ]

  public_deps = [
    ":command_runner",
  ]
}

executable("set_focus_state_command_runner_unittest") {
  testonly = true

  sources = [
    "set_focus_state_command_runner_unittest.cc",
  ]

  deps = [
    ":set_focus_state_command_runner",
    "//garnet/public/lib/gtest",
    "//src/lib/fxl/test:gtest_main",
  ]
}

source_set("focus_mod_command_runner") {
  sources = [
    "focus_mod_command_runner.cc",
    "focus_mod_command_runner.h",
  ]

  public_deps = [
    ":command_runner",
    "//sdk/fidl/fuchsia.modular",
  ]
}

executable("focus_mod_command_runner_unittest") {
  testonly = true

  sources = [
    "focus_mod_command_runner_unittest.cc",
  ]

  deps = [
    ":focus_mod_command_runner",
    "//garnet/public/lib/gtest",
    "//src/lib/fxl/test:gtest_main",
  ]
}

source_set("set_kind_of_proto_story_option_command_runner") {
  sources = [
    "set_kind_of_proto_story_option_command_runner.cc",
    "set_kind_of_proto_story_option_command_runner.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.modular",
  ]

  deps = [
    ":command_runner",
    "//src/modular/lib/async/cpp:operation",
  ]
}

executable("set_kind_of_proto_story_option_command_runner_unittest") {
  testonly = true

  sources = [
    "set_kind_of_proto_story_option_command_runner_unittest.cc",
  ]

  deps = [
    ":set_kind_of_proto_story_option_command_runner",
    "//garnet/public/lib/gtest",
    "//src/lib/fxl/test:gtest_main",
    "//src/modular/lib/testing:test_with_session_storage",
  ]
}
