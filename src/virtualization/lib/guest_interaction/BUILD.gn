# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")
import("//src/virtualization/buildtools/linux_paths.gni")
import("//src/virtualization/buildtools/romfs_image.gni")
import("//third_party/protobuf/proto_library.gni")

group("tests") {
  testonly = true
  deps = [
    ":guest_interaction_tests",
  ]
}

group("guest_interaction") {
  testonly = true
  deps = [
    ":debian_guest_interaction_daemon",
  ]
}

proto_library("proto") {
  sources = [
    "proto/guest_interaction.proto",
  ]

  generate_python = false
  cc_generator_options = "lite"
  generator_plugin_suffix = ".grpc.pb"
  generator_plugin_label = "//third_party/grpc:grpc_cpp_plugin"

  import_dirs = [ "//third_party/protobuf/src" ]
  deps = [
    "//third_party/grpc:grpc++",
  ]
}

source_set("common") {
  sources = [
    "common.h",
  ]
  deps = [
    ":proto",
    "//third_party/grpc:grpc++",
  ]
}

source_set("platform_interface_posix") {
  sources = [
    "platform_interface/platform_interface.h",
    "platform_interface/posix_platform.cc",
  ]
  deps = [
    ":common",
    "//third_party/grpc:grpc++",
    "//third_party/protobuf:protobuf_full",
  ]
}

source_set("client_lib") {
  sources = [
    "client/client_operation_state.h",
    "platform_interface/platform_interface.h",
  ]
  deps = [
    ":common",
    ":proto",
    "//sdk/lib/sys/cpp",
    "//src/lib/fxl",
    "//third_party/grpc:grpc++",
  ]
}

source_set("server_lib") {
  sources = [
    "platform_interface/platform_interface.h",
    "server/server_operation_state.h",
  ]
  deps = [
    ":common",
    ":proto",
    "//third_party/grpc:grpc++",
  ]
}

source_set("test_lib") {
  testonly = true
  sources = [
    "test/test_lib.h",
  ]
  deps = [
    ":proto",
    "//src/lib/fxl",
    "//third_party/googletest:gtest_main",
    "//third_party/grpc:grpc++",
  ]
}

executable("client_operation_test") {
  testonly = true
  sources = [
    "test/client_operation_test.cc",
  ]
  deps = [
    ":client_lib",
    ":proto",
    ":test_lib",
    "//sdk/lib/sys/cpp",
    "//src/lib/fxl",
    "//src/virtualization/lib/grpc:grpc",
    "//third_party/googletest:gtest_main",
    "//third_party/grpc:grpc++",
  ]
}

executable("server_operation_test") {
  testonly = true
  sources = [
    "test/server_operation_test.cc",
  ]
  deps = [
    ":proto",
    ":server_lib",
    ":test_lib",
    "//sdk/lib/sys/cpp",
    "//third_party/googletest:gtest_main",
    "//third_party/grpc:grpc++",
  ]
}

test_package("guest_interaction_tests") {
  deps = [
    ":client_operation_test",
    ":server_daemon_test",
    ":server_operation_test",
  ]

  resources = [
    {
      path = rebase_path("test/test_script.sh")
      dest = "test_script.sh"
    },
  ]

  tests = [
    {
      name = "client_operation_test"
      environments = [ nuc_env ]
    },
    {
      name = "server_operation_test"
      environments = [ nuc_env ]
    },
    {
      name = "server_daemon_test"
      environments = [ nuc_env ]
    },
  ]
}

executable("debian_guest_interaction_daemon") {
  output_name = "guest_interaction_daemon"
  sources = [
    "server/debian_server.cc",
  ]
  deps = [
    ":platform_interface_posix",
    ":proto",
    ":server_lib",
    "//third_party/grpc:grpc++",
  ]
}

executable("server_daemon_test") {
  testonly = true

  sources = [
    "client/client_impl.h",
    "client/client_operation_state.h",
    "test/server_integration_test.cc",
  ]

  deps = [
    ":common",
    ":platform_interface_posix",
    ":proto",
    "//garnet/public/lib/component/cpp/testing",
    "//sdk/fidl/fuchsia.netstack",
    "//sdk/fidl/fuchsia.virtualization",
    "//sdk/lib/sys/cpp/testing:enclosing_environment",
    "//sdk/lib/sys/cpp/testing:integration",
    "//src/lib/fxl",
    "//src/virtualization/lib/grpc:grpc",
    "//src/virtualization/tests:guest_console",
    "//src/virtualization/tests:mock_netstack",
    "//third_party/googletest:gtest_main",
    "//third_party/grpc:grpc++",
    "//zircon/public/fidl/fuchsia-net",
    "//zircon/public/fidl/fuchsia-net-stack",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/fdio",
    "//zircon/public/lib/fzl",
  ]
}

extras_image = "$target_out_dir/linux/extras.img"

romfs_image("extras") {
  deps = []
  inputs = []

  # gRPC has a dependency on //third_party/cares which can only target x64.  Only build the Debian
  # server for x64 guests.  Provide an empty image for arm64.
  if (target_cpu == "x64") {
    deps += [ ":debian_guest_interaction_daemon(${linux_exe_toolchain})" ]

    inputs += [ "${linux_exe_path}/guest_interaction_daemon" ]
  }

  output = extras_image
}
