# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/test.gni")
import("//build/test/test_package.gni")

###############################################################################
# GROUPS
###############################################################################
group("tests") {
  testonly = true

  public_deps = [
    ":bugreport-tests",

    # Packages for the components that we are injecting in the integration tests.
    "//src/developer/feedback/testing/fakes:fake-data-provider",
  ]
}

###############################################################################
# PACKAGES
###############################################################################
test_package("bugreport-tests") {
  tests = [
    {
      name = "bugreport_integration_test"
    },
    {
      name = "bugreport_unittest"
    },
    {
      name = "command_line_options_unittest"
    },
  ]

  deps = [
    ":bugreport_integration_test",
    ":bugreport_unittest",
    ":command_line_options_unittest",
  ]
}

###############################################################################
# EXECUTABLES
###############################################################################
executable("bugreport_integration_test") {
  testonly = true

  sources = [ "bug_reporter_integration_test.cc" ]

  deps = [
    "//src/developer/feedback/bugreport:src",
    "//src/developer/feedback/utils:archive",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gtest",
    "//zircon/system/fidl/fuchsia-mem",
  ]
}

executable("bugreport_unittest") {
  testonly = true

  sources = [ "bug_reporter_unittest.cc" ]

  deps = [
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/sys/cpp/testing:unit",
    "//sdk/lib/syslog/cpp",
    "//src/developer/feedback/bugreport:src",
    "//src/developer/feedback/testing/stubs:data_provider",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gtest",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/zx",
  ]
}

executable("command_line_options_unittest") {
  testonly = true

  sources = [ "command_line_options_unittest.cc" ]

  deps = [
    "//src/developer/feedback/bugreport:command_line_options",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gtest",
  ]
}
