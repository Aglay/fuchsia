# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config.gni")
import("//build/package.gni")

###############################################################################
# PACKAGES
###############################################################################
package("feedback_agent") {
  binaries = [
    {
      name = "feedback_agent"
    },
    {
      name = "system_log_recorder"
    },
  ]

  meta = [
    {
      path = "meta/feedback_agent.cmx"
      dest = "feedback_agent.cmx"
    },
  ]

  resources = [
    {
      path = "config.json"
      dest = "config.json"
    },
  ]

  deps = [
    ":main",
    ":system_log_recorder",
  ]
}

###############################################################################
# EXECUTABLES
###############################################################################
executable("main") {
  output_name = "feedback_agent"

  sources = [ "main.cc" ]

  deps = [
    ":constants",
    ":device_id",
    ":feedback_agent_src",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/inspect/cpp",
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/zx",
  ]
}

executable("system_log_recorder") {
  sources = [ "system_log_recorder_main.cc" ]

  deps = [
    ":constants",
    ":system_log_recorder_src",
    "//sdk/lib/sys/cpp",
    "//src/lib/syslog/cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/trace-provider-with-fdio",
  ]
}

###############################################################################
# SOURCES
###############################################################################
source_set("constants") {
  sources = [ "constants.h" ]

  visibility = [ "//src/developer/feedback/feedback_agent/*" ]
}

source_set("data_provider") {
  sources = [
    "config.cc",
    "config.h",
    "data_provider.cc",
    "data_provider.h",
    "datastore.cc",
    "datastore.h",
    "image_conversion.cc",
    "image_conversion.h",
  ]

  public_deps = [
    "//garnet/public/lib/timekeeper",
    "//garnet/public/lib/timekeeper:system",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/fidl/fuchsia.images",
    "//sdk/lib/sys/cpp",
    "//src/developer/feedback/utils:cobalt",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/fit",
    "//zircon/public/lib/zx",
    "//zircon/system/fidl/fuchsia-mem",
  ]

  deps = [
    ":constants",
    "//garnet/public/lib/fostr/fidl/fuchsia.images",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//src/developer/feedback/feedback_agent/annotations:aliases",
    "//src/developer/feedback/feedback_agent/annotations:annotation_providers",
    "//src/developer/feedback/feedback_agent/annotations:static_annotations",
    "//src/developer/feedback/feedback_agent/attachments:aliases",
    "//src/developer/feedback/feedback_agent/attachments:attachment_providers",
    "//src/developer/feedback/feedback_agent/attachments:static_attachments",
    "//src/developer/feedback/feedback_agent/attachments:util",
    "//src/developer/feedback/utils:archive",
    "//src/developer/feedback/utils:promise",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//third_party/libpng",
    "//third_party/rapidjson",
    "//zircon/public/lib/async-loop-default",
  ]
}

source_set("feedback_agent_src") {
  sources = [
    "feedback_agent.cc",
    "feedback_agent.h",
  ]

  deps = [
    ":constants",
    "//garnet/public/lib/syslog/cpp",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//zircon/public/lib/zx",
  ]

  public_deps = [
    ":data_provider",
    ":inspect_manager",
    "//sdk/fidl/fuchsia.feedback",
    "//src/developer/feedback/utils:files",
    "//src/lib/fxl",
    "//zircon/public/lib/async-loop-cpp",
  ]
}

source_set("device_id") {
  public = [ "device_id.h" ]

  sources = [
    "device_id.cc",
    "device_id.h",
  ]

  deps = [
    "//src/lib/files",
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//src/lib/uuid",
  ]
}

source_set("inspect_manager") {
  public = [ "inspect_manager.h" ]

  sources = [
    "inspect_manager.cc",
    "inspect_manager.h",
  ]

  deps = [ "//src/lib/fxl" ]

  public_deps = [ "//src/developer/feedback/utils:inspect_node_manager" ]
}

source_set("system_log_recorder_src") {
  public = [ "system_log_recorder.h" ]

  sources = [
    "system_log_recorder.cc",
    "system_log_recorder.h",
  ]

  public_deps = [
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//src/developer/feedback/utils:files",
    "//src/developer/feedback/utils:logs",
    "//zircon/system/fidl/fuchsia-logger",
  ]

  deps = [
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//zircon/public/lib/trace",
  ]
}
