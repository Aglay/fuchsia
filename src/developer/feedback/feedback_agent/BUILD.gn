# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config.gni")
import("//build/package.gni")

package("feedback_agent") {
  binaries = [
    {
      name = "feedback_agent"
    },
    {
      name = "data_provider"
    },
  ]

  meta = [
    {
      path = "meta/feedback_agent.cmx"
      dest = "feedback_agent.cmx"
    },
  ]

  resources = [
    {
      path = "config.json"
      dest = "config.json"
    },
  ]

  deps = [
    ":data_provider",
    ":main",
  ]
}

executable("main") {
  output_name = "feedback_agent"

  sources = [ "main.cc" ]

  deps = [
    ":constants",
    ":feedback_agent_src",
    ":feedback_id",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/inspect/cpp",
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/zx",
  ]
}

source_set("feedback_agent_src") {
  sources = [
    "feedback_agent.cc",
    "feedback_agent.h",
  ]

  deps = [
    "//garnet/public/lib/syslog/cpp",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/inspect/cpp",
    "//src/lib/fxl",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/zx",
  ]
}

executable("data_provider") {
  sources = [ "data_provider_main.cc" ]

  deps = [
    ":data_provider_src",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/zx",
  ]
}

source_set("data_provider_src") {
  sources = [
    "annotations.cc",
    "annotations.h",
    "attachments.cc",
    "attachments.h",
    "config.cc",
    "config.h",
    "data_provider.cc",
    "data_provider.h",
    "image_conversion.cc",
    "image_conversion.h",
    "ref_counted_delayed_task.cc",
    "ref_counted_delayed_task.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/fidl/fuchsia.images",
    "//sdk/lib/sys/cpp",
    "//src/developer/feedback/utils:cobalt",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/fit",
    "//zircon/public/lib/zx",
    "//zircon/system/fidl/fuchsia-mem",
  ]

  deps = [
    ":constants",
    "//garnet/public/lib/fostr/fidl/fuchsia.images",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//src/developer/feedback/feedback_agent/annotations:annotation_providers",
    "//src/developer/feedback/feedback_agent/attachments:attachment_providers",
    "//src/developer/feedback/utils:archive",
    "//src/developer/feedback/utils:promise",
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//third_party/libpng",
    "//third_party/rapidjson",
    "//zircon/public/lib/async-loop-default",
  ]
}

source_set("feedback_id") {
  public = [ "feedback_id.h" ]

  sources = [
    "feedback_id.cc",
    "feedback_id.h",
  ]

  deps = [
    "//src/lib/files",
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//src/lib/uuid",
  ]
}

source_set("constants") {
  sources = [ "constants.h" ]

  visibility = [ "//src/developer/feedback/feedback_agent/*" ]
}
