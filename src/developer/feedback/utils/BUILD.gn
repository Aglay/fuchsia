# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//third_party/cobalt/metrics_registry.gni")

###############################################################################
# SOURCES
###############################################################################
source_set("archive") {
  sources = [
    "archive.cc",
    "archive.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.feedback",
    "//zircon/system/fidl/fuchsia-mem",
  ]

  deps = [
    "//src/lib/files",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//third_party/zlib:minizip",
  ]

  visibility = [ "//src/developer/feedback/*" ]
}

source_set("cobalt") {
  public = [
    "cobalt.h",
    "cobalt_event.h",
    "cobalt_metrics.h",
  ]

  sources = [
    "cobalt.cc",
    "cobalt.h",
    "cobalt_event.cc",
    "cobalt_event.h",
  ]

  public_deps = [
    ":metrics_registry",
    "//sdk/lib/sys/cpp",
    "//src/lib/backoff:backoff",
    "//src/lib/timekeeper",
    "//src/lib/timekeeper:system",
    "//zircon/public/lib/fit",
    "//zircon/system/fidl/fuchsia-cobalt",
  ]

  deps = [
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
  ]

  visibility = [ "//src/developer/feedback/*" ]
}

source_set("files") {
  public = [
    "file_size.h",
    "rotating_file_set.h",
    "write_only_file.h",
  ]

  sources = [
    "file_size.h",
    "rotating_file_set.cc",
    "rotating_file_set.h",
    "write_only_file.cc",
    "write_only_file.h",
  ]

  deps = [ "//zircon/public/lib/trace" ]
}

source_set("inspect_node_manager") {
  sources = [
    "inspect_node_manager.cc",
    "inspect_node_manager.h",
  ]

  public_deps = [
    "//sdk/lib/sys/inspect/cpp",
    "//src/lib/fxl",
  ]

  visibility = [ "//src/developer/feedback/*" ]
}

source_set("logs") {
  public = [
    "log_format.h",
    "log_message_queue.h",
  ]

  sources = [
    "log_format.cc",
    "log_format.h",
    "log_message_queue.cc",
    "log_message_queue.h",
  ]

  public_deps = [ "//zircon/system/fidl/fuchsia-logger" ]

  deps = [
    "//src/lib/fxl",
    "//src/lib/syslog/cpp",
    "//zircon/public/lib/trace",
  ]
}

source_set("libfit") {
  public = [
    "promise.h",
    "weak_bridge.h",
  ]

  sources = [
    "promise.h",
    "weak_bridge.h",
  ]

  public_deps = [
    "//src/lib/fxl",
    "//zircon/public/lib/fit",
  ]

  visibility = [ "//src/developer/feedback/*" ]
}

source_set("time") {
  sources = [
    "time.cc",
    "time.h",
  ]

  public_deps = [
    "//src/lib/timekeeper",
    "//zircon/public/lib/zx",
  ]

  deps = [ "//src/lib/fxl" ]

  visibility = [ "//src/developer/feedback/*" ]
}

source_set("utc_time_provider") {
  sources = [
    "utc_time_provider.cc",
    "utc_time_provider.h",
  ]

  public_deps = [
    "//sdk/lib/sys/cpp",
    "//src/lib/timekeeper:system",
    "//src/sys/timekeeper:fuchsia.time",
  ]

  deps = [
    ":time",
    "//src/lib/syslog/cpp",
  ]

  visibility = [ "//src/developer/feedback/*" ]
}

###############################################################################
# METRICS
###############################################################################
metrics_registry("metrics_registry") {
  # This must match the ID of our Cobalt project as specified in:
  # third_party/cobalt_config/projects.yaml
  project_id = 4228153068
  namespace = "cobalt_registry"
  generate_cc = true
  generate_binarypb = false
}
