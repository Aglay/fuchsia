# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

###############################################################################
# SOURCES
###############################################################################
source_set("main_service") {
  sources = [
    "main_service.cc",
    "main_service.h",
  ]

  public_deps = [
    ":config",
    ":crash_register",
    ":crash_reporter",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//src/developer/forensics/crash_reports/info",
    "//src/lib/fxl",
    "//src/lib/timekeeper",
    "//zircon/public/lib/async",
  ]

  deps = [
    "//sdk/lib/syslog/cpp",
    "//src/lib/files",
    "//zircon/public/lib/zx",
  ]
}

source_set("config") {
  public = [ "config.h" ]

  sources = [
    "config.cc",
    "config.h",
  ]

  deps = [
    ":constants",
    "//sdk/lib/syslog/cpp",
    "//src/lib/files",

    # TODO(fxbug.dev/57392): Move it back to //third_party once unification completes.
    "//zircon/third_party/rapidjson",
  ]
}

source_set("constants") {
  sources = [ "constants.h" ]

  public_deps = [ "//src/developer/forensics/utils:storage_size" ]

  visibility = [ "//src/developer/forensics/crash_reports/*" ]
}

source_set("crash_register") {
  sources = [
    "crash_register.cc",
    "crash_register.h",
  ]

  public_deps = [
    ":product",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/sys/cpp",
    "//src/developer/forensics/crash_reports/info",
    "//src/developer/forensics/utils:errors",
    "//src/developer/forensics/utils/fit",
    "//zircon/public/lib/async",
    "//zircon/public/lib/fit",

    # TODO(fxbug.dev/57392): Move it back to //third_party once unification completes.
    "//zircon/third_party/rapidjson",
  ]

  deps = [
    "//garnet/public/lib/fostr/fidl/fuchsia.feedback",
    "//sdk/lib/syslog/cpp",
    "//src/developer/forensics/utils/fidl:channel_provider_ptr",
    "//src/lib/files",
  ]
}

source_set("crash_reporter") {
  sources = [
    "crash_reporter.cc",
    "crash_reporter.h",
  ]

  public_deps = [
    ":crash_register",
    ":crash_server",
    ":privacy_settings_ptr",
    ":product",
    ":queue",
    ":settings",
    ":snapshot_manager",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/sys/cpp",
    "//src/developer/forensics/crash_reports/info",
    "//src/developer/forensics/utils:errors",
    "//src/developer/forensics/utils:utc_time_provider",
    "//src/developer/forensics/utils/fidl:device_id_provider_ptr",
    "//src/developer/forensics/utils/fit",
    "//src/lib/timekeeper",
    "//zircon/public/lib/async",
    "//zircon/public/lib/async-cpp",
  ]

  deps = [
    ":constants",
    ":report_util",
    "//sdk/lib/syslog/cpp",
    "//src/developer/forensics/utils/cobalt",
    "//zircon/public/lib/fit",
  ]
}

source_set("crash_server") {
  sources = [
    "crash_server.cc",
    "crash_server.h",
  ]

  public_deps = [
    ":report",
    ":sized_data_reader",
    "//sdk/fidl/fuchsia.mem",
    "//sdk/lib/syslog/cpp",
    "//src/lib/fxl",
    "//third_party/crashpad/third_party/mini_chromium/mini_chromium/base",
    "//third_party/crashpad/util",
  ]

  deps = [ "//src/developer/forensics/utils:sized_data" ]
}

source_set("errors") {
  sources = [ "errors.h" ]

  public_deps = [
    "//sdk/lib/syslog/cpp",
    "//src/developer/forensics/utils:errors",
  ]
}

source_set("main") {
  sources = [
    "main.cc",
    "main.h",
  ]

  deps = [
    ":main_service",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/syslog/cpp",
    "//src/developer/forensics/crash_reports/info",
    "//src/developer/forensics/utils/component",
    "//src/lib/timekeeper:system",
  ]
}

source_set("privacy_settings_ptr") {
  sources = [
    "privacy_settings_ptr.cc",
    "privacy_settings_ptr.h",
  ]

  public_deps = [
    ":settings",
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/fidl/fuchsia.settings",
    "//sdk/lib/sys/cpp",
    "//src/lib/backoff",
    "//src/lib/fxl",
    "//zircon/public/lib/async",
    "//zircon/public/lib/zx",
  ]

  deps = [
    "//garnet/public/lib/fostr/fidl/fuchsia.settings",
    "//sdk/lib/syslog/cpp",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/fit",
  ]
}

source_set("product") {
  sources = [
    "product.cc",
    "product.h",
  ]

  public_deps = [ "//src/developer/forensics/utils:errors" ]
}

source_set("queue") {
  sources = [
    "queue.cc",
    "queue.h",
  ]

  public_deps = [
    ":crash_server",
    ":settings",
    ":store",
    "//sdk/fidl/fuchsia.netstack",
    "//src/developer/forensics/crash_reports/info",
    "//src/lib/backoff",
    "//src/lib/fxl",
    "//zircon/public/lib/async",
  ]

  deps = [
    ":constants",
    ":report",
    "//sdk/lib/syslog/cpp",
    "//zircon/public/lib/async-cpp",
  ]
}

source_set("report") {
  sources = [
    "report.cc",
    "report.h",
  ]

  public_deps = [
    ":snapshot_manager",
    "//sdk/fidl/fuchsia.mem",
    "//sdk/lib/syslog/cpp",
    "//src/developer/forensics/utils:sized_data",
  ]
}

source_set("report_util") {
  sources = [
    "report_util.cc",
    "report_util.h",
  ]

  public_deps = [
    ":product",
    ":report",
    "//sdk/fidl/fuchsia.feedback",
    "//src/developer/forensics/utils:errors",
  ]

  deps = [
    ":constants",
    ":errors",
    "//sdk/fidl/fuchsia.mem",
    "//sdk/lib/syslog/cpp",
    "//src/lib/files",
    "//src/lib/fxl",
  ]
}

source_set("settings") {
  public = [ "settings.h" ]

  sources = [
    "settings.cc",
    "settings.h",
  ]

  public_deps = [
    ":config",
    "//src/lib/fxl",
    "//zircon/public/lib/fit",
  ]

  deps = [ "//sdk/lib/syslog/cpp" ]
}

source_set("sized_data_reader") {
  sources = [
    "sized_data_reader.cc",
    "sized_data_reader.h",
  ]

  public_deps = [
    "//src/developer/forensics/utils:sized_data",
    "//third_party/crashpad/third_party/mini_chromium/mini_chromium/base",
    "//third_party/crashpad/util",
  ]

  deps = [ "//sdk/lib/syslog/cpp" ]

  # TODO(fxbug.dev/58162): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}

source_set("snapshot_manager") {
  sources = [
    "snapshot.cc",
    "snapshot.h",
    "snapshot_manager.cc",
    "snapshot_manager.h",
  ]

  public_deps = [
    "//sdk/fidl/fuchsia.feedback",
    "//sdk/lib/sys/cpp",
    "//src/developer/forensics/utils:sized_data",
    "//src/developer/forensics/utils:storage_size",
    "//src/lib/timekeeper",
    "//zircon/public/lib/async",
    "//zircon/public/lib/fit",
    "//zircon/public/lib/zx",
  ]

  deps = [
    ":errors",
    "//sdk/lib/syslog/cpp",
    "//sdk/lib/syslog/cpp:backend_legacy",
    "//src/lib/uuid",
  ]
}

source_set("store") {
  sources = [
    "store.cc",
    "store.h",
  ]

  public_deps = [
    ":report",
    "//src/developer/forensics/crash_reports/info",
    "//src/developer/forensics/utils:storage_size",
  ]

  deps = [
    "//sdk/lib/syslog/cpp",
    "//src/lib/files",
    "//src/lib/fxl",
    "//zircon/public/lib/fit",

    # TODO(fxbug.dev/57392): Move it back to //third_party once unification completes.
    "//zircon/third_party/rapidjson",
  ]

  # TODO(fxbug.dev/58162): delete the below and fix compiler warnings
  configs += [ "//build/config:Wno-conversion" ]
}
