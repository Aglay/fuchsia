# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_library.gni")
import("command.gni")
import("plugins.gni")

# Defines FFX
#
template("ffx") {
  ffx_deps = []
  if (defined(invoker.deps)) {
    ffx_deps += invoker.deps
  }
  if (defined(invoker.plugin_deps)) {
    ffx_deps += invoker.plugin_deps
  }

  output_name = target_name

  if (defined(invoker.name)) {
    output_name = invoker.name
  }

  args_deps = []
  if (defined(invoker.plugin_deps)) {
    foreach(d, invoker.plugin_deps) {
      dep = d + "_args"
      args_deps += [ dep ]
    }
  }

  rustc_library("args_lib") {
    name = "ffx_args"
    source_root = "./src/args.rs"

    deps = args_deps + [
             "config:args_lib",
             "core:lib",
             "//third_party/rust_crates:argh",
           ]
    non_rust_deps = [ "//third_party/boringssl" ]
    forward_variables_from(invoker,
                           "*",
                           [
                             "name",
                             "deps",
                             "source_root",
                             "non_rust_deps",
                           ])
  }

  command("ffx_sub_command") {
    output_name = "cmd_args.rs"
    plugin_deps = invoker.plugin_deps
  }

  rustc_library("command_lib") {
    name = "ffx_command"
    source_root = "$target_gen_dir/cmd_args.rs"
    deps = args_deps + [
             ":args_lib",
             ":ffx_sub_command",
             "config:args_lib",
             "//third_party/rust_crates:argh",
           ]
  }

  plugins("ffx_plugins") {
    output_name = "plugins.rs"
    plugin_deps = invoker.plugin_deps
  }

  rustc_library("plugins_lib") {
    name = "ffx_plugins"
    source_root = "$target_gen_dir/plugins.rs"
    deps = ffx_deps + [
             ":command_lib",
             ":ffx_plugins",
           ]
  }

  rustc_binary("bin") {
    name = output_name
    deps = ffx_deps + [
             ":command_lib",
             ":plugins_lib",
             ":args_lib",
           ]
    non_rust_deps = [ "//third_party/boringssl" ]
    forward_variables_from(invoker,
                           "*",
                           [
                             "name",
                             "deps",
                             "non_rust_deps",
                           ])
  }

  tests_deps = []
  if (defined(invoker.plugin_deps)) {
    foreach(d, invoker.plugin_deps) {
      test = get_label_info(d, "dir")
      tests_deps += [ test + ":tests" ]
    }
  }

  group("ffx_tests") {
    testonly = true

    deps = tests_deps + [
             ":args_lib_test($host_toolchain)",
             ":bin_test($host_toolchain)",
             "config:tests($host_toolchain)",
           ]
  }
}
