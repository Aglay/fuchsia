# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/fidl/fidl.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_test.gni")
import("//build/testing/test_spec.gni")

if (host_toolchain == current_toolchain) {
  rustc_binary("bin") {
    name = "fdb"
    edition = "2018"
    with_unit_tests = true

    deps = [
      ":bridge-rustc",
      "//garnet/public/lib/fidl/rust/fidl",
      "//sdk/fidl/fuchsia.overnet:fuchsia.overnet-rustc",
      "//src/connectivity/overnet/lib/hoist",
      "//src/lib/argh",
      "//third_party/rust_crates:anyhow",
      "//third_party/rust_crates:futures",
      "//third_party/rust_crates:log",
      "//third_party/rust_crates:serde",
      "//third_party/rust_crates:serde_derive",
      "//third_party/rust_crates:serde_json",
      "//third_party/rust_crates:thiserror",
    ]
    non_rust_deps = [ "//third_party/boringssl" ]
  }

  rustc_binary("daemon") {
    name = "fdb_daemon"
    edition = "2018"
    source_root = "src/daemon.rs"
    with_unit_tests = true

    deps = [
      ":bridge-rustc",
      "//garnet/public/lib/fidl/rust/fidl",
      "//sdk/fidl/fuchsia.overnet:fuchsia.overnet-rustc",
      "//src/connectivity/overnet/lib/hoist",
      "//src/connectivity/overnet/tools/ascendd:lib",
      "//third_party/rust_crates:anyhow",
      "//third_party/rust_crates:futures",
      "//third_party/rust_crates:log",
      "//third_party/rust_crates:serde",
      "//third_party/rust_crates:serde_derive",
      "//third_party/rust_crates:serde_json",
      "//third_party/rust_crates:thiserror",
      "//third_party/rust_crates:tokio",
    ]
    non_rust_deps = [ "//third_party/boringssl" ]
    test_deps = []
  }
}

group("fdb") {
  deps = [
    ":bin($host_toolchain)",
    ":daemon($host_toolchain)",
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":bin_test($host_toolchain)",
    ":daemon_test($host_toolchain)",
  ]
}

fidl("bridge") {
  name = "fidl.developer.bridge"

  sources = [
    "fidl/daemon.fidl",
  ]

  fuzzers = [
    {
      protocol = "fidl.developer.bridge.Daemon"
    },
  ]
}
