# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/testing/environments.gni")
import("//src/media/audio/audio_core/test/api/api_test_component.gni")
import("//src/sys/build/fuchsia_test_package.gni")

audio_core_api_test_component("activity-reporter-test") {
  sources = [ "activity_reporter_test.cc" ]
}

audio_core_api_test_component("audio-capturer-test") {
  sources = [ "audio_capturer_test.cc" ]
  deps = [
    "//sdk/lib/media/audio/cpp",
    "//src/media/audio/lib/clock:clone_mono",
    "//src/media/audio/lib/clock/testing",
  ]
}

audio_core_api_test_component("audio-renderer-test") {
  sources = [ "audio_renderer_test.cc" ]
  deps = [
    "//sdk/lib/media/audio/cpp",
    "//src/media/audio/lib/clock:clone_mono",
    "//src/media/audio/lib/clock/testing",
  ]
}

audio_core_api_test_component("audio-tuner-test") {
  sources = [ "audio_tuner_test.cc" ]
  deps = [ "//sdk/fidl/fuchsia.media.tuning" ]
}

audio_core_api_test_component("gain-control-test") {
  sources = [ "gain_control_test.cc" ]
}

audio_core_api_test_component("usage-gain-reporter-test") {
  sources = [ "usage_gain_reporter_test.cc" ]
  deps = [ "//sdk/fidl/fuchsia.media.audio" ]
}

audio_core_api_test_component("usage-reporter-test") {
  sources = [ "usage_reporter_test.cc" ]
}

audio_core_api_test_component("volume-control-test") {
  sources = [ "volume_control_test.cc" ]
}

# These tests can run anywhere, including in emulators.
fuchsia_test_package("audio-core-api-tests") {
  test_components = [
    ":activity-reporter-test",
    ":audio-capturer-test",
    ":audio-renderer-test",
    ":audio-tuner-test",
    ":gain-control-test",
    ":usage-gain-reporter-test",
    ":usage-reporter-test",
    ":volume-control-test",
  ]
}
# TODO(50645): add after tests have been moved
# These tests must run on real hardware because they depend on real time.
#fuchsia_test_package("audio-core-api-tests-hw-only") {
#  test_specs = [
#    environments = hardware_envs
#  ]
#}
