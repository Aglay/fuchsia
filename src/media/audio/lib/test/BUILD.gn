# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# This source set contains a broad variety of test-related classes.
source_set("test") {
  testonly = true

  public_deps = [
    ":constants",
    ":hermetic_audio_test",
    ":message_transceiver",
    ":null_renderer_capturer",
    ":test_fixture",
  ]
}

source_set("test_fixture") {
  testonly = true

  sources = [
    "test_fixture.cc",
    "test_fixture.h",
  ]

  public_deps = [
    "//garnet/public/lib/gtest",
    "//zircon/public/lib/fit",
  ]
}

# Constants used by both non-hermetic and hermetic base classes
source_set("constants") {
  testonly = true

  sources = [ "constants.h" ]

  public_deps = [ "//sdk/fidl/fuchsia.media" ]
}

# Base class for hermetic test cases
source_set("hermetic_audio_test") {
  testonly = true

  sources = [
    "hermetic_audio_environment.cc",
    "hermetic_audio_environment.h",
    "hermetic_audio_test.cc",
    "hermetic_audio_test.h",
  ]

  public_deps = [
    ":constants",
    ":test_fixture",
    "//sdk/fidl/fuchsia.media",
    "//sdk/fidl/fuchsia.ultrasound",
    "//sdk/fidl/fuchsia.virtualaudio",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/cpp/testing:integration",
    "//sdk/lib/syslog/cpp",
  ]

  deps = [ "//zircon/system/fidl/fuchsia-scheduler" ]
}

# Flexible utility class for channel-based communication (such as to drivers or device services).
source_set("message_transceiver") {
  sources = [
    "message_transceiver.cc",
    "message_transceiver.h",
  ]

  deps = [
    "//sdk/lib/syslog/cpp",
    "//zircon/public/lib/async-cpp",
  ]
}

# Empty renderer and capturer implementations suitable for use in unit testing.
source_set("null_renderer_capturer") {
  sources = [
    "null_audio_capturer.h",
    "null_audio_renderer.h",
  ]

  deps = [ "//sdk/fidl/fuchsia.media" ]
}
