# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")

group("tests") {
  testonly = true
  public_deps = [
    ":apptests",
    ":pixeltests",
    ":unittests",
    ":viewstate_apptests",
  ]
}

source_set("gfx_tests_main") {
  testonly = true
  sources = [
    "run_all_unittests.cc",
  ]
  deps = [
    "//src/ui/lib/escher/test:gtest_escher",
  ]
  public_deps = [
    "//third_party/googletest:gtest",
  ]
}

source_set("mocks") {
  testonly = true
  sources = [
    "frame_scheduler_mocks.cc",
    "frame_scheduler_mocks.h",
    "mock_display_controller.h",
    "mocks.cc",
    "mocks.h",
  ]
  public_deps = [
    ":util",
    "//src/lib/inspect_deprecated",
    "//src/ui/scenic/lib/gfx",
  ]
}

source_set("testing_deps") {
  testonly = true
  sources = [
    "error_reporting_test.cc",
    "error_reporting_test.h",
    "frame_scheduler_test.cc",
    "frame_scheduler_test.h",
    "gfx_test.cc",
    "gfx_test.h",
    "session_handler_test.cc",
    "session_handler_test.h",
    "session_test.cc",
    "session_test.h",
    "vk_session_handler_test.cc",
    "vk_session_handler_test.h",
    "vk_session_test.cc",
    "vk_session_test.h",
  ]
  public_deps = [
    ":mocks",
    ":util",
    "//garnet/public/lib/fostr/fidl/fuchsia.ui.scenic",
    "//garnet/public/lib/gtest",
    "//garnet/public/lib/ui/input/cpp",
    "//sdk/fidl/fuchsia.ui.gfx",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/fidl/fuchsia.ui.scenic.internal",
    "//sdk/fidl/fuchsia.ui.views",
    "//sdk/lib/sys/cpp/testing:unit",
    "//sdk/lib/ui/scenic/cpp",
    "//src/lib/inspect_deprecated",
    "//src/lib/inspect_deprecated:reader",
    "//src/lib/inspect_deprecated/testing",
    "//src/ui/lib/escher",
    "//src/ui/lib/escher/test:gtest_escher",
    "//src/ui/lib/glm_workaround",
    "//src/ui/scenic/lib/gfx",
    "//src/ui/scenic/lib/scenic/tests:testing_deps",
    "//src/ui/scenic/lib/scenic/util",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/zx",
  ]
}

source_set("util") {
  testonly = true
  sources = [
    "util.cc",
    "util.h",
  ]
  public_deps = [
    "//garnet/public/lib/gtest",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/fidl/fuchsia.ui.scenic.internal",
    "//sdk/lib/ui/scenic/cpp",
    "//src/lib/fsl",
    "//src/lib/fxl",
    "//src/lib/inspect_deprecated",
    "//src/ui/lib/glm_workaround",
    "//src/ui/scenic/lib/scenic",
    "//src/ui/scenic/lib/scenic/util",
  ]
}

source_set("pixel_test") {
  testonly = true

  public = [
    "pixel_test.h",
  ]

  sources = [
    "pixel_test.cc",
  ]

  public_deps = [
    "//garnet/public/lib/ui/base_view/cpp",
    "//garnet/testing/views",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/fidl/fuchsia.ui.views",
    "//sdk/lib/sys/cpp/testing:integration",
    "//sdk/lib/ui/scenic/cpp",
    "//zircon/public/lib/zx",
  ]

  deps = [
    "//sdk/fidl/fuchsia.ui.gfx",
    "//sdk/fidl/fuchsia.ui.policy",
    "//src/lib/syslog/cpp",
    "//third_party/googletest:gtest",
  ]
}

executable("unittests") {
  output_name = "gfx_unittests"

  testonly = true
  sources = [
    "camera_unittest.cc",
    "compositor_unittest.cc",
    "default_frame_scheduler_unittest.cc",
    "display_controller_listener_test.cc",
    "dump_visitor_unittest.cc",
    "duration_predictor_unittest.cc",
    "escher_vulkan_smoke_test.cc",
    "focus_chain_unittest.cc",
    "frame_predictor_unittest.cc",
    "frame_stats_unittest.cc",
    "frame_timings_unittest.cc",
    "gfx_command_applier_unittest.cc",
    "hardware_layer_assignment_unittest.cc",
    "hittest_global_unittest.cc",
    "host_image_unittest.cc",
    "image_pipe2_unittest.cc",
    "image_pipe_render_unittest.cc",
    "image_pipe_unittest.cc",
    "image_pipe_unittest_common.cc",
    "import_unittest.cc",
    "memory_unittest.cc",
    "node_unittest.cc",
    "object_linker_unittest.cc",
    "pose_buffer_unit_test.cc",
    "protected_memory_visitor_unittest.cc",
    "resource_linker_unittest.cc",
    "scene_graph_unittest.cc",
    "scene_unittest.cc",
    "session_handler_unittest.cc",
    "session_unittest.cc",
    "shape_unittest.cc",
    "size_change_hint_unittest.cc",
    "snapshotter_unittest.cc",
    "stereo_camera_unittest.cc",
    "view_clipping_unittest.cc",
    "view_tree_unittest.cc",
    "view_unittest.cc",
  ]
  deps = [
    ":gfx_tests_main",
    ":testing_deps",
    "//src/lib/fsl",
    "//src/ui/lib/glm_workaround",
    "//src/ui/scenic/lib/gfx:object_linker",
    "//third_party/googletest:gmock",
  ]
  include_dirs = [ "//src/ui/lib/escher" ]
}

executable("apptests") {
  output_name = "gfx_apptests"

  testonly = true
  sources = [
    "gfx_apptest.cc",
  ]
  deps = [
    ":gfx_tests_main",
    ":testing_deps",
  ]
}

executable("pixeltests") {
  output_name = "gfx_pixeltests"

  testonly = true
  sources = [
    "scenic_pixel_test.cc",
  ]
  include_dirs = [ "//src/ui/lib/escher" ]
  deps = [
    ":gfx_tests_main",
    ":pixel_test",
    ":testing_deps",
    "//garnet/testing/views",
    "//sdk/fidl/fuchsia.images",
    "//sdk/lib/ui/scenic/cpp",
    "//src/lib/fxl",
    "//src/ui/lib/escher",
    "//src/ui/lib/glm_workaround",
    "//src/ui/lib/yuv",
    "//third_party/googletest:gtest",
    "//zircon/public/lib/zx",
  ]
}

executable("viewstate_apptests") {
  output_name = "gfx_viewstate_apptests"

  testonly = true
  sources = [
    "gfx_viewstate_apptest.cc",
  ]
  include_dirs = [ "//src/ui/lib/escher" ]
  deps = [
    ":gfx_tests_main",
    ":pixel_test",
    ":testing_deps",
    "//garnet/public/lib/gtest",
    "//garnet/public/lib/ui/base_view/cpp",
    "//garnet/testing/views",
    "//sdk/fidl/fuchsia.sys",
    "//sdk/fidl/fuchsia.ui.policy",
    "//sdk/fidl/fuchsia.ui.scenic",
    "//sdk/fidl/fuchsia.ui.views",
    "//sdk/lib/sys/cpp/testing:integration",
    "//sdk/lib/ui/scenic/cpp",
    "//src/lib/fxl",
    "//src/ui/lib/glm_workaround",
  ]
}

executable("mock_pose_buffer_provider_cc") {
  output_name = "mock_pose_buffer_provider"

  sources = [
    "mock_pose_buffer_provider.cc",
    "mock_pose_buffer_provider.h",
  ]

  deps = [
    "//sdk/fidl/fuchsia.ui.gfx",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//src/ui/lib/glm_workaround",
    "//zircon/public/lib/async-default",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
  ]
}

package("mock_pose_buffer_provider") {
  meta = [
    {
      path = "meta/mock_pose_buffer_provider.cmx"
      dest = "mock_pose_buffer_provider.cmx"
    },
  ]

  deps = [
    ":mock_pose_buffer_provider_cc",
  ]

  binary = "mock_pose_buffer_provider"
}
