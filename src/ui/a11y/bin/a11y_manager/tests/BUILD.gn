# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.
#
import("//build/test/test_package.gni")

group("tests") {
  testonly = true
  deps = [ ":a11y_tests" ]
}

test_package("a11y_tests") {
  deps = [
    ":a11y_manager_apptests",
    "//src/ui/a11y/lib/screen_reader/i18n:resources",
  ]

  resources = [
    # Needed to load Screen Reader strings.
    {
      path = rebase_path(
              "$target_gen_dir/../../../lib/screen_reader/i18n/en/l10n.json")
      dest = "assets/locales/en/l10n.json"
    },

    # [START icudata_resource]
    {
      # Fuchsia's ICU does not have libicudata.so, and the locale data MUST
      # be loaded from a file instead.
      path = rebase_path("//third_party/icu/common/icudtl.dat")
      dest = "icudtl.dat"
    },
  ]

  tests = [
    {
      name = "a11y_manager_apptests"
      environments = basic_envs
    },
  ]
}

executable("a11y_manager_apptests") {
  output_name = "a11y_manager_apptests"

  testonly = true

  sources = [ "app_unittest.cc" ]
  deps = [
    "//garnet/public/lib/gtest",
    "//garnet/public/lib/json",
    "//sdk/fidl/fuchsia.accessibility",
    "//sdk/fidl/fuchsia.sys",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//sdk/lib/sys/cpp/testing:unit",
    "//sdk/lib/syslog/cpp",
    "//sdk/lib/vfs/cpp",
    "//src/lib/fsl",
    "//src/lib/fxl/test:gtest_main",
    "//src/ui/a11y/bin/a11y_manager:lib",
    "//src/ui/a11y/bin/a11y_manager/tests/mocks",
    "//src/ui/a11y/bin/a11y_manager/tests/util",
    "//src/ui/a11y/lib/annotation/tests/mocks",
    "//src/ui/a11y/lib/magnifier/tests/mocks:mock_magnification_handler",
    "//src/ui/a11y/lib/screen_reader/tests/mocks",
    "//src/ui/a11y/lib/semantics/tests/mocks",
    "//src/ui/a11y/lib/testing:input",
    "//src/ui/a11y/lib/util",
    "//src/ui/a11y/lib/util/tests/mocks",
    "//src/ui/a11y/lib/view/tests/mocks",

    # TODO(fxbug.dev/57392): Move it back to //third_party once unification completes.
    "//zircon/third_party/rapidjson",
  ]

  # This is a dependency of the semantic tree to perform certain matrix transform operations.
  include_dirs = [ "//third_party/glm" ]
}
