# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_library.gni")
import("//build/rust/rustc_test.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")
import("//src/fonts/build/fonts.gni")

group("tests") {
  testonly = true
  public_deps = [
    ":font_provider_tests",
    "char_set:tests",
    "font_info:tests",
    "manifest:tests",
    "offset_string:tests",
    "tools:tests",
  ]
}

# Group of all the dependencies needed for downstream tests that rely on fonts,
# such as Chromium tests.
group("downstream_test_deps") {
  testonly = true
  public_deps = [
    ":fonts",
    ":open-fonts-collection",
  ]
}

rustc_binary("font_server") {
  name = "font_server"
  with_unit_tests = true
  edition = "2018"

  deps = [
    "char_set",
    "font_info",
    "freetype_ffi",
    "manifest",
    "//garnet/lib/rust/fidl_fuchsia_fonts_ext",
    "//garnet/lib/rust/io_util",
    "//garnet/public/lib/fidl/rust/fidl",
    "//garnet/public/rust/fdio",
    "//garnet/public/rust/fuchsia-component",
    "//garnet/public/rust/fuchsia-syslog",
    "//garnet/public/rust/fuchsia-zircon",
    "//sdk/fidl/fuchsia.fonts:fuchsia.fonts-rustc",
    "//sdk/fidl/fuchsia.fonts.experimental:fuchsia.fonts.experimental-rustc",
    "//sdk/fidl/fuchsia.intl:fuchsia.intl-rustc",
    "//sdk/fidl/fuchsia.pkg:fuchsia.pkg-rustc",
    "//src/lib/argh",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-url",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:itertools",
    "//third_party/rust_crates:lazy_static",
    "//third_party/rust_crates:libc",
    "//third_party/rust_crates:log",
    "//third_party/rust_crates:parking_lot",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:unicase",
    "//zircon/system/fidl/fuchsia-io:fuchsia-io-rustc",
    "//zircon/system/fidl/fuchsia-mem:fuchsia-mem-rustc",
  ]

  test_deps = [
    "//third_party/rust_crates:maplit",
    "//third_party/rust_crates:pretty_assertions",
  ]

  non_rust_deps = [ "//third_party/freetype2" ]
}

package("fonts") {
  deps = [
    ":font_server",
  ]

  binary = "font_server"

  meta = [
    {
      path = rebase_path("meta/fonts.cmx")
      dest = "fonts.cmx"
    },
  ]
}

# Integration tests without a `main()` function.
rustc_test("font_provider_test") {
  edition = "2018"

  deps = [
    "//garnet/lib/rust/fidl_fuchsia_fonts_ext",
    "//garnet/public/lib/fidl/rust/fidl",
    "//garnet/public/rust/fdio",
    "//garnet/public/rust/fuchsia-component",
    "//garnet/public/rust/fuchsia-syslog",
    "//garnet/public/rust/fuchsia-zircon",
    "//sdk/fidl/fuchsia.fonts:fuchsia.fonts-rustc",
    "//sdk/fidl/fuchsia.fonts.experimental:fuchsia.fonts.experimental-rustc",
    "//sdk/fidl/fuchsia.intl:fuchsia.intl-rustc",
    "//sdk/fidl/fuchsia.pkg:fuchsia.pkg-rustc",
    "//src/fonts/char_set",
    "//src/fonts/manifest",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-url",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:itertools",
    "//third_party/rust_crates:lazy_static",
    "//third_party/rust_crates:thiserror",
    "//zircon/system/fidl/fuchsia-io:fuchsia-io-rustc",
  ]
  source_root = "tests/lib.rs"
}

test_package("font_provider_tests") {
  deps = [
    ":font_provider_test_test",
    ":font_server_test",
    ":mock_font_resolver_bin",
    ":test-fonts-large-collection",
    ":test-fonts-medium-collection",
    ":test-fonts-small-collection",
  ]

  meta = [
    {
      path = rebase_path("meta/mock_font_resolver.cmx")
      dest = "mock_font_resolver.cmx"
    },
  ]

  binaries = [
    {
      name = "mock_font_resolver"
    },
  ]

  tests = [
    {
      name = "font_provider_test"
      environments = basic_envs
    },
    {
      name = "font_server_bin_test"
      environments = basic_envs
    },
  ]

  resources = [
    {
      path = rebase_path("tests/ephemeral.font_manifest.json")
      dest = "testdata/ephemeral.font_manifest.json"
    },
    {
      path = rebase_path("tests/aliases.font_manifest.json")
      dest = "testdata/aliases.font_manifest.json"
    },
  ]
}

rustc_binary("mock_font_resolver_bin") {
  name = "mock_font_resolver"
  edition = "2018"
  source_root = "testing/mock_font_resolver.rs"
  deps = [
    "//garnet/public/lib/fidl/rust/fidl",
    "//garnet/public/rust/fdio",
    "//garnet/public/rust/fuchsia-component",
    "//garnet/public/rust/fuchsia-syslog",
    "//garnet/public/rust/fuchsia-zircon",
    "//sdk/fidl/fuchsia.pkg:fuchsia.pkg-rustc",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-url",
    "//src/storage/lib/pseudo-fs",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:lazy_static",
    "//third_party/rust_crates:thiserror",
    "//zircon/system/fidl/fuchsia-io:fuchsia-io-rustc",
  ]
}

# Group of all open-source font packages. This should be added to
# `universe_package_labels`.
group("open-fonts") {
  deps = [
    "//src/fonts/groups:material-icons",
    "//src/fonts/groups:noto-sans",
    "//src/fonts/groups:noto-serif",
    "//src/fonts/groups:roboto",
    "//src/fonts/groups:roboto-mono",
    "//src/fonts/groups:roboto-slab",
  ]
}

local_font_bundle("open-fonts-local") {
  asset_names = [
    "MaterialIcons-Regular.ttf",
    "Roboto-Regular.ttf",
    "Roboto-Light.ttf",
    "Roboto-Medium.ttf",
    "RobotoMono-Regular.ttf",
    "RobotoSlab-Regular.ttf",
  ]
}

# Font collection for open-source products. This should be added to
# `base_package_labels` or `cache_package_labels`.
font_collection("open-fonts-collection") {
  # Ephemeral font packages are temporarily disabled because they break
  # Chromium/Cast tests (fxb/43327).

  # font_packages = [ ":open-fonts" ]
  local_font_bundles = [ ":open-fonts-local" ]
}

local_font_bundle("test-fonts-small-local") {
  testonly = true
  asset_names = [
    "MaterialIcons-Regular.ttf",
    "Roboto-Regular.ttf",
    "Roboto-Light.ttf",
    "Roboto-Medium.ttf",
    "RobotoMono-Regular.ttf",
    "RobotoSlab-Regular.ttf",
  ]
}

local_font_bundle("noto-cjk-test-fonts-local") {
  testonly = true
  asset_names = [
    "NotoSerifCJK-Regular.ttc",
    "NotoSansCJK-Regular.ttc",
  ]
}

# Minimal font collection for some tests.
# See out/default/obj/src/fonts/test_fonts_small.font_manifest.json
font_collection("test-fonts-small-collection") {
  testonly = true
  prefix = "test_fonts_small"
  local_font_bundles = [ ":test-fonts-small-local" ]
}

# Minimal font collection plus Noto CJK fonts, for tests.
# See out/default/obj/src/fonts/test_fonts.font_manifest.json
font_collection("test-fonts-medium-collection") {
  testonly = true
  prefix = "test_fonts_medium"
  local_font_bundles = [
    ":test-fonts-small-local",
    ":noto-cjk-test-fonts-local",
  ]
}

# Large font collection consisting of most of the open-source fonts we have.
# See out/default/obj/src/fonts/test_fonts_large.font_manifest.json
font_collection("test-fonts-large-collection") {
  testonly = true
  prefix = "test_fonts_large"
  font_packages = [ ":open-fonts" ]
  local_font_bundles = [ ":open-fonts-local" ]
}
