# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/fidl/fidl.gni")
import("//build/rust/rustc_library.gni")
import("//build/rust/rustc_test.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")
import("//build/testing/host_test_data.gni")

CORE_DEPS = [
  "//sdk/fidl/fuchsia.overnet:fuchsia.overnet-rustc",
  "//sdk/fidl/fuchsia.overnet.protocol:fuchsia.overnet.protocol-rustc",
  "//src/lib/fidl/rust/fidl",
  "//src/lib/fuchsia-async",
  "//src/lib/zircon/rust:fuchsia-zircon-status",
  "//third_party/boringssl/rust/boringssl-sys",
  "//third_party/rust_crates:anyhow",
  "//third_party/rust_crates:base64",
  "//third_party/rust_crates:byteorder",
  "//third_party/rust_crates:crc",
  "//third_party/rust_crates:futures",
  "//third_party/rust_crates:lazy_static",
  "//third_party/rust_crates:log",
  "//third_party/rust_crates:matches",
  "//third_party/rust_crates:parking_lot",
  "//third_party/rust_crates:rand",
  "//third_party/rust_crates:rental",
  "//third_party/rust_crates:thiserror",
  "//third_party/rust_crates/transitional/quiche",
  "//third_party/boringssl",
]

if (is_fuchsia) {
  CORE_DEPS += [ "//src/lib/zircon/rust:fuchsia-zircon" ]
} else {
  CORE_DEPS += [
    "//third_party/rust_crates:smol",
    "//third_party/rust_crates:tempfile",
  ]
}

rustc_library("core") {
  name = "overnet_core"
  edition = "2018"
  deps = CORE_DEPS
}

rustc_test("core_test") {
  name = "overnet_core_test"
  edition = "2018"
  deps = CORE_DEPS + [
           ":triangle-rustc",
           "//garnet/examples/fidl/services:echo-rustc",
           "//src/lib/fidl/rust/handle_tests:fidl_handle_tests",
           "//third_party/rust_crates:arbitrary",
         ]
  if (is_host) {
    deps += [ ":test_certs" ]
  }
}

if (is_host) {
  host_test_data("test_certs") {
    sources = [
      "//third_party/rust-mirrors/quiche/examples/cert.crt",
      "//third_party/rust-mirrors/quiche/examples/cert.key",
      "//third_party/rust-mirrors/quiche/examples/rootca.crt",
    ]

    outputs = [ "$root_out_dir/overnet_test_certs/{{source_file_part}}" ]
  }
}

unittest_package("overnet-core-tests") {
  deps = [ ":core_test" ]

  tests = [
    {
      name = "overnet_core_test"
      environments = [ emu_env ]
    },
  ]

  # Use quiche example certs for unit tests.
  resources = [
    {
      path = rebase_path("//third_party/rust-mirrors/quiche/examples/cert.crt")
      dest = "cert.crt"
    },
    {
      path = rebase_path("//third_party/rust-mirrors/quiche/examples/cert.key")
      dest = "cert.key"
    },
    {
      path =
          rebase_path("//third_party/rust-mirrors/quiche/examples/rootca.crt")
      dest = "rootca.crt"
    },
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":core_test($host_toolchain)",
    ":overnet-core-tests",
  ]
}

fidl("triangle") {
  # TODO(fxb/35879): Remove lint exclusions by fixing known FIDL lint violations in this target
  excluded_checks = [ "too-many-nested-libraries" ]

  name = "fuchsia.overnet.triangletests"

  sources = [ "src/integration_tests/triangle.test.fidl" ]

  public_deps = [ "//garnet/examples/fidl/services:echo" ]
}
