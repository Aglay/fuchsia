# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/fuchsia/rules.gni")
import("//build/driver_package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

config("wlan_config") {
  include_dirs = [ "." ]
}

driver_module("wlan_driver") {
  output_name = "wlan"
  sources = [
    "device.cc",
    "device.h",
    "driver.cc",
    "minstrel.cc",
    "minstrel.h",
    "probe_sequence.cc",
    "probe_sequence.h",
  ]

  deps = [
    "//sdk/banjo/ddk.hw.wlan.wlaninfo",
    "//sdk/banjo/ddk.protocol.ethernet",
    "//src/connectivity/wlan/lib/mlme/cpp:mlme",
    "//src/devices/lib/dev-operation",
    "//src/devices/lib/driver",
    "//src/lib/ddk",
    "//src/lib/ddktl",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/zx",
  ]

  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [
    "//build/config/fuchsia:enable_zircon_asserts",
    "//build/config/fuchsia:static_cpp_standard_library",
  ]
}

executable("wlan_minstrel_unittest") {
  testonly = true
  sources = [
    "minstrel.cc",
    "minstrel.h",
    "probe_sequence.cc",
    "probe_sequence.h",
    "tests/minstrel_unittest.cc",
    "tests/probe_sequence_unittest.cc",
  ]

  deps = [
    "//garnet/lib/wlan/protocol",
    "//src/connectivity/wlan/lib/common/cpp:common",
    "//src/connectivity/wlan/lib/mlme/cpp:mlme",
    "//src/connectivity/wlan/lib/mlme/cpp/tests:test_main",
    "//src/lib/timekeeper:testing",
    "//third_party/googletest:gtest",
    "//zircon/public/lib/fbl",
  ]

  # TODO(46746): Fix the leaks and remove this.
  deps += [ "//build/config/sanitizers:suppress-lsan.DO-NOT-USE-THIS" ]

  configs +=
      [ "//src/connectivity/wlan/lib/mlme/cpp/tests:wlan_mlme_tests_config" ]
}

test_package("wlan_drivers_tests") {
  deps = [ ":wlan_minstrel_unittest" ]
  tests = [
    {
      name = "wlan_minstrel_unittest"
      environments = basic_envs
    },
  ]
}

driver_package("wlan") {
  package_name = "wlan-system"

  deps = [ ":wlan_driver" ]

  drivers = [
    {
      name = "wlan.so"
    },
  ]
}
