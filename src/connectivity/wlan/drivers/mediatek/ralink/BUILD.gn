# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/cipd.gni")
import("//build/config/fuchsia/rules.gni")
import("//build/driver_package.gni")

driver_module("ralink_driver") {
  output_name = "ralink"

  sources = [
    "device.cc",
    "device.h",
    "driver.cc",
    "ralink.h",
    "register.h",
  ]

  deps = [
    "//garnet/lib/wlan/protocol",
    "//sdk/banjo/ddk.hw.wlan.wlaninfo",
    "//sdk/banjo/ddk.protocol.wlanphyimpl",
    "//sdk/fidl/fuchsia.wlan.device",
    "//src/connectivity/wlan/lib/common/cpp:common",
    "//src/connectivity/wlan/lib/mlme/cpp:mlme",
    "//src/devices/lib/driver",
    "//zircon/public/lib/async-cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/bitmap",
    "//zircon/public/lib/fbl",
    "//zircon/public/lib/fit",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/usb",
    "//zircon/public/lib/zx",
    "//zircon/system/banjo/ddk.protocol.usb",
  ]

  configs += [ "//build/config/fuchsia:enable_zircon_asserts" ]
  configs -= [ "//build/config/fuchsia:no_cpp_standard_library" ]
  configs += [ "//build/config/fuchsia:static_cpp_standard_library" ]
}

if (internal_access) {
  copy("ralink-firmware") {
    sources = [ "firmware/rt2870.bin" ]
    outputs = [ "$root_out_dir/firmware/rt2870.bin" ]
  }
}

driver_package("ralink") {
  deps = [ ":ralink_driver" ]

  drivers = [
    {
      name = "ralink.so"
    },
  ]

  if (internal_access) {
    deps += [
      # The copy step has to be in the shared-library toolchain to use the
      # expected output directory, since we treat firmware blobs as if they
      # were libraries which always use the shared-library toolchain to build.
      ":ralink-firmware($shlib_toolchain)",
    ]

    libraries = [
      {
        name = "firmware/rt2870.bin"
      },
    ]
  }
}
