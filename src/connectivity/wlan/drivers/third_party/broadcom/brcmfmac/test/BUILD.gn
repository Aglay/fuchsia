# Copyright (c) 2018 The Fuchsia Authors.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

executable("channel_conversion_test") {
  output_name = "channel_conversion_test"
  testonly = true
  sources = [ "channel_conversion_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:core",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
  ]
}

executable("debug_test") {
  output_name = "debug_test"
  testonly = true
  sources = [ "debug_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:debug",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
  ]
}

executable("dma_buffer_test") {
  output_name = "dma_buffer_test"
  testonly = true
  sources = [ "dma_buffer_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:dmabuf",
    "//src/devices/testing/fake-bti",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/zx",
  ]
}

executable("dma_pool_test") {
  output_name = "dma_pool_test"
  testonly = true
  sources = [ "dma_pool_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:dmabuf",
    "//src/devices/testing/fake-bti",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/zx",
  ]
}

executable("dma_ring_test") {
  output_name = "dma_ring_test"
  testonly = true
  sources = [ "dma_ring_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:dmabuf",
    "//src/devices/testing/fake-bti",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/zx",
  ]
}

executable("firmware_test") {
  output_name = "firmware_test"
  testonly = true
  sources = [ "firmware_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:core",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
  ]
}

executable("intrusive_list_test") {
  output_name = "intrusive_list_test"
  testonly = true
  sources = [ "intrusive_list_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:core",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
  ]
}

executable("netbuf_test") {
  output_name = "netbuf_test"
  testonly = true
  sources = [ "netbuf_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:debug",
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:linuxisms",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/zircon-internal",
  ]

  # TODO(46540): Fix the leaks and remove this.
  deps += [ "//build/config/sanitizers:suppress-lsan.DO-NOT-USE-THIS" ]
}

executable("timer_test") {
  output_name = "timer_test"
  testonly = true
  sources = [ "timer_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:core",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/sync",
  ]
}

executable("workqueue_test") {
  output_name = "workqueue_test"
  testonly = true
  sources = [ "workqueue_test.cc" ]
  deps = [
    "//src/connectivity/wlan/drivers/third_party/broadcom/brcmfmac:linuxisms",
    "//src/devices/testing/fake_ddk",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/public/lib/sync",
  ]
}

unittest_package("brcmfmac_test") {
  package_name = "brcmfmac_test"
  deps = []
  tests = []
  foreach(test_name,
          [
            "channel_conversion_test",
            "debug_test",
            "dma_buffer_test",
            "dma_pool_test",
            "dma_ring_test",
            "firmware_test",
            "intrusive_list_test",
            "netbuf_test",
            "timer_test",
            "workqueue_test",
          ]) {
    deps += [ ":$test_name" ]
    tests += [
      {
        name = "$test_name"
        environments = basic_envs
      },
    ]
  }
}
