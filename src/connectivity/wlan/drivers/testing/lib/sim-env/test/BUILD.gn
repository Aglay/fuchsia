# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/fuchsia/rules.gni")
import("//build/package.gni")
import("//build/test/test_package.gni")

executable("event_unittests") {
  output_name = "event_unittests"

  testonly = true

  sources = [ "event_unittests.cc" ]

  deps = [
    "//src/connectivity/wlan/drivers/testing/lib/sim-env",
    "//src/lib/fxl/test:gtest_main",
    "//zircon/system/public",
    "//zircon/system/ulib/async",
  ]
}

executable("rx_tests") {
  output_name = "rx_tests"

  testonly = true

  sources = [ "rx_tests.cc" ]

  deps = [
    "//sdk/fidl/fuchsia.wlan.ieee80211",
    "//src/connectivity/wlan/drivers/testing/lib/sim-env",
    "//src/lib/fxl/test/:gtest_main",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]
}

executable("frame_ie_tests") {
  output_name = "frame_ie_tests"

  testonly = true

  sources = [ "frame_ie_tests.cc" ]

  deps = [
    "//src/connectivity/wlan/drivers/testing/lib/sim-env",
    "//src/lib/fxl/test/:gtest_main",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]
}

executable("location_tests") {
  output_name = "location_tests"

  testonly = true

  sources = [ "location_tests.cc" ]

  deps = [
    "//src/connectivity/wlan/drivers/testing/lib/sim-env",
    "//src/lib/fxl/test/:gtest_main",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]
}

executable("trans_time_tests") {
  output_name = "trans_time_tests"

  testonly = true

  sources = [ "trans_time_tests.cc" ]

  deps = [
    "//src/connectivity/wlan/drivers/testing/lib/sim-env",
    "//src/lib/fxl/test/:gtest_main",
    "//third_party/googletest:gmock",
    "//third_party/googletest:gtest",
  ]
}

unittest_package("wlan-sim-env-test") {
  deps = [
    ":event_unittests",
    ":frame_ie_tests",
    ":location_tests",
    ":rx_tests",
    ":trans_time_tests",
  ]

  tests = [
    {
      name = "event_unittests"
      environments = basic_envs
    },
    {
      name = "rx_tests"
      environments = basic_envs
    },
    {
      name = "frame_ie_tests"
      environments = basic_envs
    },
    {
      name = "location_tests"
      environments = basic_envs
    },
    {
      name = "trans_time_tests"
      environments = basic_envs
    },
  ]
}
