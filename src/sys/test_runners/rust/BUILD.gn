# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/rust/rustc_binary.gni")
import("//build/test/test_package.gni")

rustc_binary("bin") {
  testonly = true
  name = "rust_test_runner"
  with_unit_tests = true
  edition = "2018"

  deps = [
    "//garnet/lib/rust/files_async",
    "//garnet/lib/rust/io_util",
    "//sdk/fidl/fuchsia.component.runner:fuchsia.component.runner-rustc",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2-rustc",
    "//sdk/fidl/fuchsia.test:fuchsia.test-rustc",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-runtime",
    "//src/lib/storage/vfs/rust:vfs",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/sys/lib/runner",
    "//src/sys/test_runners:lib",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:log",
    "//third_party/rust_crates:rand",
    "//third_party/rust_crates:regex",
    "//third_party/rust_crates:serde",
    "//third_party/rust_crates:serde_json",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:uuid",
    "//zircon/system/fidl/fuchsia-io:fuchsia-io-rustc",
    "//zircon/system/fidl/fuchsia-process:fuchsia-process-rustc",
  ]

  test_deps = [ "//src/sys/test_runners:test_lib" ]
}

package("rust-test-runner") {
  testonly = true
  deps = [
    ":bin",
    ":bin_test",
  ]

  binaries = [
    {
      name = "rust_test_runner"
    },
  ]

  meta = [
    {
      path = rebase_path("meta/rust-test-runner.cml")
      dest = "rust-test-runner.cm"
    },
  ]
}

group("rust") {
  testonly = true
  deps = [ ":rust-test-runner" ]
}

test_package("rust-test-runner-unit-tests") {
  deps = [
    ":bin_test",
    "test_data",
  ]

  binaries = [
    {
      name = "sample_rust_tests"
    },
    {
      name = "no_rust_tests"
    },
    {
      name = "huge_rust_tests"
    },
  ]

  tests = [
    {
      name = "rust_test_runner_bin_test"
      dest = "rust-test-runner-unit-tests"
      environments = basic_envs
    },
  ]
}

group("tests") {
  testonly = true
  deps = [
    ":rust-test-runner-unit-tests",
    "tests",
  ]
}
