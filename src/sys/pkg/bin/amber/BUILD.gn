# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config.gni")
import("//build/go/go_library.gni")
import("//build/go/go_test.gni")
import("//build/go/toolchain.gni")
import("//build/host.gni")
import("//build/images/manifest.gni")
import("//build/package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

go_library("lib") {
  name = "go.fuchsia.dev/fuchsia/src/sys/pkg/bin/amber/..."
  deps = [
    "//sdk/fidl/fuchsia.pkg($go_toolchain)",
    "//sdk/fidl/fuchsia.pkg.rewrite($go_toolchain)",
    "//sdk/fidl/fuchsia.space($go_toolchain)",
    "//sdk/fidl/fuchsia.sys($go_toolchain)",
    "//sdk/fidl/fuchsia.update($go_toolchain)",
    "//src/lib/syslog/go",
  ]

  sources = [
    "amberctl/amberctl.go",
    "urlscope/urlscope.go",
    "urlscope/urlscope_test.go",
  ]
}

package("pkgfs") {
  deps = [ "//garnet/go/src/grand_unified_binary" ]

  binaries = [
    {
      name = "pkgsvr"
      source = "grand_unified_binary"
    },
  ]

  meta = [
    {
      path = rebase_path("//src/sys/pkg/bin/pkgfs/meta/pkgsvr.cmx")
      dest = "pkgsvr.cmx"
    },
  ]
}

# FIXME: Until fuchsia_component exists again, ensure this and //src/sys/pkg/tests/amberctl:amberctl-tests stay in sync
package("amberctl") {
  deps = [ "//garnet/go/src/grand_unified_binary" ]

  binaries = [
    # TODO(raggi): remove the underscore version of the command name once all
    # docs and scripts have been updated.
    # See https://fuchsia-review.googlesource.com/c/fuchsia/+/255274.
    {
      name = "amber_ctl"
      source = "grand_unified_binary"
      shell = true
    },
    {
      name = "amberctl"
      source = "grand_unified_binary"
      shell = true
    },
  ]

  meta = [
    {
      path = rebase_path("meta/amberctl.cmx")
      dest = "amberctl.cmx"
    },
  ]
}

go_test("amber_urlscope_test") {
  gopackages = [ "go.fuchsia.dev/fuchsia/src/sys/pkg/bin/amber/urlscope" ]

  deps = [
    ":lib",
    "//src/sys/pkg/bin/pkgfs:pmd",
    "//src/sys/pkg/bin/pm:pm_lib",
    "//third_party/golibs:github.com/google/go-cmp",
  ]
}

test_package("amber_tests") {
  deps = [ ":amber_urlscope_test" ]
  tests = [
    {
      name = "amber_urlscope_test"
      environments = basic_envs
    },
  ]
}

# Retained for //garnet/packages/config:amber
config_data("config") {
  for_pkg = "sysmgr"
  outputs = [ "amber.config" ]
  sources = [ "startup.config" ]
}

group("tests") {
  testonly = true
  public_deps = [ ":amber_tests" ]
}
