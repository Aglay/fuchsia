# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/rust/rustc_binary.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")
import("//src/sys/pkg/bin/pkg-resolver/pkg_resolver_config.gni")
import("//src/sys/pkg/sysmgr_config.gni")

rustc_binary("bin") {
  name = "pkg_resolver"
  with_unit_tests = true
  edition = "2018"

  deps = [
    "//garnet/lib/rust/files_async",
    "//garnet/lib/rust/io_util",
    "//garnet/lib/rust/sysconfig-client",
    "//sdk/fidl/fuchsia.boot:fuchsia.boot-rustc",
    "//sdk/fidl/fuchsia.io:fuchsia.io-rustc",
    "//sdk/fidl/fuchsia.pkg:fuchsia.pkg-rustc",
    "//sdk/fidl/fuchsia.pkg.rewrite:fuchsia.pkg.rewrite-rustc",
    "//src/lib/cobalt/rust:fuchsia-cobalt",
    "//src/lib/diagnostics/inspect/contrib/rust",
    "//src/lib/diagnostics/inspect/rust",
    "//src/lib/fdio/rust:fdio",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-hyper",
    "//src/lib/fuchsia-url",
    "//src/lib/http-sse:http_sse",
    "//src/lib/http-uri-ext",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/trace/rust:trace",
    "//src/lib/trace/rust:trace-provider",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/sys/lib/fidl-fuchsia-pkg-ext",
    "//src/sys/lib/fidl-fuchsia-pkg-rewrite-ext",
    "//src/sys/lib/fuchsia_backoff",
    "//src/sys/pkg/lib/fuchsia-pkg",
    "//src/sys/pkg/lib/fuchsia-pkg-testing",
    "//src/sys/pkg/lib/metrics:cobalt_sw_delivery_registry_rustlib",
    "//src/sys/pkg/lib/pkgfs",
    "//src/sys/pkg/lib/system-image",
    "//src/sys/pkg/lib/tuf",
    "//third_party/cobalt/src/lib/client/rust:cobalt-client",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:argh",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:http",
    "//third_party/rust_crates:hyper",
    "//third_party/rust_crates:hyper-rustls",
    "//third_party/rust_crates:itertools",
    "//third_party/rust_crates:log",
    "//third_party/rust_crates:maplit",
    "//third_party/rust_crates:matches",
    "//third_party/rust_crates:parking_lot",
    "//third_party/rust_crates:pin-project",
    "//third_party/rust_crates:rand",
    "//third_party/rust_crates:serde",
    "//third_party/rust_crates:serde_json",
    "//third_party/rust_crates:tempfile",
    "//third_party/rust_crates:thiserror",
    "//third_party/rust_crates:url",
  ]

  test_deps = [ "//sdk/fidl/fuchsia.cobalt:fuchsia.cobalt-rustc" ]

  non_rust_deps =
      [ "//zircon/system/ulib/sysconfig-client:sysconfig-sync-client-c" ]

  sources = [
    "src/args.rs",
    "src/cache.rs",
    "src/cache/base_package_index.rs",
    "src/cache/retry.rs",
    "src/clock.rs",
    "src/config.rs",
    "src/experiment.rs",
    "src/font_package_manager.rs",
    "src/inspect_util.rs",
    "src/main.rs",
    "src/metrics_util.rs",
    "src/ota_channel.rs",
    "src/queue/mod.rs",
    "src/queue/state.rs",
    "src/repository.rs",
    "src/repository/updating_tuf_client.rs",
    "src/repository_manager.rs",
    "src/repository_service.rs",
    "src/resolver_service.rs",
    "src/rewrite_manager.rs",
    "src/rewrite_service.rs",
    "src/test_util.rs",
  ]
}

# Ensure the contents of this package stay in sync with //src/sys/pkg/tests/amberctl:amberctl-tests
package("pkg-resolver") {
  deps = [ ":bin" ]
  binaries = [
    {
      name = "pkg_resolver"
      dest = "pkg-resolver"
    },
  ]

  meta = [
    {
      path = rebase_path("meta/pkg-resolver.cmx")
      dest = "pkg-resolver.cmx"
    },
  ]
}

generate_manifest("empty-repo.manifest") {
  visibility = [ ":*" ]
  testonly = true
  sources = []
  args = []

  foreach(path,
          [
            "keys/root.json",
            "keys/snapshot.json",
            "keys/targets.json",
            "keys/timestamp.json",
            "repository/1.root.json",
            "repository/1.snapshot.json",
            "repository/1.targets.json",
            "repository/root.json",
            "repository/snapshot.json",
            "repository/targets.json",
            "repository/timestamp.json",
          ]) {
    source = "//src/sys/pkg/tests/pkg-resolver/template/${path}"
    sources += [ source ]
    args += [ "--entry=empty-repo/${path}=" + rebase_path(source) ]
  }
}
empty_repo_manifest_outputs = get_target_outputs(":empty-repo.manifest")
empty_repo_manifest_file = empty_repo_manifest_outputs[0]

test_package("pkg-resolver-unit-tests") {
  deps = [
    ":bin_test",
    ":empty-repo.manifest",
  ]
  extra = [ empty_repo_manifest_file ]

  tests = [
    {
      name = "pkg_resolver_bin_test"
      dest = "pkg-resolver-bin-test"
      environments = basic_envs

      # TODO(fxbug.dev/60612): Remove this override.
      log_settings = {
        max_severity = "ERROR"
      }
    },
  ]
}

pkg_resolver_config("enable_dynamic_configuration") {
  enable_dynamic_configuration = true
  deps = [ "//build/validate:non_production_tag" ]
}

sysmgr_config("config") {
  source = "sysmgr.config"
}

group("tests") {
  testonly = true
  public_deps = [ ":pkg-resolver-unit-tests" ]
}
