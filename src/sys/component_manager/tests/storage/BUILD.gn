# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_test.gni")
import("//build/test/test_package.gni")

rustc_test("storage_integration_test_bin") {
  name = "storage_integration_test"
  edition = "2018"
  source_root = "integration_test.rs"
  deps = [
    "//garnet/lib/rust/io_util",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2-rustc",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/sys/component_manager/tests:test_utils_lib",
    "//src/sys/component_manager/tests/fidl:components-rustc",
    "//src/sys/component_manager/tests/fidl:events-rustc",
    "//third_party/rust_crates:anyhow",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures",
    "//third_party/rust_crates:lazy_static",
    "//zircon/system/fidl/fuchsia-io:fuchsia-io-rustc",
  ]
}

rustc_binary("storage_realm_coll_bin") {
  name = "storage_realm_coll"
  edition = "2018"
  source_root = "storage_realm_coll.rs"
  deps = [
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2-rustc",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/sys/component_manager/tests/fidl:components-rustc",
    "//third_party/rust_crates:anyhow",
    "//zircon/system/fidl/fuchsia-io:fuchsia-io-rustc",
  ]
}

rustc_binary("storage_user_bin") {
  name = "storage_user"
  edition = "2018"
  source_root = "storage_user.rs"
  deps = [
    "//garnet/lib/rust/io_util",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-runtime",
    "//src/lib/storage/vfs/rust:vfs",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/sys/lib/directory_broker",
    "//third_party/rust_crates:anyhow",
    "//zircon/system/fidl/fuchsia-io:fuchsia-io-rustc",
  ]
}

test_package("storage_integration_test") {
  deps = [
    ":storage_integration_test_bin",
    ":storage_realm_coll_bin",
    ":storage_user_bin",
    "//src/sys/component_manager/tests/memfs",
  ]

  meta = [
    {
      path = rebase_path("meta/memfs.cml")
      dest = "memfs.cm"
    },
    {
      path = rebase_path("meta/storage_user.cml")
      dest = "storage_user.cm"
    },
    {
      path = rebase_path("meta/storage_realm.cml")
      dest = "storage_realm.cm"
    },
    {
      path = rebase_path("meta/storage_realm_coll.cml")
      dest = "storage_realm_coll.cm"
    },
  ]

  binaries = [
    {
      name = "memfs"
    },
    {
      name = "storage_user"
    },
    {
      name = "storage_realm_coll"
    },
  ]

  tests = [
    {
      name = "storage_integration_test"
    },
  ]
}
