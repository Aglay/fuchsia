# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/rustc_library.gni")
import("//build/rust/rustc_test.gni")
import("//build/test/test_package.gni")

rustc_library("hub_test_hook") {
  name = "hub_test_hook"
  edition = "2018"
  source_root = "hub_test_hook.rs"
  deps = [
    "//garnet/lib/rust/cm_rust",
    "//garnet/public/lib/fidl/rust/fidl",
    "//garnet/public/rust/fdio",
    "//garnet/public/rust/fuchsia-async",
    "//garnet/public/rust/fuchsia-component",
    "//garnet/public/rust/fuchsia-runtime",
    "//garnet/public/rust/fuchsia-zircon",
    "//sdk/fidl/fuchsia.sys:fuchsia.sys-rustc",
    "//src/sys/component_manager:lib",
    "//src/sys/component_manager/tests/fidl:fuchsia.test.hub-rustc",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures-preview",
    "//third_party/rust_crates:lazy_static",
  ]
}

rustc_library("breakpoints") {
  name = "breakpoints"
  edition = "2018"
  source_root = "breakpoints.rs"
  deps = [
    "//garnet/lib/rust/cm_rust",
    "//garnet/public/lib/fidl/rust/fidl",
    "//garnet/public/rust/fdio",
    "//garnet/public/rust/fuchsia-async",
    "//garnet/public/rust/fuchsia-component",
    "//garnet/public/rust/fuchsia-runtime",
    "//garnet/public/rust/fuchsia-zircon",
    "//sdk/fidl/fuchsia.sys:fuchsia.sys-rustc",
    "//src/sys/component_manager:lib",
    "//src/sys/component_manager/tests/fidl:fuchsia.test.hub-rustc",
    "//third_party/rust_crates:async-trait",
    "//third_party/rust_crates:futures-preview",
    "//third_party/rust_crates:lazy_static",
  ]
}

rustc_test("hub_integration_test_bin") {
  name = "hub_integration_test"
  edition = "2018"
  source_root = "hub_integration_test.rs"
  deps = [
    ":hub_test_hook",
    ":breakpoints",
    "//examples/components/routing/fidl:echo-rustc",
    "//garnet/lib/rust/cm_fidl_translator",
    "//garnet/lib/rust/cm_rust",
    "//garnet/lib/rust/io_util",
    "//garnet/public/lib/fidl/rust/fidl",
    "//garnet/public/rust/fdio",
    "//garnet/public/rust/fuchsia-async",
    "//garnet/public/rust/fuchsia-component",
    "//garnet/public/rust/fuchsia-runtime",
    "//garnet/public/rust/fuchsia-vfs/pseudo-fs",
    "//garnet/public/rust/fuchsia-zircon",
    "//sdk/fidl/fuchsia.data:fuchsia.data-rustc",
    "//sdk/fidl/fuchsia.sys:fuchsia.sys-rustc",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2-rustc",
    "//src/sys/component_manager:lib",
    "//src/sys/component_manager/tests:test_utils",
    "//src/sys/component_manager/tests/fidl:fuchsia.test.hub-rustc",
    "//third_party/rust_crates:failure",
    "//third_party/rust_crates:futures-preview",
    "//third_party/rust_crates:log",
    "//third_party/rust_crates:url",
    "//zircon/system/fidl/fuchsia-io:fuchsia-io-rustc",
  ]
  non_rust_deps = [
    "//zircon/public/lib/async",
    "//zircon/public/lib/async-default",
    "//zircon/public/lib/async-loop",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/sync",
    "//zircon/public/lib/memfs",
  ]
}

test_package("hub_integration_test") {
  deps = [
    ":hub_integration_test_bin",
    "components:advanced_routing_reporter_bin",
    "components:dynamic_child_reporter_bin",
    "components:simple_component_bin",
    "components:visibility_reporter_bin",
    "//examples/components/routing/echo_server",
  ]

  meta = [
    {
      path = rebase_path("//examples/components/routing/meta/echo_server.cml")
      dest = "echo_server.cm"
    },
    {
      path = rebase_path("components/advanced_routing/meta/reporter.cml")
      dest = "advanced_routing_reporter.cm"
    },
    {
      path = rebase_path("components/advanced_routing/meta/echo_realm.cml")
      dest = "echo_realm.cm"
    },
    {
      path = rebase_path("components/dynamic_child/meta/reporter.cml")
      dest = "dynamic_child_reporter.cm"
    },
    {
      path = rebase_path("components/simple_component/meta/simple.cml")
      dest = "simple.cm"
    },
    {
      path = rebase_path("components/visibility/meta/reporter.cml")
      dest = "visibility_reporter.cm"
    },
    {
      path = rebase_path("components/visibility/meta/child.cml")
      dest = "child.cm"
    },
    {
      path = rebase_path("components/visibility/meta/grandchild.cml")
      dest = "grandchild.cm"
    },
  ]

  binaries = [
    {
      name = "echo_server"
    },
    {
      name = "dynamic_child_reporter"
    },
    {
      name = "advanced_routing_reporter"
    },
    {
      name = "simple"
    },
    {
      name = "visibility_reporter"
    },
  ]

  tests = [
    {
      name = "hub_integration_test"
    },
  ]
}
