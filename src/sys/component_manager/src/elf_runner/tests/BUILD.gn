# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")
import("//build/rust/rustc_binary.gni")
import("//build/rust/rustc_test.gni")

group("tests") {
  testonly = true
  deps = [ ":elf_runner_lifecycle_test" ]
}

rustc_test("lifecycle") {
  source_root = "lifecycle.rs"
  name = "lifecycle_integration_test"
  edition = "2018"

  deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io-rustc",
    "//sdk/fidl/fuchsia.process.lifecycle:fuchsia.process.lifecycle-rustc",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2-rustc",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-runtime",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/sys/component_manager/tests:test_utils_lib",
    "//third_party/rust_crates:futures-util",
  ]
}

rustc_test("lifecycle_timeout") {
  source_root = "lifecycle_timeout.rs"
  name = "lifecycle_timeout_integration_test"
  edition = "2018"

  deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io-rustc",
    "//sdk/fidl/fuchsia.process.lifecycle:fuchsia.process.lifecycle-rustc",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2-rustc",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-runtime",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/sys/component_manager/tests:test_utils_lib",
    "//third_party/rust_crates:futures-util",
  ]
}

rustc_test("lifecycle_timeout_unresponsive") {
  source_root = "lifecycle_timeout_unresponsive.rs"
  name = "lifecycle_timeout_unresponsive_integration_test"
  edition = "2018"

  deps = [
    "//sdk/fidl/fuchsia.io:fuchsia.io-rustc",
    "//sdk/fidl/fuchsia.process.lifecycle:fuchsia.process.lifecycle-rustc",
    "//sdk/fidl/fuchsia.sys2:fuchsia.sys2-rustc",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-component",
    "//src/lib/fuchsia-runtime",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//src/sys/component_manager/tests:test_utils_lib",
    "//third_party/rust_crates:futures-util",
  ]
}

rustc_binary("unresponsive_component") {
  source_root = "unresponsive_component.rs"
  name = "unresponsive_component"
  edition = "2018"

  deps = [
    "//sdk/fidl/fuchsia.process.lifecycle:fuchsia.process.lifecycle-rustc",
    "//src/lib/fidl/rust/fidl",
    "//src/lib/fuchsia-async",
    "//src/lib/fuchsia-runtime",
    "//src/lib/syslog/rust:syslog",
    "//src/lib/zircon/rust:fuchsia-zircon",
    "//third_party/rust_crates:futures-util",
  ]
}

package("elf_runner_lifecycle_test") {
  testonly = true
  deps = [
    ":lifecycle",
    ":lifecycle_timeout",
    ":lifecycle_timeout_unresponsive",
    ":unresponsive_component",
    "//examples/components/basic:lifecycle_full_bin",
  ]

  binaries = [
    {
      name = "lifecycle_full"
    },
    {
      name = "unresponsive_component"
    },
  ]

  tests = [
    {
      name = "lifecycle_integration_test"
    },
    {
      name = "lifecycle_timeout_integration_test"
    },
    {
      name = "lifecycle_timeout_unresponsive_integration_test"
    },
  ]

  meta = [
    {
      path = rebase_path("//examples/components/basic/meta/lifecycle_full.cml")
      dest = "lifecycle-full.cm"
    },
    {
      path = rebase_path("meta/lifecycle.cml")
      dest = "lifecycle_integration_test.cm"
    },
    {
      path = rebase_path("meta/lifecycle_timeout.cml")
      dest = "lifecycle_timeout_integration_test.cm"
    },
    {
      path = rebase_path("meta/lifecycle_timeout_root.cml")
      dest = "lifecycle_timeout_root.cm"
    },
    {
      path = rebase_path("meta/lifecycle_timeout_node.cml")
      dest = "lifecycle_timeout_node.cm"
    },
    {
      path = rebase_path("meta/lifecycle_timeout_unresponsive.cml")
      dest = "lifecycle_timeout_unresponsive_integration_test.cm"
    },
    {
      path = rebase_path("meta/lifecycle_timeout_unresponsive_root.cml")
      dest = "lifecycle_timeout_unresponsive_root.cm"
    },
    {
      path = rebase_path("meta/lifecycle_timeout_unresponsive_node.cml")
      dest = "lifecycle_timeout_unresponsive_node.cm"
    },
  ]
}
