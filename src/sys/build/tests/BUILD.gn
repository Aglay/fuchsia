# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//src/sys/build/components.gni")

# TODO(shayba)
# * Single resources() target shared between multiple components
# * resources() target with multiple sources & a destination pattern
# * Multiple components in a package
# * Same component in two packages
# * Package with no components at all (data package)
# * package_name and component_name overrides
# * Simple integration test
#
# * Add and demonstrate all-in-one shortcuts:
# - fuchsia_unit_test
# - fuchsia_integration_test
# - More?

# Run all tests with:
# fx test //src/sys/build/tests
group("tests") {
  deps = [ ":return_zero_test" ]
  testonly = true
}

executable("return_zero_bin") {
  output_name = "return_zero"
  sources = [ "return_zero.cc" ]
  testonly = true
}

fuchsia_component("return_zero_component") {
  manifest = "return_zero.cmx"
  component_name = "return-zero"
  testonly = true
  resources = [
    {
      source = "$root_out_dir/return_zero"
      destination = "bin/return_zero"
    },
  ]
  deps = [ ":return_zero_bin" ]
}

fuchsia_package("return_zero_package") {
  package_name = "return-zero-package"
  components = [ ":return_zero_component" ]
  testonly = true
}

# Run just this test with any of the following:
# * Specify the test component's URL:
#   fx test fuchsia-pkg://fuchsia.com/return-zero-package#meta/return-zero.cmx
# * Specify the test component's name:
#   fx test return-zero
# * Specify the test's package, and run all registered test components in it:
#   fx test return-zero-package
fuchsia_test("return_zero_test") {
  package = ":return_zero_package"
  package_name = "return-zero-package"
  component = ":return_zero_component"
  environments = basic_envs
}
