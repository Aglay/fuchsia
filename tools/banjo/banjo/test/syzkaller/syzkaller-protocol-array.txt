# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# WARNING: THIS FILE IS MACHINE GENERATED. DO NOT EDIT.
# Generated from the banjo.examples.syzkaller.protocol.array banjo file

void_ptr(vptr ptr[in, int64])
void_ptr(vptr ptr[out, int64])
void_ptr(vptr ptr[in, array[int64]], vptr_len len[vptr])
void_ptr(vptr ptr[out, array[int64]], vptr_len len[vptr])
usize(sz ptr[in, intptr])
usize(sz ptr[out, intptr])
usize(sz ptr[in, array[intptr]], sz_len len[sz])
usize(sz ptr[out, array[intptr]], sz_len len[sz])
bool(b ptr[in, bool])
bool(b ptr[out, bool])
bool(b ptr[in, array[bool]], b_len len[b])
bool(b ptr[out, array[bool]], b_len len[b])
int8(i8 ptr[in, int8])
int8(i8 ptr[out, int8])
int8(i8 ptr[in, array[int8]], i8_len len[i8])
int8(i8 ptr[out, array[int8]], i8_len len[i8])
int16(i16 ptr[in, int16])
int16(i16 ptr[out, int16])
int16(i16 ptr[in, array[int16]], i16_len len[i16])
int16(i16 ptr[out, array[int16]], i16_len len[i16])
int32(i32 ptr[in, int32])
int32(i32 ptr[out, int32])
int32(i32 ptr[in, array[int32]], i32_len len[i32])
int32(i32 ptr[out, array[int32]], i32_len len[i32])
int64(i64 ptr[in, int64])
int64(i64 ptr[out, int64])
int64(i64 ptr[in, array[int64]], i64_len len[i64])
int64(i64 ptr[out, array[int64]], i64_len len[i64])
uint8(u8 ptr[in, int8])
uint8(u8 ptr[out, int8])
uint8(u8 ptr[in, array[int8]], u8_len len[u8])
uint8(u8 ptr[out, array[int8]], u8_len len[u8])
uint16(u16 ptr[in, int16])
uint16(u16 ptr[out, int16])
uint16(u16 ptr[in, array[int16]], u16_len len[u16])
uint16(u16 ptr[out, array[int16]], u16_len len[u16])
uint32(u32 ptr[in, int32])
uint32(u32 ptr[out, int32])
uint32(u32 ptr[in, array[int32]], u32_len len[u32])
uint32(u32 ptr[out, array[int32]], u32_len len[u32])
uint64(u64 ptr[in, int64])
uint64(u64 ptr[out, int64])
uint64(u64 ptr[in, array[int64]], u64_len len[u64])
uint64(u64 ptr[out, array[int64]], u64_len len[u64])