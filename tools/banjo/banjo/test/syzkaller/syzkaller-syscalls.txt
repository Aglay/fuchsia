# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# WARNING: THIS FILE IS MACHINE GENERATED. DO NOT EDIT.
# Generated from the banjo.examples.syzkaller.syscalls banjo file

zx_arm64_exc_data {
	esr	int32
	far	int64
}

zx_exception_context {

}

zx_exception_header {
	size	int32
	type	int32
}

zx_info_bti {
	minimum_contiguity	int64
	aspace_size	int64
}

zx_info_cpu_stats {
	cpu_number	int32
	flags	int32
	idle_time	int64
	reschedules	int64
	context_switches	int64
	irq_preempts	int64
	preempts	int64
	yields	int64
	ints	int64
	timer_ints	int64
	timers	int64
	page_faults	int64
	exceptions	int64
	syscalls	int64
	reschedule_ipis	int64
	generic_ipis	int64
}

zx_info_handle_count {
	handle_count	int32
}

zx_info_job {
	return_code	int64
	exited	bool8
	kill_on_oom	bool8
	debugger_attached	bool8
}

zx_info_kmem_stats {
	total_bytes	int64
	free_bytes	int64
	wired_bytes	int64
	total_heap_bytes	int64
	free_heap_bytes	int64
	vmo_bytes	int64
	mmu_overhead_bytes	int64
	ipc_bytes	int64
	other_bytes	int64
}

zx_info_maps_mapping {
	mmu_flags	int32
	vmo_koid	int64
	vmo_offset	int64
	committed_pages	intptr
}

zx_info_process {
	return_code	int64
	started	bool8
	exited	bool8
	debugger_attached	bool8
}

zx_info_task_stats {
	mem_mapped_bytes	intptr
	mem_private_bytes	intptr
	mem_shared_bytes	intptr
	mem_scaled_shared_bytes	intptr
}

zx_info_thread_stats {
	total_runtime	int64
}

zx_info_vmar {
	base	intptr
	len	intptr
}

zx_iommu_desc_dummy {
	reserved	int8
}

zx_packet_exception {
	pid	int64
	tid	int64
	reserved0	int64
	reserved1	int64
}

zx_packet_guest_bell {
	addr	int64
	reserved0	int64
	reserved1	int64
	reserved2	int64
}

zx_packet_guest_io {
	port	int16
	access_size	int8
	input	bool8
	reserved0	int64
	reserved1	int64
	reserved2	int64
}

zx_packet_guest_vcpu {
	type	int8
	reserved	int64
}

zx_packet_interrupt {
	timestamp	int64
	reserved0	int64
	reserved1	int64
	reserved2	int64
}

zx_packet_page_request {
	command	int16
	flags	int16
	reserved0	int32
	offset	int64
	length	int64
	reserved1	int64
}

zx_packet_signal {
	trigger	int32
	observed	int32
	count	int64
	reserved0	int64
	reserved1	int64
}

zx_pci_bar {
	id	int32
	type	int32
	size	intptr
}

zx_pci_init_arg {
	num_irqs	int32
	addr_window_count	int32
}

zx_pcie_device_info {
	vendor_id	int16
	device_id	int16
	base_class	int8
	sub_class	int8
	program_interface	int8
	revision_id	int8
	bus_id	int8
	dev_id	int8
	func_id	int8
}

zx_policy_basic {
	condition	int32
	policy	int32
}

zx_policy_timer_slack {
	min_slack	int64
	default_mode	int32
}

zx_profile_scheduler {
	priority	int32
	boost	int32
	deboost	int32
	quantum	int32
}

zx_smc_parameters {
	func_id	int32
	arg1	int64
	arg2	int64
	arg3	int64
	arg4	int64
	arg5	int64
	arg6	int64
	client_id	int16
	secure_os_id	int16
}

zx_smc_result {
	arg0	int64
	arg1	int64
	arg2	int64
	arg3	int64
	arg6	int64
}

zx_system_powerctl_arg {

}

zx_thread_state_fp_regs {
	fcw	int16
	fsw	int16
	ftw	int8
	reserved	int8
	fop	int16
	fip	int64
	fdp	int64
}

zx_thread_state_general_regs {
	rax	int64
	rbx	int64
	rcx	int64
	rdx	int64
	rsi	int64
	rdi	int64
	rbp	int64
	rsp	int64
	r8	int64
	r9	int64
	r10	int64
	r11	int64
	r12	int64
	r13	int64
	r14	int64
	r15	int64
	rip	int64
	rflags	int64
	fs_base	int64
	gs_base	int64
}

zx_vcpu_io {
	access_size	int8
}

zx_vcpu_state {
	rax	int64
	rcx	int64
	rdx	int64
	rbx	int64
	rsp	int64
	rbp	int64
	rsi	int64
	rdi	int64
	r8	int64
	r9	int64
	r10	int64
	r11	int64
	r12	int64
	r13	int64
	r14	int64
	r15	int64
	rflags	int64
}

zx_wait_item {
	handle	int32
	waitfor	int32
	pending	int32
}

zx_x86_64_exc_data {
	vector	int64
	err_code	int64
	cr2	int64
}

zx_iommu_desc_intel {
	register_base	int64
	pci_segment	int16
	whole_segment	bool8
	scope_bytes	int8
	reserved_memory_bytes	int16
	reserved	array[int8, 2]
}

zx_thread_state_debug_regs {
	dr	array[int64, 4]
	dr6	int64
	dr7	int64
	dr6_status	int64
	dr7_control	int64
}

zx_info_process_handle_stats {
	handle_count	array[int32, 64]
}

zx_packet_guest_mem {
	addr	int64
	inst_len	int8
	inst_buf	array[int8, 15]
	default_operand_size	int8
	reserved	array[int8, 7]
}

zx_thread_state_vector_regs {
	opmask	array[int64, 8]
	mxcsr	int32
}

zx_info_vmo {
	koid	int64
	name	array[int8, 32]
	size_bytes	int64
	parent_koid	int64
	num_children	intptr
	num_mappings	intptr
	share_count	intptr
	flags	flags[zx_info_vmo_type_vals]
	committed_bytes	int64
	handle_rights	int32
	cache_policy	flags[zx_cache_policy_options]
}

zx_info_resource {
	kind	flags[zx_rsrc_kind_vals]
	flags	int32
	base	int64
	size	intptr
	name	array[int8, 32]
}

zx_info_socket {
	options	flags[zx_socket_create_options]
	rx_buf_max	intptr
	rx_buf_size	intptr
	rx_buf_available	intptr
	tx_buf_max	intptr
	tx_buf_size	intptr
}

zx_info_handle_basic {
	koid	int64
	rights	int32
	type	flags[zx_obj_types]
	related_koid	int64
	props	flags[zx_obj_props]
}

zx_info_thread {
	state	flags[zx_thread_state_values]
}

zx_info_maps {
	name	array[int8, 32]
	base	int64
	size	intptr
	depth	intptr
	type	flags[zx_info_maps_type_vals]
}

zx_port_packet {
	key	int64
	type	flags[zx_port_packet]
	status	int32
}

zx_profile_info {
	type	flags[zx_profile_info_type]
}

zx_exception_report {
	header	zx_exception_header
	context	zx_exception_context
}

zx_packet_user [
	u64	array[int64, 4]
	u32	array[int32, 8]
	u16	array[int16, 16]
	c8	array[int8, 32]
]

zx_job_policy_types [
	type1	ptr[in, zx_policy_basic]
	type2	ptr[in, zx_policy_timer_slack]
]

zx_vcpu_read_state_types [
	type1	ptr[out, zx_vcpu_state]
]

zx_vcpu_write_state_types [
	type1	ptr[in, zx_vcpu_state]
	type2	ptr[in, zx_vcpu_io]
]

zx_iommu_types [
	type1	ptr[in, zx_iommu_desc_dummy]
	type2	ptr[in, zx_iommu_desc_intel]
]

zx_thread_read_state_types [
	type1	ptr[out, zx_thread_state_general_regs]
	type2	ptr[out, zx_thread_state_fp_regs]
	type3	ptr[out, zx_thread_state_vector_regs]
	type4	ptr[out, zx_thread_state_debug_regs]
	type5	ptr[out, int32]
	type6	ptr[out, int32]
	type7	ptr[out, int32]
]

zx_thread_write_state_types [
	type1	ptr[in, zx_thread_state_general_regs]
	type2	ptr[in, zx_thread_state_fp_regs]
	type3	ptr[in, zx_thread_state_vector_regs]
	type4	ptr[in, zx_thread_state_debug_regs]
	type5	ptr[in, int32]
	type6	ptr[in, int32]
	type7	ptr[in, int32]
]

zx_object_info_types [
	type1	ptr[out, bool8]
	type2	ptr[out, bool8]
	type3	ptr[out, zx_info_handle_basic]
	type4	ptr[out, zx_info_process]
	type5	ptr[out, array[int64]]
	type6	ptr[out, zx_info_vmar]
	type6	ptr[out, array[int64]]
	type7	ptr[out, array[int64]]
	type8	ptr[out, zx_info_thread]
	type9	ptr[out, zx_exception_report]
	type10	ptr[out, zx_info_task_stats]
	type11	ptr[out, array[zx_info_maps]]
	type12	ptr[out, array[zx_info_vmo]]
	type13	ptr[out, zx_info_thread_stats]
	type14	ptr[out, array[zx_info_cpu_stats]]
	type15	ptr[out, zx_info_kmem_stats]
	type16	ptr[out, zx_info_resource]
	type17	ptr[out, zx_info_handle_count]
	type18	ptr[out, zx_info_bti]
	type19	ptr[out, zx_info_process_handle_stats]
	type20	ptr[out, zx_info_socket]
	type21	ptr[out, zx_info_vmo]
	type22	ptr[out, zx_info_job]
]

thread_state_kind = ZX_THREAD_STATE_GENERAL_REGS, ZX_THREAD_STATE_FP_REGS, ZX_THREAD_STATE_VECTOR_REGS, ZX_THREAD_STATE_DEBUG_REGS, ZX_THREAD_STATE_SINGLE_STEP, ZX_THREAD_X86_REGISTER_FS, ZX_THREAD_X86_REGISTER_GS

zx_bti_options = ZX_BTI_PERM_READ, ZX_BTI_PERM_WRITE, ZX_BTI_PERM_EXECUTE, ZX_BTI_COMPRESS, ZX_BTI_CONTIGUOUS

zx_cache_flush_options = ZX_CACHE_FLUSH_DATA, ZX_CACHE_FLUSH_INVALIDATE, ZX_CACHE_FLUSH_INSN

zx_cache_policy_options = ZX_CACHE_POLICY_CACHED, ZX_CACHE_POLICY_UNCACHED, ZX_CACHE_POLICY_UNCACHED_DEVICE, ZX_CACHE_POLICY_WRITE_COMBINING, ZX_CACHE_POLICY_MASK

zx_clock_id = ZX_CLOCK_MONOTONIC, ZX_CLOCK_UTC, ZX_CLOCK_THREAD

zx_debuglog_options = ZX_LOG_FLAG_READABLE

zx_event_create_options = ZX_EVENT_DEFAULT

zx_eventpair_create_options = ZX_EVENTPAIR_DEFAULT

zx_exception_channel_types = ZX_EXCEPTION_CHANNEL_TYPE_NONE, ZX_EXCEPTION_CHANNEL_TYPE_DEBUGGER, ZX_EXCEPTION_CHANNEL_TYPE_THREAD, ZX_EXCEPTION_CHANNEL_TYPE_PROCESS, ZX_EXCEPTION_CHANNEL_TYPE_JOB, ZX_EXCEPTION_CHANNEL_TYPE_JOB_DEBUGGER

zx_exception_port_types = ZX_EXCEPTION_PORT_TYPE_NONE, ZX_EXCEPTION_PORT_TYPE_DEBUGGER, ZX_EXCEPTION_PORT_TYPE_THREAD, ZX_EXCEPTION_PORT_TYPE_PROCESS, ZX_EXCEPTION_PORT_TYPE_JOB, ZX_EXCEPTION_PORT_TYPE_JOB_DEBUGGER

zx_feature_kind = ZX_FEATURE_KIND_CPU, ZX_FEATURE_KIND_HW_BREAKPOINT_COUNT, ZX_FEATURE_KIND_HW_WATCHPOINT_COUNT

zx_guest_trap_kind = ZX_GUEST_TRAP_BELL, ZX_GUEST_TRAP_MEM, ZX_GUEST_TRAP_IO

zx_info_maps_type_vals = ZX_INFO_MAPS_TYPE_NONE, ZX_INFO_MAPS_TYPE_ASPACE, ZX_INFO_MAPS_TYPE_VMAR, ZX_INFO_MAPS_TYPE_MAPPING

zx_info_vmo_type_vals = ZX_INFO_VMO_TYPE_PAGED, ZX_INFO_VMO_TYPE_PHYSICAL, ZX_INFO_VMO_RESIZABLE, ZX_INFO_VMO_IS_COW_CLONE, ZX_INFO_VMO_VIA_HANDLE, ZX_INFO_VMO_VIA_MAPPING, ZX_INFO_VMO_PAGER_BACKED, ZX_INFO_VMO_CONTIGUOUS

zx_interrupt_options = ZX_INTERRUPT_REMAP_IRQ, ZX_INTERRUPT_MODE_DEFAULT, ZX_INTERRUPT_MODE_EDGE_LOW, ZX_INTERRUPT_MODE_EDGE_HIGH, ZX_INTERRUPT_MODE_LEVEL_LOW, ZX_INTERRUPT_MODE_LEVEL_HIGH, ZX_INTERRUPT_MODE_EDGE_BOTH, ZX_INTERRUPT_MODE_MASK, ZX_INTERRUPT_VIRTUAL

zx_iommu_type = ZX_IOMMU_TYPE_DUMMY, ZX_IOMMU_TYPE_INTEL

zx_job_policy_actions = ZX_POL_ACTION_ALLOW, ZX_POL_ACTION_DENY, ZX_POL_ACTION_ALLOW_EXCEPTION, ZX_POL_ACTION_DENY_EXCEPTION, ZX_POL_ACTION_KILL

zx_job_policy_conditions = ZX_POL_BAD_HANDLE, ZX_POL_WRONG_OBJECT, ZX_POL_VMAR_WX, ZX_POL_NEW_ANY, ZX_POL_NEW_VMO, ZX_POL_NEW_CHANNEL, ZX_POL_NEW_EVENT, ZX_POL_NEW_EVENTPAIR, ZX_POL_NEW_PORT, ZX_POL_NEW_SOCKET, ZX_POL_NEW_FIFO, ZX_POL_NEW_TIMER, ZX_POL_NEW_PROCESS, ZX_POL_NEW_PROFILE, ZX_POL_AMBIENT_MARK_VMO_EXEC

zx_job_policy_options = ZX_JOB_POL_RELATIVE, ZX_JOB_POL_ABSOLUTE

zx_job_policy_topic = ZX_JOB_POL_BASIC, ZX_JOB_POL_TIMER_SLACK

zx_obj_props = ZX_OBJ_PROP_NONE, ZX_OBJ_PROP_WAITABLE

zx_obj_types = ZX_OBJ_TYPE_NONE, ZX_OBJ_TYPE_PROCESS, ZX_OBJ_TYPE_THREAD, ZX_OBJ_TYPE_VMO, ZX_OBJ_TYPE_CHANNEL, ZX_OBJ_TYPE_EVENT, ZX_OBJ_TYPE_PORT, ZX_OBJ_TYPE_INTERRUPT, ZX_OBJ_TYPE_PCI_DEVICE, ZX_OBJ_TYPE_LOG, ZX_OBJ_TYPE_SOCKET, ZX_OBJ_TYPE_RESOURCE, ZX_OBJ_TYPE_EVENTPAIR, ZX_OBJ_TYPE_JOB, ZX_OBJ_TYPE_VMAR, ZX_OBJ_TYPE_FIFO, ZX_OBJ_TYPE_GUEST, ZX_OBJ_TYPE_VCPU, ZX_OBJ_TYPE_TIMER, ZX_OBJ_TYPE_IOMMU, ZX_OBJ_TYPE_BTI, ZX_OBJ_TYPE_PROFILE, ZX_OBJ_TYPE_PMT, ZX_OBJ_TYPE_SUSPEND_TOKEN, ZX_OBJ_TYPE_PAGER, ZX_OBJ_TYPE_EXCEPTION

zx_object_info_topics = ZX_INFO_NONE, ZX_INFO_HANDLE_VALID, ZX_INFO_HANDLE_BASIC, ZX_INFO_PROCESS, ZX_INFO_PROCESS_THREADS, ZX_INFO_VMAR, ZX_INFO_JOB_CHILDREN, ZX_INFO_JOB_PROCESSES, ZX_INFO_THREAD, ZX_INFO_THREAD_EXCEPTION_REPORT, ZX_INFO_TASK_STATS, ZX_INFO_PROCESS_MAPS, ZX_INFO_PROCESS_VMOS, ZX_INFO_THREAD_STATS, ZX_INFO_CPU_STATS, ZX_INFO_KMEM_STATS, ZX_INFO_RESOURCE, ZX_INFO_HANDLE_COUNT, ZX_INFO_BTI, ZX_INFO_PROCESS_HANDLE_STATS, ZX_INFO_SOCKET, ZX_INFO_VMO, ZX_INFO_JOB

zx_object_property_values = ZX_PROP_NAME, ZX_PROP_REGISTER_GS, ZX_PROP_REGISTER_FS, ZX_PROP_PROCESS_DEBUG_ADDR, ZX_PROP_PROCESS_VDSO_BASE_ADDRESS, ZX_PROP_SOCKET_RX_THRESHOLD, ZX_PROP_SOCKET_TX_THRESHOLD, ZX_PROP_JOB_KILL_ON_OOM, ZX_PROP_EXCEPTION_STATE

zx_port_create_options = ZX_PORT_DEFAULT, ZX_PORT_BIND_TO_INTERRUPT

zx_port_packet_type = ZX_PKT_TYPE_USER, ZX_PKT_TYPE_SIGNAL_ONE, ZX_PKT_TYPE_SIGNAL_REP, ZX_PKT_TYPE_GUEST_BELL, ZX_PKT_TYPE_GUEST_MEM, ZX_PKT_TYPE_GUEST_IO, ZX_PKT_TYPE_GUEST_VCPU, ZX_PKT_TYPE_INTERRUPT, ZX_PKT_TYPE_PAGE_REQUEST

zx_profile_info_type = ZX_PROFILE_INFO_SCHEDULER

zx_profile_scheduler_priority = ZX_PRIORITY_LOWEST, ZX_PRIORITY_LOW, ZX_PRIORITY_DEFAULT, ZX_PRIORITY_HIGH, ZX_PRIORITY_HIGHEST

zx_rights_options = ZX_RIGHT_NONE, ZX_RIGHT_DUPLICATE, ZX_RIGHT_TRANSFER, ZX_RIGHT_READ, ZX_RIGHT_WRITE, ZX_RIGHT_EXECUTE, ZX_RIGHT_MAP, ZX_RIGHT_GET_PROPERTY, ZX_RIGHT_SET_PROPERTY, ZX_RIGHT_ENUMERATE, ZX_RIGHT_DESTROY, ZX_RIGHT_SET_POLICY, ZX_RIGHT_GET_POLICY, ZX_RIGHT_SIGNAL, ZX_RIGHT_SIGNAL_PEER, ZX_RIGHT_WAIT, ZX_RIGHT_INSPECT, ZX_RIGHT_MANAGE_JOB, ZX_RIGHT_MANAGE_PROCESS, ZX_RIGHT_MANAGE_THREAD, ZX_RIGHT_APPLY_PROFILE, ZX_RIGHT_SAME_RIGHTS

zx_rsrc_kind_vals = ZX_RSRC_KIND_MMIO, ZX_RSRC_KIND_IRQ, ZX_RSRC_KIND_IOPORT, ZX_RSRC_KIND_HYPERVISOR, ZX_RSRC_KIND_ROOT, ZX_RSRC_KIND_VMEX, ZX_RSRC_KIND_SMC

zx_socket_create_options = ZX_SOCKET_STREAM, ZX_SOCKET_DATAGRAM, ZX_SOCKET_HAS_CONTROL, ZX_SOCKET_HAS_ACCEPT

zx_socket_read_options = ZX_SOCKET_CONTROL, ZX_SOCKET_PEEK

zx_socket_shutdown_options = ZX_SOCKET_SHUTDOWN_WRITE, ZX_SOCKET_SHUTDOWN_READ

zx_socket_write_options = ZX_SOCKET_CONTROL

zx_system_powerctl_cmd = ZX_SYSTEM_POWERCTL_ENABLE_ALL_CPUS, ZX_SYSTEM_POWERCTL_DISABLE_ALL_CPUS_BUT_PRIMARY, ZX_SYSTEM_POWERCTL_ACPI_TRANSITION_S_STATE, ZX_SYSTEM_POWERCTL_X86_SET_PKG_PL1, ZX_SYSTEM_POWERCTL_REBOOT, ZX_SYSTEM_POWERCTL_REBOOT_BOOTLOADER, ZX_SYSTEM_POWERCTL_REBOOT_RECOVERY, ZX_SYSTEM_POWERCTL_SHUTDOWN

zx_thread_state_values = ZX_THREAD_STATE_NEW, ZX_THREAD_STATE_RUNNING, ZX_THREAD_STATE_SUSPENDED, ZX_THREAD_STATE_BLOCKED, ZX_THREAD_STATE_DYING, ZX_THREAD_STATE_DEAD, ZX_THREAD_STATE_BLOCKED_EXCEPTION, ZX_THREAD_STATE_BLOCKED_SLEEPING, ZX_THREAD_STATE_BLOCKED_FUTEX, ZX_THREAD_STATE_BLOCKED_PORT, ZX_THREAD_STATE_BLOCKED_CHANNEL, ZX_THREAD_STATE_BLOCKED_WAIT_ONE, ZX_THREAD_STATE_BLOCKED_WAIT_MANY, ZX_THREAD_STATE_BLOCKED_INTERRUPT, ZX_THREAD_STATE_BLOCKED_PAGER

zx_timer_options = ZX_TIMER_SLACK_CENTER, ZX_TIMER_SLACK_EARLY, ZX_TIMER_SLACK_LATE

zx_vcpu_read_state_kind = ZX_VCPU_STATE

zx_vcpu_write_state_kind = ZX_VCPU_STATE, ZX_VCPU_IO

zx_vmar_allocate_map_options = ZX_VM_PERM_READ, ZX_VM_PERM_WRITE, ZX_VM_PERM_EXECUTE, ZX_VM_COMPACT, ZX_VM_SPECIFIC, ZX_VM_SPECIFIC_OVERWRITE, ZX_VM_CAN_MAP_SPECIFIC, ZX_VM_CAN_MAP_READ, ZX_VM_CAN_MAP_WRITE, ZX_VM_CAN_MAP_EXECUTE, ZX_VM_MAP_RANGE, ZX_VM_REQUIRE_NON_RESIZABLE, ZX_VM_ALLOW_FAULTS, ZX_VM_ALIGN_1KB, ZX_VM_ALIGN_2KB, ZX_VM_ALIGN_4KB, ZX_VM_ALIGN_8KB, ZX_VM_ALIGN_16KB, ZX_VM_ALIGN_32KB, ZX_VM_ALIGN_64KB, ZX_VM_ALIGN_128KB, ZX_VM_ALIGN_256KB, ZX_VM_ALIGN_512KB, ZX_VM_ALIGN_1MB, ZX_VM_ALIGN_2MB, ZX_VM_ALIGN_4MB, ZX_VM_ALIGN_8MB, ZX_VM_ALIGN_16MB, ZX_VM_ALIGN_32MB, ZX_VM_ALIGN_64MB, ZX_VM_ALIGN_128MB, ZX_VM_ALIGN_256MB, ZX_VM_ALIGN_512MB, ZX_VM_ALIGN_1GB, ZX_VM_ALIGN_2GB, ZX_VM_ALIGN_4GB

zx_vmar_protect_options = ZX_VM_PERM_READ, ZX_VM_PERM_WRITE, ZX_VM_PERM_EXECUTE

zx_vmo_cache_policy_options = ZX_CACHE_POLICY_CACHED, ZX_CACHE_POLICY_UNCACHED, ZX_CACHE_POLICY_UNCACHED_DEVICE, ZX_CACHE_POLICY_WRITE_COMBINING, ZX_CACHE_POLICY_MASK

zx_vmo_clone_options = ZX_VMO_CLONE_COPY_ON_WRITE, ZX_VMO_CHILD_COPY_ON_WRITE, ZX_VMO_CHILD_RESIZABLE

zx_vmo_create_options = ZX_VMO_DEFAULT, ZX_VMO_RESIZABLE

zx_vmo_opcodes = ZX_VMO_OP_COMMIT, ZX_VMO_OP_DECOMMIT, ZX_VMO_OP_LOCK, ZX_VMO_OP_UNLOCK, ZX_VMO_OP_CACHE_SYNC, ZX_VMO_OP_CACHE_INVALIDATE, ZX_VMO_OP_CACHE_CLEAN, ZX_VMO_OP_CACHE_CLEAN_INVALIDATE

