// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test/protocolrequest/cpp/fidl.h>
namespace fidl {
namespace test {
namespace protocolrequest {
namespace testing {
class Parent_TestBase : public ::fidl::test::protocolrequest::Parent {
 public:
  virtual ~Parent_TestBase() {}
  virtual void NotImplemented_(const std::string& name) = 0;
  void GetChild(GetChildCallback callback) override {
    NotImplemented_("GetChild");
  }
  void GetChildRequest(GetChildRequestCallback callback) override {
    NotImplemented_("GetChildRequest");
  }
  void TakeChild(::fidl::InterfaceHandle<::fidl::test::protocolrequest::Child>
                     c) override {
    NotImplemented_("TakeChild");
  }
  void TakeChildRequest(
      ::fidl::InterfaceRequest<::fidl::test::protocolrequest::Child> r)
      override {
    NotImplemented_("TakeChildRequest");
  }
};

class Child_TestBase : public ::fidl::test::protocolrequest::Child {
 public:
  virtual ~Child_TestBase() {}
  virtual void NotImplemented_(const std::string& name) = 0;
};
}  // namespace testing
}  // namespace protocolrequest
}  // namespace test
}  // namespace fidl
