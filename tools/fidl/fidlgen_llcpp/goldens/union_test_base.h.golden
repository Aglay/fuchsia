// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <fidl/test/union/llcpp/fidl.h>
namespace llcpp {
namespace fidl {
namespace test {
namespace union_ {
namespace testing {

class TestProtocol_TestBase
    : public ::llcpp::fidl::test::union_::TestProtocol::Interface {
 public:
  virtual ~TestProtocol_TestBase() {}
  virtual void NotImplemented_(const std::string& name,
                               ::fidl::CompleterBase& completer) = 0;

  using Interface = ::llcpp::fidl::test::union_::TestProtocol::Interface;
  virtual void StrictXUnionHenceResponseMayBeStackAllocated(
      Interface::StrictXUnionHenceResponseMayBeStackAllocatedCompleter::Sync&
          completer) override {
    NotImplemented_("StrictXUnionHenceResponseMayBeStackAllocated", completer);
  }
  virtual void FlexibleXUnionHenceResponseMustBeHeapAllocated(
      Interface::FlexibleXUnionHenceResponseMustBeHeapAllocatedCompleter::Sync&
          completer) override {
    NotImplemented_("FlexibleXUnionHenceResponseMustBeHeapAllocated",
                    completer);
  }
};
}  // namespace testing
}  // namespace union_
}  // namespace test
}  // namespace fidl
}  // namespace llcpp
