{
  "version": "0.0.1",
  "name": "fuchsia.exception",
  "config": {
    "title": "Fuchsia FIDLs",
    "links": [
      {
        "label": "Fuchsia Developer",
        "href": "https://fuchsia.googlesource.com"
      }
    ],
    "source": {
      "baseUrl": "https://fuchsia.googlesource.com/fuchsia/+/",
      "package": "/",
      "line": "#"
    }
  },
  "tag": "master",
  "interface_declarations": [
    {
      "name": "fuchsia.exception/Handler",
      "location": {
        "filename": "../../zircon/system/fidl/fuchsia-exception/handler.fidl",
        "line": 12,
        "column": 10
      },
      "maybe_attributes": [
        {
          "name": "Doc",
          "value": " Protocol meant for clients interested in handling exceptions for a\n particular service.\n"
        },
        {
          "name": "Discoverable",
          "value": ""
        }
      ],
      "methods": [
        {
          "ordinal": 9134723198900764672,
          "generated_ordinal": 6764579495724574110,
          "name": "OnException",
          "location": {
            "filename": "../../zircon/system/fidl/fuchsia-exception/handler.fidl",
            "line": 23,
            "column": 5
          },
          "has_request": true,
          "maybe_attributes": [
            {
              "name": "Doc",
              "value": " This exception mirrors closely the information provided by exception\n channels. The design is to have clients of this API behave as closely as\n possible to native exception handlers that are listening to an exception\n channel.\n\n `exception` is an exception handle, which controls the exception's\n lifetime. See exception zircon docs for more information.\n\n `info` represents basic exception information as provided by the\n exception channel.\n"
            }
          ],
          "maybe_request": [
            {
              "type": {
                "kind": "handle",
                "subtype": "exception",
                "nullable": false
              },
              "name": "exception",
              "location": {
                "filename": "../../zircon/system/fidl/fuchsia-exception/handler.fidl",
                "line": 23,
                "column": 35
              },
              "size": 4,
              "max_out_of_line": 0,
              "alignment": 4,
              "offset": 16,
              "max_handles": 1,
              "field_shape_old": {
                "offset": 16,
                "padding": 4
              },
              "field_shape_v1_no_ee": {
                "offset": 16,
                "padding": 4
              }
            },
            {
              "type": {
                "kind": "identifier",
                "identifier": "fuchsia.exception/ExceptionInfo",
                "nullable": false
              },
              "name": "info",
              "location": {
                "filename": "../../zircon/system/fidl/fuchsia-exception/handler.fidl",
                "line": 23,
                "column": 60
              },
              "size": 24,
              "max_out_of_line": 0,
              "alignment": 8,
              "offset": 24,
              "max_handles": 0,
              "field_shape_old": {
                "offset": 24,
                "padding": 0
              },
              "field_shape_v1_no_ee": {
                "offset": 24,
                "padding": 0
              }
            }
          ],
          "maybe_request_size": 48,
          "maybe_request_alignment": 8,
          "maybe_request_has_padding": true,
          "experimental_maybe_request_has_flexible_envelope": false,
          "maybe_request_type_shape_old": {
            "inline_size": 48,
            "alignment": 8,
            "depth": 0,
            "max_handles": 1,
            "max_out_of_line": 0,
            "has_padding": true,
            "has_flexible_envelope": false
          },
          "maybe_request_type_shape_v1_no_ee": {
            "inline_size": 48,
            "alignment": 8,
            "depth": 0,
            "max_handles": 1,
            "max_out_of_line": 0,
            "has_padding": true,
            "has_flexible_envelope": false
          },
          "has_response": true,
          "maybe_response": [],
          "maybe_response_size": 16,
          "maybe_response_alignment": 8,
          "maybe_response_has_padding": false,
          "experimental_maybe_response_has_flexible_envelope": false,
          "maybe_response_type_shape_old": {
            "inline_size": 16,
            "alignment": 8,
            "depth": 0,
            "max_handles": 0,
            "max_out_of_line": 0,
            "has_padding": false,
            "has_flexible_envelope": false
          },
          "maybe_response_type_shape_v1_no_ee": {
            "inline_size": 16,
            "alignment": 8,
            "depth": 0,
            "max_handles": 0,
            "max_out_of_line": 0,
            "has_padding": false,
            "has_flexible_envelope": false
          },
          "is_composed": false
        }
      ]
    },
    {
      "name": "fuchsia.exception/ProcessLimbo",
      "location": {
        "filename": "../../zircon/system/fidl/fuchsia-exception/process_limbo.fidl",
        "line": 17,
        "column": 10
      },
      "maybe_attributes": [
        {
          "name": "Doc",
          "value": " Protocol meant for clients interested in obtaining processes that are\n suspended waiting for an exception handler (in limbo). This is the core\n feature that enables Just In Time (JIT) debugging.\n"
        },
        {
          "name": "Discoverable",
          "value": ""
        }
      ],
      "methods": [
        {
          "ordinal": 557849993289924608,
          "generated_ordinal": 4891338331064299344,
          "name": "ListProcessesWaitingOnException",
          "location": {
            "filename": "../../zircon/system/fidl/fuchsia-exception/process_limbo.fidl",
            "line": 25,
            "column": 5
          },
          "has_request": true,
          "maybe_attributes": [
            {
              "name": "Doc",
              "value": " Returns information on all the processes currently waiting on an exception.\n The information provided is intended to correctly identify an exception\n and determine whether the caller wants to actually handle it.\n To retrieve an exception, use the |GetException| call.\n\n NOTE: The |process| and |thread| handle will only have the ZX_RIGHT_READ\n       right, so no modification will be able to be done on them.\n"
            }
          ],
          "maybe_request": [],
          "maybe_request_size": 16,
          "maybe_request_alignment": 8,
          "maybe_request_has_padding": false,
          "experimental_maybe_request_has_flexible_envelope": false,
          "maybe_request_type_shape_old": {
            "inline_size": 16,
            "alignment": 8,
            "depth": 0,
            "max_handles": 0,
            "max_out_of_line": 0,
            "has_padding": false,
            "has_flexible_envelope": false
          },
          "maybe_request_type_shape_v1_no_ee": {
            "inline_size": 16,
            "alignment": 8,
            "depth": 0,
            "max_handles": 0,
            "max_out_of_line": 0,
            "has_padding": false,
            "has_flexible_envelope": false
          },
          "has_response": true,
          "maybe_response": [
            {
              "type": {
                "kind": "vector",
                "element_type": {
                  "kind": "identifier",
                  "identifier": "fuchsia.exception/ProcessExceptionMetadata",
                  "nullable": false
                },
                "maybe_element_count": 32,
                "nullable": false
              },
              "name": "exception_list",
              "location": {
                "filename": "../../zircon/system/fidl/fuchsia-exception/process_limbo.fidl",
                "line": 25,
                "column": 100
              },
              "size": 16,
              "max_out_of_line": 3328,
              "alignment": 8,
              "offset": 16,
              "max_handles": 64,
              "field_shape_old": {
                "offset": 16,
                "padding": 0
              },
              "field_shape_v1_no_ee": {
                "offset": 16,
                "padding": 0
              }
            }
          ],
          "maybe_response_size": 32,
          "maybe_response_alignment": 8,
          "maybe_response_has_padding": true,
          "experimental_maybe_response_has_flexible_envelope": true,
          "maybe_response_type_shape_old": {
            "inline_size": 32,
            "alignment": 8,
            "depth": 3,
            "max_handles": 64,
            "max_out_of_line": 3328,
            "has_padding": true,
            "has_flexible_envelope": true
          },
          "maybe_response_type_shape_v1_no_ee": {
            "inline_size": 32,
            "alignment": 8,
            "depth": 3,
            "max_handles": 64,
            "max_out_of_line": 3328,
            "has_padding": true,
            "has_flexible_envelope": true
          },
          "is_composed": false
        },
        {
          "ordinal": 5164861790219141120,
          "generated_ordinal": 7990194046815454283,
          "name": "RetrieveException",
          "location": {
            "filename": "../../zircon/system/fidl/fuchsia-exception/process_limbo.fidl",
            "line": 34,
            "column": 5
          },
          "has_request": true,
          "maybe_attributes": [
            {
              "name": "Doc",
              "value": " Removes the process from limbo and retrieves the exception handle and\n associated metadata from an exception.\n\n Use |ListProcessesWaitingOnException| to choose a |process_koid| from the\n list of available exceptions.\n\n Returns ZX_ERR_NOT_FOUND if the process is not waiting on an exception.\n"
            }
          ],
          "maybe_request": [
            {
              "type": {
                "kind": "primitive",
                "subtype": "uint64"
              },
              "experimental_maybe_from_type_alias": {
                "name": "zx/koid",
                "args": [],
                "nullable": false
              },
              "name": "process_koid",
              "location": {
                "filename": "../../zircon/system/fidl/fuchsia-exception/process_limbo.fidl",
                "line": 34,
                "column": 31
              },
              "size": 8,
              "max_out_of_line": 0,
              "alignment": 8,
              "offset": 16,
              "max_handles": 0,
              "field_shape_old": {
                "offset": 16,
                "padding": 0
              },
              "field_shape_v1_no_ee": {
                "offset": 16,
                "padding": 0
              }
            }
          ],
          "maybe_request_size": 24,
          "maybe_request_alignment": 8,
          "maybe_request_has_padding": false,
          "experimental_maybe_request_has_flexible_envelope": false,
          "maybe_request_type_shape_old": {
            "inline_size": 24,
            "alignment": 8,
            "depth": 0,
            "max_handles": 0,
            "max_out_of_line": 0,
            "has_padding": false,
            "has_flexible_envelope": false
          },
          "maybe_request_type_shape_v1_no_ee": {
            "inline_size": 24,
            "alignment": 8,
            "depth": 0,
            "max_handles": 0,
            "max_out_of_line": 0,
            "has_padding": false,
            "has_flexible_envelope": false
          },
          "has_response": true,
          "maybe_response": [
            {
              "type": {
                "kind": "identifier",
                "identifier": "fuchsia.exception/ProcessLimbo_RetrieveException_Result",
                "nullable": false
              },
              "name": "result",
              "location": {
                "filename": "generated",
                "line": 10,
                "column": 1
              },
              "size": 24,
              "max_out_of_line": 112,
              "alignment": 8,
              "offset": 16,
              "max_handles": 3,
              "field_shape_old": {
                "offset": 16,
                "padding": 0
              },
              "field_shape_v1_no_ee": {
                "offset": 16,
                "padding": 0
              }
            }
          ],
          "maybe_response_size": 40,
          "maybe_response_alignment": 8,
          "maybe_response_has_padding": true,
          "experimental_maybe_response_has_flexible_envelope": true,
          "maybe_response_type_shape_old": {
            "inline_size": 40,
            "alignment": 8,
            "depth": 2,
            "max_handles": 3,
            "max_out_of_line": 112,
            "has_padding": true,
            "has_flexible_envelope": true
          },
          "maybe_response_type_shape_v1_no_ee": {
            "inline_size": 40,
            "alignment": 8,
            "depth": 3,
            "max_handles": 3,
            "max_out_of_line": 128,
            "has_padding": true,
            "has_flexible_envelope": true
          },
          "is_composed": false
        }
      ]
    }
  ]
}