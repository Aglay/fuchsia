{{>copyright comment="#"}}

{{>generated comment="#"}}

import("//build/fidl/fidl.gni")
import("//build/package.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

group("{{PROJECT_NAME}}") {
  testonly = true
  deps = [
    ":pkg",
    ":tests",
  ]
}

group("tests") {
  testonly = true
  deps = [ ":{{PROJECT_NAME}}-tests" ]
}

source_set("lib") {
  sources = [
    "{{snake_case PROJECT_NAME}}.cc",
    "{{snake_case PROJECT_NAME}}.h",
  ]

  public_deps = [
    "//sdk/lib/syslog/cpp",
    "//zircon/public/lib/async-cpp",
  ]
}

executable("bin") {
  output_name = "{{PROJECT_NAME}}"

  sources = [ "main.cc" ]

  deps = [
    ":lib",
    "//sdk/lib/sys/cpp",
    "//zircon/system/ulib/async-loop:async-loop-cpp",
    "//zircon/system/ulib/async-loop:async-loop-default",
  ]
}

executable("unittests") {
  output_name = "{{PROJECT_NAME}}_test"
  testonly = true

  sources = [ "{{snake_case PROJECT_NAME}}_unittest.cc" ]

  deps = [
    ":lib",
    "//src/lib/fxl/test:gtest_main",
    "//src/lib/testing/loop_fixture",
    "//third_party/googletest:gtest",
  ]
}

package("pkg") {
  package_name = "{{PROJECT_NAME}}"

  deps = [ ":bin" ]

  binaries = [
    {
      name = "{{PROJECT_NAME}}"
    },
  ]

  meta = [
    # The resulting component manifest can be referenced through the URL
    # fuchsia-pkg://fuchsia.com/{{PROJECT_NAME}}#meta/{{PROJECT_NAME}}.cmx.
    {
      path = rebase_path("meta/{{PROJECT_NAME}}.cmx")
      dest = "{{PROJECT_NAME}}.cmx"
    },
  ]
}

# Run with `fx test {{PROJECT_NAME}}-tests`.
test_package("{{PROJECT_NAME}}-tests") {
  deps = [ ":unittests" ]

  tests = [
    {
      name = "{{PROJECT_NAME}}_test"
      environments = basic_envs
    },
  ]
}
