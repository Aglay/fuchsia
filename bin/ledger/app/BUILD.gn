# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

visibility = [ "//peridot/bin/ledger/*" ]

executable("app") {
  output_name = "ledger"
  sources = [
    "app.cc",
  ]

  deps = [
    ":lib",
    "//garnet/public/lib/app/cpp",
    "//garnet/public/lib/backoff",
    "//garnet/public/lib/fidl/cpp",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/netconnector/fidl",
    "//garnet/public/lib/network/fidl",
    "//peridot/bin/ledger/cobalt",
    "//peridot/bin/ledger/environment",
    "//peridot/bin/ledger/fidl",
    "//peridot/bin/ledger/p2p_sync/impl",
    "//peridot/bin/ledger/storage/impl:lib",
    "//peridot/bin/ledger/storage/public",
    "//peridot/public/lib/auth/fidl",
    "//zircon/public/lib/trace-provider",
  ]

  configs += [ "//peridot/bin/ledger:ledger_config" ]
}

source_set("lib") {
  sources = [
    "branch_tracker.cc",
    "branch_tracker.h",
    "constants.cc",
    "constants.h",
    "diff_utils.cc",
    "diff_utils.h",
    "fidl/serialization_size.cc",
    "fidl/serialization_size.h",
    "ledger_impl.cc",
    "ledger_impl.h",
    "ledger_manager.cc",
    "ledger_manager.h",
    "ledger_repository_factory_impl.cc",
    "ledger_repository_factory_impl.h",
    "ledger_repository_impl.cc",
    "ledger_repository_impl.h",
    "merging/auto_merge_strategy.cc",
    "merging/auto_merge_strategy.h",
    "merging/common_ancestor.cc",
    "merging/common_ancestor.h",
    "merging/conflict_resolver_client.cc",
    "merging/conflict_resolver_client.h",
    "merging/custom_merge_strategy.cc",
    "merging/custom_merge_strategy.h",
    "merging/last_one_wins_merge_strategy.cc",
    "merging/last_one_wins_merge_strategy.h",
    "merging/ledger_merge_manager.cc",
    "merging/ledger_merge_manager.h",
    "merging/merge_resolver.cc",
    "merging/merge_resolver.h",
    "merging/merge_strategy.h",
    "page_delegate.cc",
    "page_delegate.h",
    "page_eviction_manager_impl.cc",
    "page_eviction_manager_impl.h",
    "page_eviction_manager.h",
    "page_impl.cc",
    "page_impl.h",
    "page_manager.cc",
    "page_manager.h",
    "page_snapshot_impl.cc",
    "page_snapshot_impl.h",
    "page_utils.cc",
    "page_utils.h",
    "sync_watcher_set.cc",
    "sync_watcher_set.h",
  ]

  deps = [
    "//garnet/public/lib/callback",
    "//garnet/public/lib/fidl/cpp",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
    "//garnet/public/lib/netconnector/fidl",
    "//peridot/bin/ledger/cloud_sync/impl",
    "//peridot/bin/ledger/cloud_sync/public",
    "//peridot/bin/ledger/cobalt",
    "//peridot/bin/ledger/encryption/primitives",
    "//peridot/bin/ledger/environment",
    "//peridot/bin/ledger/fidl",
    "//peridot/bin/ledger/fidl_helpers",
    "//peridot/bin/ledger/p2p_provider/impl",
    "//peridot/bin/ledger/p2p_sync/impl",
    "//peridot/bin/ledger/p2p_sync/public",
    "//peridot/bin/ledger/storage/impl:lib",
    "//peridot/bin/ledger/storage/public",
    "//peridot/bin/ledger/sync_coordinator/impl",
    "//peridot/bin/ledger/sync_coordinator/public",
    "//peridot/lib/convert",
    "//peridot/lib/socket",
    "//peridot/public/lib/auth/fidl",
    "//peridot/public/lib/ledger/fidl",
    "//zircon/public/lib/trace",
  ]

  configs += [ "//peridot/bin/ledger:ledger_config" ]
}

source_set("unittests") {
  testonly = true

  sources = [
    "fidl/serialization_size_unittest.cc",
    "ledger_manager_unittest.cc",
    "merging/common_ancestor_unittest.cc",
    "merging/conflict_resolver_client_unittest.cc",
    "merging/merge_resolver_unittest.cc",
    "merging/test_utils.cc",
    "merging/test_utils.h",
    "page_impl_unittest.cc",
    "page_manager_unittest.cc",
    "sync_watcher_set_unittest.cc",
  ]

  deps = [
    ":lib",
    "//garnet/public/lib/backoff/testing",
    "//garnet/public/lib/fidl/cpp",
    "//garnet/public/lib/fsl",
    "//garnet/public/lib/fxl",
    "//peridot/bin/ledger/cloud_sync/impl",
    "//peridot/bin/ledger/cloud_sync/testing",
    "//peridot/bin/ledger/encryption/fake",
    "//peridot/bin/ledger/encryption/primitives",
    "//peridot/bin/ledger/storage/fake:lib",
    "//peridot/bin/ledger/storage/impl:lib",
    "//peridot/bin/ledger/storage/public",
    "//peridot/bin/ledger/storage/testing",
    "//peridot/bin/ledger/sync_coordinator/public",
    "//peridot/bin/ledger/sync_coordinator/testing",
    "//peridot/bin/ledger/testing:lib",
    "//peridot/lib/convert",
    "//peridot/public/lib/auth/fidl",
    "//third_party/googletest:gtest",
  ]

  configs += [ "//peridot/bin/ledger:ledger_config" ]
}
