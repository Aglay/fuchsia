# Copyright 2016 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/package.gni")

config("internal") {
  include_dirs = [
    ".",
    "$root_gen_dir/peridot",
  ]
}

executable("maxwell_unittests") {
  testonly = true

  deps = [
    "//garnet/public/lib/test_runner/cpp:gtest_main",
    "//peridot/bin/context_engine:unittests",
    "//peridot/bin/module_resolver:unittests",
    "//peridot/bin/suggestion_engine:unittests",
  ]
}

package("maxwell_tests") {
  testonly = true

  deps = [
    ":maxwell_unittests",
    "//peridot/tests/maxwell_integration",
  ]

  tests = [
    {
      name = "maxwell_unittests"
    },
    {
      name = "context_engine_test"
    },
    {
      name = "suggestion_engine_test"
    },
  ]
}

# This target allows building just the Modular files. It's intended to be
# used as the build target before calling push-package.py to perform an
# incremental update on the device. See
# https://fuchsia.googlesource.com/scripts/+/HEAD/README.md for instructions.
group("modular_all") {
  testonly = true

  deps = [
    ":future_unittests",
    ":modular_unittests",
    "bin/device_runner",
    "bin/device_runner:dev_device_shell",
    "bin/device_runner_monitor",
    "bin/user_runner",
    "bin/user_runner:dev_user_shell",
    "bin/user_runner/story_runner:dev_story_shell",
    "examples:modular_examples",
    "examples/simple:simple_agent",
    "examples/simple:simple_module_bin",
    "tests:modular_tests",
    "tests/benchmark:modular_benchmarks",
  ]
}

executable("modular_unittests_bin") {
  testonly = true
  output_name = "modular_unittests"

  deps = [
    "//peridot/bin/agents/clipboard:unittests",
    "//peridot/bin/device_runner:unittests",
    "//peridot/bin/user_runner/agent_runner:unittests",
    "//peridot/bin/user_runner/entity_provider_runner:unittests",
    "//peridot/bin/user_runner/puppet_master:unittests",
    "//peridot/bin/user_runner/story_runner:unittests",
    "//peridot/examples/counter_cpp:unittests",
    "//peridot/public/lib:unittests",
    "//peridot/public/lib/async/cpp:unittests",
    "//third_party/googletest:gtest_main",
  ]
}

executable("future_unittests_bin") {
  testonly = true
  output_name = "future_unittests"

  deps = [
    "//third_party/googletest:gtest_main",
    "//peridot/public/lib/async/cpp:unittests",
  ]
}

package("modular_unittests") {
  testonly = true
  deprecated_system_image = true

  deps = [
    ":modular_unittests_bin",
  ]

  tests = [
    {
      name = "modular_unittests"
    },
  ]
}

package("future_unittests") {
  testonly = true
  deprecated_system_image = true

  deps = [
    ":future_unittests_bin",
  ]

  tests = [
    {
      name = "future_unittests"
    },
  ]
}
