# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/go/go_binary.gni")
import("//packages/package.gni")

go_binary("amber") {
  gopackage = "amber/cmd/amber"

  go_dependencies = [
    {
      package = "amber"
      source = "//garnet/go/src/amber"
    },
    {
      package = "golang.org/x/crypto"
      source = "//third_party/golang/crypto"
    },
    {
      package = "github.com/flynn/go-tuf"
      source = "//third_party/golibs/github.com/flynn/go-tuf"
    },
    {
      source = "//third_party/golibs/github.com/syndtr/goleveldb/leveldb"
      package = "github.com/syndtr/goleveldb/leveldb"
    },
    {
      source = "//third_party/golibs/github.com/tent/canonical-json-go"
      package = "github.com/tent/canonical-json-go"
    },
    {
      source = "//third_party/golibs/github.com/golang/snappy"
      package = "github.com/golang/snappy"
    }
  ]
}

package("amber_package") {
  package_name = "amber"
  deps = [ ":amber" ]

  binaries = [
    {
      name = "amber"
    }
  ]
}

go_binary("amber-publish") {
  gopackage = "amber/cmd/publish"

  go_dependencies = [
    {
      package = "amber"
      source = "//garnet/go/src/amber"
    },
    {
      source = "//garnet/go/src/pm"
      package = "fuchsia.googlesource.com/pm"
    },
    {
      package = "github.com/flynn/go-tuf"
      source = "//third_party/golibs/github.com/flynn/go-tuf"
    },
    {
      package = "golang.org/x/crypto"
      source = "//third_party/golang/crypto"
    },
    {
      source = "//third_party/golibs/github.com/syndtr/goleveldb/leveldb"
      package = "github.com/syndtr/goleveldb/leveldb"
    },
    {
      source = "//third_party/golibs/github.com/tent/canonical-json-go"
      package = "github.com/tent/canonical-json-go"
    },
    {
      source = "//third_party/golibs/github.com/golang/snappy"
      package = "github.com/golang/snappy"
    }
  ]
}

copy("amber-keys") {
  sources = [ "keys/root_sig.json" ]
  outputs = [ "$root_out_dir/amber-keys" ]
}

copy("amber-srv-keys") {
  sources = [ "keys/root.json","keys/snapshot.json","keys/targets.json","keys/timestamp.json", "keys/root_manifest.json" ]
  outputs = [ "$root_out_dir/{{source_file_part}}" ]
}
