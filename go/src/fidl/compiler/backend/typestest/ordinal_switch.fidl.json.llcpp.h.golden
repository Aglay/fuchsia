// WARNING: This file is machine generated by fidlgen.

#pragma once

#include <lib/fidl/internal.h>
#include <lib/fidl/cpp/vector_view.h>
#include <lib/fidl/cpp/string_view.h>
#include <lib/fidl/llcpp/array_wrapper.h>
#include <lib/fidl/llcpp/coding.h>
#include <lib/fidl/llcpp/traits.h>
#include <lib/zx/channel.h>
#include <zircon/fidl.h>

namespace test {
namespace name {

class SwitchingOrdinals;

class SwitchingOrdinals final {
 public:

  using OrdinalFiveRequest = ::fidl::AnyZeroArgMessage;

  using OnlyGeneratedOrdinalRequest = ::fidl::AnyZeroArgMessage;

  using EventOrdinalFifteenResponse = ::fidl::AnyZeroArgMessage;
  using EventOnlyGeneratedOrdinalResponse = ::fidl::AnyZeroArgMessage;

  class SyncClient final {
   public:
    SyncClient(::zx::channel channel) : channel_(std::move(channel)) {}

    ~SyncClient() {}

    zx_status_t OrdinalFive();

    zx_status_t OnlyGeneratedOrdinal();

   private:
    ::zx::channel channel_;
  };

};

}  // namespace name
}  // namespace test

namespace fidl {

}  // namespace fidl
