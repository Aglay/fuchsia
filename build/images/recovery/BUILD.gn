# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/board.gni")
import("//build/images/assemble_system.gni")
import("//build/images/zedboot/zedboot_args.gni")

declare_args() {
  # List of binaries to include in the bootfs manifest for recovery. This
  # overrides the option set by `bootfs_zircon_groups` so that only the requested
  # binaries are included in the final image.
  bootfs_allowlist_recovery = []
}

recovery_packages = [
  "//build/info:build-info",
  "//garnet/bin/network_time_service",
  "//garnet/bin/sysmgr",
  "//garnet/packages/prod:sysmem_connector",
  "//src/connectivity/network:config",
  "//src/connectivity/network/netcfg:config",
  "//src/connectivity/network/netcfg:filter_config",
  "//src/connectivity/network/netcfg",
  "//src/connectivity/network/netstack",
  "//src/connectivity/wlan/wlancfg",
  "//src/connectivity/wlan/wlanstack",
  "//src/recovery/system",
  "//src/recovery/system:config",
  "//src/security/root_ssl_certificates",
  "//src/sys/appmgr:appmgr_scheme_config",
  "//src/sys/appmgr",
  "//src/sys/pkg/bin/amber",
  "//src/sys/pkg/bin/omaha-client",
  "//src/sys/pkg/bin/pkg-cache",
  "//src/sys/pkg/bin/pkg-resolver",
  "//src/sys/timekeeper",
]

assemble_system("recovery") {
  base_packages = recovery_packages
  # We avoid compressing blobs in the blobfs image so that they can be more
  # effectively compressed by the ZBI compressor that is tuned to zstd max.
  compress_blobs = false
  netboot = true
  devmgr_config = [ "virtcon.disable=true" ] + zedboot_devmgr_config
  cmdline = [ "netsvc.disable=false" ] + zedboot_cmdline_args +
            board_zedboot_cmdline_args
  cmdline_inputs = zedboot_cmdline_files

  #XXX(comfoltey) Disable bootfs_allowlist_recovery while build unification is
  # in progress
  bootfs_allowlist = []
  metadata = {
    test_runtime_deps = [ "$root_out_dir/${target_name}.zbi" ]
  }
}
