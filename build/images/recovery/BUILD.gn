# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/fuchsia/zbi.gni")
import("//build/images/assemble_system.gni")
import("//build/images/pkgfs.gni")

declare_args() {
  # List of binaries to include in the bootfs manifest for recovery. This
  # overrides the option set by `bootfs_zircon_groups` so that only the requested
  # binaries are included in the final image.
  bootfs_allowlist_recovery = []
}

recovery_packages = [
  "//build/info:build-info",
  "//src/sys/appmgr:appmgr_scheme_config",
  "//src/sys/appmgr",
  "//garnet/bin/network_time_service",
  "//garnet/bin/omaha_client",
  "//garnet/bin/pkg_cache",
  "//garnet/bin/pkg_resolver",
  "//garnet/bin/sysmgr",
  "//garnet/go/src/amber",
  "//garnet/lib/root_ssl_certificates",
  "//src/connectivity/network/netcfg:filter_config",
  "//src/connectivity/network/netcfg:config",
  "//src/connectivity/network/netcfg",
  "//src/connectivity/network/netstack",
  "//src/connectivity/wlan/wlancfg",
  "//src/connectivity/wlan/wlanstack",
  "//src/recovery/system",
  "//src/sys/timekeeper",
  pkgfs_package_label,
]

shell_commands("shell-commands") {
  testonly = true
  visibility = [ ":*" ]
  deps = recovery_packages
}

config_package("config-data") {
  testonly = true
  visibility = [ ":*" ]
  deps = recovery_packages
}

recovery_packages += [
  ":shell-commands",
  ":config-data",
]

assemble_system("recovery") {
  base_packages = recovery_packages
  netboot = true
  devmgr_config = [ "virtcon.disable=true" ]

  bootfs_allowlist = bootfs_allowlist_recovery
  metadata = {
    test_runtime_deps = [ "$root_out_dir/${target_name}.zbi" ]
  }
}
