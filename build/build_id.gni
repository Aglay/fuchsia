# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Adds a module to the .build-id directory by hard-linking. Assumes the module
# is an ELF binary.
#
# Parameters
#
#   module
#     Required: A single ELF executable, or ELF shared object. This file will
#     be hard-linked into the .build-id directory.
#
#   extension
#     Optional: The extension to add to the file in the .build-id directory.
#     If this is set it is generally set to ".debug".
template("build_id_entry") {
  action(target_name) {
    forward_variables_from(invoker,
                           [
                             "deps",
                             "testonly",
                             "visibility",
                             "public_deps",
                             "data_deps",
                             "action",
                           ])
    assert(defined(invoker.module), "Must define module")
    inputs = [
      invoker.module,
    ]
    depfile = invoker.module + ".build-id.d"
    output = invoker.module + ".build-id.stamp"
    outputs = [
      output,
    ]

    script = "//buildtools/${host_platform}/buildidtool"
    args = []
    if (defined(invoker.extension)) {
      args += [
        "-extension",
        invoker.extension,
      ]
    }
    args += [
      "-build-id-dir",
      ".build-id",
      "-dep-file",
      rebase_path(depfile, root_build_dir),
      "-stamp",
      rebase_path(output, root_build_dir),
      rebase_path(invoker.module, root_build_dir),
    ]
  }
}
