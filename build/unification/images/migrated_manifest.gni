# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# Generates a manifest for a given target recently migrated from the ZN build.
#
# The output of this action is a manifest file that replaces the one supplied
# by the ZN build for the given target. This makes it so that the target can be
# moved from one build to the other without having to worry about the impact on
# system assembly.
#
# Parameters
#
#   deps (required)
#     [list of labels] The targets to generate a manifest for.
#
#   zbi (optional)
#     [boolean] Whether to allow manifest contents to be added to ZBI files.
#     Defaults to false.
#
#   testonly (optional)
#     Same as for any GN target.
template("migrated_manifest") {
  assert(defined(invoker.deps) && invoker.deps != [],
         "Need deps to generate a manifest for")

  if (is_fuchsia) {
    main_target = target_name
    manifest_file = "$target_out_dir/$target_name.unification.manifest"

    generated_file(main_target) {
      forward_variables_from(invoker,
                             [
                               "deps",
                               "testonly",
                             ])

      deps += [
        # Add sysroot-provided elements by default.
        "//build/config/fuchsia:sysroot_metadata",
      ]

      data_keys = [ "migrated_manifest_lines" ]
      walk_keys = [ "migrated_manifest_barrier" ]

      # Use the same naming scheme as for other unification manifest templates,
      # this makes them interoperable.
      outputs = [ manifest_file ]
    }

    if (defined(invoker.zbi) && invoker.zbi) {
      group("$target_name-zbi") {
        deps = [ ":$main_target" ]

        metadata = {
          migrated_zbi_barrier = []
          migrated_zbi_input_args = [
            "--prefix=",
            "--files",
            rebase_path(manifest_file, root_build_dir),
          ]
        }
      }
    }
  } else {
    # This template does nothing on non-Fuchsia platforms.
    group(target_name) {
    }
  }
}
