# Copyright 2020 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/unification/lib/zircon_runtime_library.gni")

# TODO(tmandry): Remove fallback and associated logic once clang toolchain rolls.
# fallback is needed for clang soft migration.
cpp_libs = [
  {
    name = "libcxx"
    fallback = "libcpp.so.2"
  },
  {
    name = "libcxxabi"
    fallback = "libcppabi.so.1"
  },
  {
    name = "libunwind"
    fallback = "libunwind.so.1"
  },
]

cpp_deps = []

foreach(lib, cpp_libs) {
  zircon_runtime_library(lib.name) {
    library = lib.name
    if (defined(lib.fallback)) {
      fallback = lib.fallback
    }
    visibility = [ ":*" ]
  }
  cpp_deps += [ ":${lib.name}" ]
}

if (toolchain_variant.instrumented) {
  # libclang_rt only exists in a subset of the configurations.
  variant = toolchain_variant.name
  lib = false
  if (variant == "asan" || variant == "asan-ubsan") {
    lib = "libclang_rt.asan.so"
  } else if (variant == "ubsan" || variant == "sancov" ||
             variant == "ubsan-sancov" || variant == "ubsan-sancov-full") {
    lib = "libclang_rt.ubsan_standalone"
  }
  if (lib != false) {
    name = "libclang_rt"
    zircon_runtime_library(name) {
      library = lib
    }
    cpp_deps += [ ":$name" ]
  }
}

group("cpp") {
  deps = cpp_deps
}

zircon_runtime_library("libstd") {
  library = "libstd"
  visibility = [ ":*" ]
}

group("rust") {
  deps = [ ":libstd" ]
}

# Included directly by test templates.
zircon_runtime_library("libtest") {
  library = "libtest"
}
