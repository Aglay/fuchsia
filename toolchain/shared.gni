# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

# TODO(phosek): Delete this file once all the uses of fuchsia_shared_library
# are replaced with shared_library.

# shared_toolchain is the label of the toolchain that will be used for shared
# library dependencies in the current toolchain.
#
# shared_toolchain_out_dir is the directory where outputs from the
# shared_toolchain will go.

if (current_toolchain == target_toolchain) {
  shared_toolchain = "//build/toolchain/fuchsia:${target_cpu}-shared"
  shared_toolchain_out_dir = "$root_build_dir/${target_cpu}-shared"
} else {
  shared_toolchain = current_toolchain
  shared_toolchain_out_dir = root_out_dir
}

# Most shared libraries in the Fuchsia build should use this template rather
# than the built-in shared_library rule. This template forces the shared library
# itself into the shared_toolchain, which helps us avoid linking the shared
# library twice (once in the default toolchain and once in the shared
# toolchain).
#

set_defaults("fuchsia_shared_library") {
  configs = default_shared_library_configs
}

# This template accepts the same variables as the built-in shared_library rule.
# The public_configs, visibility, and testonly variables are copied to the
# outer target. The inner target, which builds the shared library itself, is
# visible only to the outer target.
template("fuchsia_shared_library") {
  shared_library(target_name) {
    forward_variables_from(invoker, "*")
  }
}
