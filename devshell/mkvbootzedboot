#!/bin/bash
# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

### make a zedboot configuration in a target directory

## usage: fx mkzedboot <root of external drive>
## Builds Fuchsia bootloader and zedboot and copies it to a drive of
## your choice. Makes zedboot the default boot option.

set -e

source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"/lib/vars.sh
fx-config-read

vboot_dir="${FUCHSIA_DIR}/third_party/vboot_reference"
(
cd "${vboot_dir}"
make cgpt
)
CGPT="${vboot_dir}/build/cgpt/cgpt"

is_usb() {
  if [ -n "$(type -path udevadm)" ]; then
    udevadm info --query=all --name="$1" | grep -q ID_BUS=usb
  else
    (cd /sys/block/$(basename "$1")/device 2>/dev/null && pwd -P) | grep -q usb
  fi
}

USB_DEVICE="$1"
if [[ -z "${USB_DEVICE}" ]]; then
  echo >&2 "device argument required"
  exit 1
fi
if ! is_usb "${USB_DEVICE}"; then
  echo >&2 "USB disk device argument required"
  exit 1
fi

sudo chown "${USER}" "${USB_DEVICE}"

# Destroy any existing GPT/MBR on the device and re-create
echo -n "Create new GPT partition table... "
sgdisk --zap-all "${USB_DEVICE}" >/dev/null
sgdisk --clear "${USB_DEVICE}" >/dev/null
echo "done"

echo -n "Create new partitions... "
"${CGPT}" add -s 32768 -t kernel -b 64 -l kernel "${USB_DEVICE}"
"${CGPT}" add -i 1 -T 1 -S 1 -P 2 "${USB_DEVICE}"
echo "done"

echo "Building signed zedboot image"
fx-command-run build "images/zedboot-${ZIRCON_PROJECT}.vboot"
echo "done"

echo -n "Writing zedboot"
dd if="${FUCHSIA_BUILD_DIR}/images/zedboot-${ZIRCON_PROJECT}.vboot" of="${USB_DEVICE}" seek=64
echo "done"
