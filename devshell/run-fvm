#!/bin/bash
# Copyright 2017 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

set -e

source "$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"/lib/image_build_vars.sh
source "${FUCHSIA_DIR}/scripts/devshell/lib/disktools.sh"
source "${FUCHSIA_DIR}/buildtools/vars.sh"

qemu_dir="${BUILDTOOLS_QEMU_DIR}/bin"

arch="${FUCHSIA_ARCH}"
if [[ "${arch}" -eq "aarch64" ]]; then
  arch="arm64"
fi

# NOTE(raggi): This script makes a new fvm image each time it runs.
# Unfortunately the sparse image that is created by mkfvm is not a mountable
# partition, and so can't be reused here.

# NOTE(raggi): we might just want to run mksystempkg and mkblobstore here.

for f in "${blobstore_block}" "${cmdline}"; do
  if [[ ! -s "$f" ]]; then
    # cmdline is generated by the mksystempkg operation
    echo >&2 "Required file \"$f\" is missing, run \"fx mksystempkg\" && \"fx mkblobstore\""
    exit 1
  fi
done

cd "${FUCHSIA_BUILD_DIR}"

# 10mb is the minimum size of a minfs image
if [[ ! -f "${data_block}" ]]; then
  fx-truncate "${data_block}" "$((10 * 1024 * 1024))"
  "${ZIRCON_TOOLS_DIR}/minfs" "${data_block}" create
fi

if [[ -f "${fvm_block}" ]]; then
  rm "${fvm_block}"
fi
"${ZIRCON_TOOLS_DIR}/fvm" "${fvm_block}" create --blobstore "${blobstore_block}" --data "${data_block}"

exec "${FUCHSIA_DIR}/zircon/scripts/run-zircon" \
  -o "${ZIRCON_BUILD_DIR}" \
  -a "${arch}" \
  -q "${qemu_dir}" \
  -x "${FUCHSIA_BUILD_DIR}/boot_bootfs.bin" \
  -d \
  -D "${fvm_block}" \
  -c "$(<"${cmdline}")" \
  "$@"
