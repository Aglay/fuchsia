# These are keywords used in languages we support and in generated bindings.
# This list is maintained by hand and should be expanded to cover as many cases
# as we can think of.
#
# Each line is either a comment prefixed with # or a lower_camel_case identifier
abstract
alignas
alignof
and
and_eq
as
asm
async
atomic_cancel
atomic_commit
atomic_noexcept
auto
await
become
bitand
bitor
bool
box
break
byte
case
catch
chan
char
char16_t
char32_t
class
# clone
co_await
co_return
co_yield
coding_traits
compl
concept
const
const_cast
constexpr
continue
controller
crate
decltype
decoder
default
defer
delete
do
double
dynamic_cast
else
encoder
enum
err
explicit
export
extern
fallthrough
false
fidl
fidl_type
final
float
fn
for
friend
func
future
futures
go
goto
has_invalid_tag
if
impl
import
in
inline
int
int16
int32
int64
int8
interface
let
lhs
long
loop
macro
map
match
mod
module
move
mut
mutable
namespace
never
new
noexcept
none
not
not_eq
nullptr
offset
offsetof
ok
on_open
operator
option
or
or_eq
override
package
priv
private
proc
protected
proxy
pub
public
pure
range
ref
register
reinterpret_cast
requires
result
return
rhs
rune
select
self
send
set_controller
short
signed
sizeof
some
static
static_assert
static_cast
stream
string
struct
stub
super
switch
synchronized
tag
template
this
thread_local
throw
trait
true
try
type
typedef
typeid
typename
typeof
uint16
uint32
uint64
uint8
union
unsafe
unsigned
unsized
use
using
value
value_union
var
vec
virtual
void
volatile
wchar_t
where
which
while
xor
xor_eq
xunion
yield
zx
