// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.method.request.arguments.upper;
using argtype = uint32;
protocol DangerousRequestArguments {
  Method0(argtype ABSTRACT);
  Method1(argtype ALIGNAS);
  Method2(argtype ALIGNOF);
  Method3(argtype AND);
  Method4(argtype AND_EQ);
  Method5(argtype AS);
  Method6(argtype ASM);
  Method7(argtype ASYNC);
  Method8(argtype ATOMIC_CANCEL);
  Method9(argtype ATOMIC_COMMIT);
  Method10(argtype ATOMIC_NOEXCEPT);
  Method11(argtype AUTO);
  Method12(argtype AWAIT);
  Method13(argtype BECOME);
  Method14(argtype BITAND);
  Method15(argtype BITOR);
  Method16(argtype BOOL);
  Method17(argtype BOX);
  Method18(argtype BREAK);
  Method19(argtype BYTE);
  Method20(argtype CASE);
  Method21(argtype CATCH);
  Method22(argtype CHAN);
  Method23(argtype CHAR);
  Method24(argtype CHAR16_T);
  Method25(argtype CHAR32_T);
  Method26(argtype CLASS);
  Method27(argtype CO_AWAIT);
  Method28(argtype CO_RETURN);
  Method29(argtype CO_YIELD);
  Method30(argtype CODING_TRAITS);
  Method31(argtype COMPL);
  Method32(argtype CONCEPT);
  Method33(argtype CONST);
  Method34(argtype CONST_CAST);
  Method35(argtype CONSTEXPR);
  Method36(argtype CONTINUE);
  Method37(argtype CONTROLLER);
  Method38(argtype CRATE);
  Method39(argtype DECLTYPE);
  Method40(argtype DECODER);
  Method41(argtype DEFAULT);
  Method42(argtype DEFER);
  Method43(argtype DELETE);
  Method44(argtype DO);
  Method45(argtype DOUBLE);
  Method46(argtype DYNAMIC_CAST);
  Method47(argtype ELSE);
  Method48(argtype ENCODER);
  Method49(argtype ENUM);
  Method50(argtype ERR);
  Method51(argtype EXPLICIT);
  Method52(argtype EXPORT);
  Method53(argtype EXTERN);
  Method54(argtype FALLTHROUGH);
  Method55(argtype FALSE);
  Method56(argtype FIDL);
  Method57(argtype FIDL_TYPE);
  Method58(argtype FINAL);
  Method59(argtype FLOAT);
  Method60(argtype FN);
  Method61(argtype FOR);
  Method62(argtype FRIEND);
  Method63(argtype FUNC);
  Method64(argtype FUTURE);
  Method65(argtype FUTURES);
  Method66(argtype GO);
  Method67(argtype GOTO);
  Method68(argtype HAS_INVALID_TAG);
  Method69(argtype IF);
  Method70(argtype IMPL);
  Method71(argtype IMPORT);
  Method72(argtype IN);
  Method73(argtype INLINE);
  Method74(argtype INT);
  Method75(argtype INT16);
  Method76(argtype INT32);
  Method77(argtype INT64);
  Method78(argtype INT8);
  Method79(argtype INTERFACE);
  Method80(argtype LET);
  Method81(argtype LHS);
  Method82(argtype LONG);
  Method83(argtype LOOP);
  Method84(argtype MACRO);
  Method85(argtype MAP);
  Method86(argtype MATCH);
  Method87(argtype MOD);
  Method88(argtype MODULE);
  Method89(argtype MOVE);
  Method90(argtype MUT);
  Method91(argtype MUTABLE);
  Method92(argtype NAMESPACE);
  Method93(argtype NEVER);
  Method94(argtype NEW);
  Method95(argtype NOEXCEPT);
  Method96(argtype NONE);
  Method97(argtype NOT);
  Method98(argtype NOT_EQ);
  Method99(argtype NULLPTR);
  Method100(argtype OFFSET);
  Method101(argtype OFFSETOF);
  Method102(argtype OK);
  Method103(argtype ON_OPEN);
  Method104(argtype OPERATOR);
  Method105(argtype OPTION);
  Method106(argtype OR);
  Method107(argtype OR_EQ);
  Method108(argtype OVERRIDE);
  Method109(argtype PACKAGE);
  Method110(argtype PRIV);
  Method111(argtype PRIVATE);
  Method112(argtype PROC);
  Method113(argtype PROTECTED);
  Method114(argtype PROXY);
  Method115(argtype PUB);
  Method116(argtype PUBLIC);
  Method117(argtype PURE);
  Method118(argtype RANGE);
  Method119(argtype REF);
  Method120(argtype REGISTER);
  Method121(argtype REINTERPRET_CAST);
  Method122(argtype REQUIRES);
  Method123(argtype RESULT);
  Method124(argtype RETURN);
  Method125(argtype RHS);
  Method126(argtype RUNE);
  Method127(argtype SELECT);
  Method128(argtype SELF);
  Method129(argtype SEND);
  Method130(argtype SET_CONTROLLER);
  Method131(argtype SHORT);
  Method132(argtype SIGNED);
  Method133(argtype SIZEOF);
  Method134(argtype SOME);
  Method135(argtype STATIC);
  Method136(argtype STATIC_ASSERT);
  Method137(argtype STATIC_CAST);
  Method138(argtype STREAM);
  Method139(argtype STRING);
  Method140(argtype STRUCT);
  Method141(argtype STUB);
  Method142(argtype SUPER);
  Method143(argtype SWITCH);
  Method144(argtype SYNCHRONIZED);
  Method145(argtype TAG);
  Method146(argtype TEMPLATE);
  Method147(argtype THIS);
  Method148(argtype THREAD_LOCAL);
  Method149(argtype THROW);
  Method150(argtype TRAIT);
  Method151(argtype TRUE);
  Method152(argtype TRY);
  Method153(argtype TYPE);
  Method154(argtype TYPEDEF);
  Method155(argtype TYPEID);
  Method156(argtype TYPENAME);
  Method157(argtype TYPEOF);
  Method158(argtype UINT16);
  Method159(argtype UINT32);
  Method160(argtype UINT64);
  Method161(argtype UINT8);
  Method162(argtype UNION);
  Method163(argtype UNSAFE);
  Method164(argtype UNSIGNED);
  Method165(argtype UNSIZED);
  Method166(argtype USE);
  Method167(argtype USING);
  Method168(argtype VALUE);
  Method169(argtype VALUE_UNION);
  Method170(argtype VAR);
  Method171(argtype VEC);
  Method172(argtype VIRTUAL);
  Method173(argtype VOID);
  Method174(argtype VOLATILE);
  Method175(argtype WCHAR_T);
  Method176(argtype WHERE);
  Method177(argtype WHICH);
  Method178(argtype WHILE);
  Method179(argtype XOR);
  Method180(argtype XOR_EQ);
  Method181(argtype XUNION);
  Method182(argtype YIELD);
  Method183(argtype ZX);
};
