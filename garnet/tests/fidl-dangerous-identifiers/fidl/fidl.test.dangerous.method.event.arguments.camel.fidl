// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.method.event.arguments.camel;
using argtype = uint32;
protocol DangerousResponseArguments {
  -> Event0(argtype Abstract);
  -> Event1(argtype Alignas);
  -> Event2(argtype Alignof);
  -> Event3(argtype And);
  -> Event4(argtype AndEq);
  -> Event5(argtype As);
  -> Event6(argtype Asm);
  -> Event7(argtype Async);
  -> Event8(argtype AtomicCancel);
  -> Event9(argtype AtomicCommit);
  -> Event10(argtype AtomicNoexcept);
  -> Event11(argtype Auto);
  -> Event12(argtype Await);
  -> Event13(argtype Become);
  -> Event14(argtype Bitand);
  -> Event15(argtype Bitor);
  -> Event16(argtype Bool);
  -> Event17(argtype Box);
  -> Event18(argtype Break);
  -> Event19(argtype Byte);
  -> Event20(argtype Case);
  -> Event21(argtype Catch);
  -> Event22(argtype Chan);
  -> Event23(argtype Char);
  -> Event24(argtype Char16T);
  -> Event25(argtype Char32T);
  -> Event26(argtype Class);
  -> Event27(argtype CoAwait);
  -> Event28(argtype CoReturn);
  -> Event29(argtype CoYield);
  -> Event30(argtype CodingTraits);
  -> Event31(argtype Compl);
  -> Event32(argtype Concept);
  -> Event33(argtype Const);
  -> Event34(argtype ConstCast);
  -> Event35(argtype Constexpr);
  -> Event36(argtype Continue);
  -> Event37(argtype Controller);
  -> Event38(argtype Crate);
  -> Event39(argtype Decltype);
  -> Event40(argtype Decoder);
  -> Event41(argtype Default);
  -> Event42(argtype Defer);
  -> Event43(argtype Delete);
  -> Event44(argtype Do);
  -> Event45(argtype Double);
  -> Event46(argtype DynamicCast);
  -> Event47(argtype Else);
  -> Event48(argtype Encoder);
  -> Event49(argtype Enum);
  -> Event50(argtype Err);
  -> Event51(argtype Explicit);
  -> Event52(argtype Export);
  -> Event53(argtype Extern);
  -> Event54(argtype Fallthrough);
  -> Event55(argtype False);
  -> Event56(argtype Fidl);
  -> Event57(argtype FidlType);
  -> Event58(argtype Final);
  -> Event59(argtype Float);
  -> Event60(argtype Fn);
  -> Event61(argtype For);
  -> Event62(argtype Friend);
  -> Event63(argtype Func);
  -> Event64(argtype Future);
  -> Event65(argtype Futures);
  -> Event66(argtype Go);
  -> Event67(argtype Goto);
  -> Event68(argtype HasInvalidTag);
  -> Event69(argtype If);
  -> Event70(argtype Impl);
  -> Event71(argtype Import);
  -> Event72(argtype In);
  -> Event73(argtype Inline);
  -> Event74(argtype Int);
  -> Event75(argtype Int16);
  -> Event76(argtype Int32);
  -> Event77(argtype Int64);
  -> Event78(argtype Int8);
  -> Event79(argtype Interface);
  -> Event80(argtype Let);
  -> Event81(argtype Lhs);
  -> Event82(argtype Long);
  -> Event83(argtype Loop);
  -> Event84(argtype Macro);
  -> Event85(argtype Map);
  -> Event86(argtype Match);
  -> Event87(argtype Mod);
  -> Event88(argtype Module);
  -> Event89(argtype Move);
  -> Event90(argtype Mut);
  -> Event91(argtype Mutable);
  -> Event92(argtype Namespace);
  -> Event93(argtype Never);
  -> Event94(argtype New);
  -> Event95(argtype Noexcept);
  -> Event96(argtype None);
  -> Event97(argtype Not);
  -> Event98(argtype NotEq);
  -> Event99(argtype Nullptr);
  -> Event100(argtype Offset);
  -> Event101(argtype Offsetof);
  -> Event102(argtype Ok);
  -> Event103(argtype OnOpen);
  -> Event104(argtype Operator);
  -> Event105(argtype Option);
  -> Event106(argtype Or);
  -> Event107(argtype OrEq);
  -> Event108(argtype Override);
  -> Event109(argtype Package);
  -> Event110(argtype Priv);
  -> Event111(argtype Private);
  -> Event112(argtype Proc);
  -> Event113(argtype Protected);
  -> Event114(argtype Proxy);
  -> Event115(argtype Pub);
  -> Event116(argtype Public);
  -> Event117(argtype Pure);
  -> Event118(argtype Range);
  -> Event119(argtype Ref);
  -> Event120(argtype Register);
  -> Event121(argtype ReinterpretCast);
  -> Event122(argtype Requires);
  -> Event123(argtype Result);
  -> Event124(argtype Return);
  -> Event125(argtype Rhs);
  -> Event126(argtype Rune);
  -> Event127(argtype Select);
  -> Event128(argtype Self);
  -> Event129(argtype Send);
  -> Event130(argtype SetController);
  -> Event131(argtype Short);
  -> Event132(argtype Signed);
  -> Event133(argtype Sizeof);
  -> Event134(argtype Some);
  -> Event135(argtype Static);
  -> Event136(argtype StaticAssert);
  -> Event137(argtype StaticCast);
  -> Event138(argtype Stream);
  -> Event139(argtype String);
  -> Event140(argtype Struct);
  -> Event141(argtype Stub);
  -> Event142(argtype Super);
  -> Event143(argtype Switch);
  -> Event144(argtype Synchronized);
  -> Event145(argtype Tag);
  -> Event146(argtype Template);
  -> Event147(argtype This);
  -> Event148(argtype ThreadLocal);
  -> Event149(argtype Throw);
  -> Event150(argtype Trait);
  -> Event151(argtype True);
  -> Event152(argtype Try);
  -> Event153(argtype Type);
  -> Event154(argtype Typedef);
  -> Event155(argtype Typeid);
  -> Event156(argtype Typename);
  -> Event157(argtype Typeof);
  -> Event158(argtype Uint16);
  -> Event159(argtype Uint32);
  -> Event160(argtype Uint64);
  -> Event161(argtype Uint8);
  -> Event162(argtype Union);
  -> Event163(argtype Unsafe);
  -> Event164(argtype Unsigned);
  -> Event165(argtype Unsized);
  -> Event166(argtype Use);
  -> Event167(argtype Using);
  -> Event168(argtype Value);
  -> Event169(argtype ValueUnion);
  -> Event170(argtype Var);
  -> Event171(argtype Vec);
  -> Event172(argtype Virtual);
  -> Event173(argtype Void);
  -> Event174(argtype Volatile);
  -> Event175(argtype WcharT);
  -> Event176(argtype Where);
  -> Event177(argtype Which);
  -> Event178(argtype While);
  -> Event179(argtype Xor);
  -> Event180(argtype XorEq);
  -> Event181(argtype Xunion);
  -> Event182(argtype Yield);
  -> Event183(argtype Zx);
};
