// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.enums.upper;

enum ABSTRACT {
    MEMBER = 1;
};

enum ALIGNAS {
    MEMBER = 1;
};

enum ALIGNOF {
    MEMBER = 1;
};

enum AND {
    MEMBER = 1;
};

enum AND_EQ {
    MEMBER = 1;
};

enum AS {
    MEMBER = 1;
};

enum ASM {
    MEMBER = 1;
};

enum ASSERT {
    MEMBER = 1;
};

enum ASYNC {
    MEMBER = 1;
};

enum ATOMIC_CANCEL {
    MEMBER = 1;
};

enum ATOMIC_COMMIT {
    MEMBER = 1;
};

enum ATOMIC_NOEXCEPT {
    MEMBER = 1;
};

enum AUTO {
    MEMBER = 1;
};

enum AWAIT {
    MEMBER = 1;
};

enum BECOME {
    MEMBER = 1;
};

enum BITAND {
    MEMBER = 1;
};

enum BITOR {
    MEMBER = 1;
};

enum BOOL {
    MEMBER = 1;
};

enum BOX {
    MEMBER = 1;
};

enum BREAK {
    MEMBER = 1;
};

enum BYTE {
    MEMBER = 1;
};

enum CASE {
    MEMBER = 1;
};

enum CATCH {
    MEMBER = 1;
};

enum CHAN {
    MEMBER = 1;
};

enum CHAR {
    MEMBER = 1;
};

enum CHAR16_T {
    MEMBER = 1;
};

enum CHAR32_T {
    MEMBER = 1;
};

enum CLASS {
    MEMBER = 1;
};

enum CO_AWAIT {
    MEMBER = 1;
};

enum CO_RETURN {
    MEMBER = 1;
};

enum CO_YIELD {
    MEMBER = 1;
};

enum CODING_TRAITS {
    MEMBER = 1;
};

enum COMPL {
    MEMBER = 1;
};

enum CONCEPT {
    MEMBER = 1;
};

enum CONST {
    MEMBER = 1;
};

enum CONST_CAST {
    MEMBER = 1;
};

enum CONSTEXPR {
    MEMBER = 1;
};

enum CONTINUE {
    MEMBER = 1;
};

enum CONTROLLER {
    MEMBER = 1;
};

enum COVARIANT {
    MEMBER = 1;
};

enum CRATE {
    MEMBER = 1;
};

enum DECLTYPE {
    MEMBER = 1;
};

enum DECODER {
    MEMBER = 1;
};

enum DEFAULT {
    MEMBER = 1;
};

enum DEFER {
    MEMBER = 1;
};

enum DEFERRED {
    MEMBER = 1;
};

enum DELETE {
    MEMBER = 1;
};

enum DO {
    MEMBER = 1;
};

enum DOUBLE {
    MEMBER = 1;
};

enum DYNAMIC {
    MEMBER = 1;
};

enum DYNAMIC_CAST {
    MEMBER = 1;
};

enum ELSE {
    MEMBER = 1;
};

enum ENCODER {
    MEMBER = 1;
};

enum ENSURE_VALUES_INSTANTIATED {
    MEMBER = 1;
};

enum ENUM {
    MEMBER = 1;
};

enum EMPTY {
    MEMBER = 1;
};

enum ERR {
    MEMBER = 1;
};

enum EXPLICIT {
    MEMBER = 1;
};

enum EXPORT {
    MEMBER = 1;
};

enum EXTENDS {
    MEMBER = 1;
};

enum EXTERN {
    MEMBER = 1;
};

enum EXTERNAL {
    MEMBER = 1;
};

enum FACTORY {
    MEMBER = 1;
};

enum FALLTHROUGH {
    MEMBER = 1;
};

enum FALSE {
    MEMBER = 1;
};

enum FIDL {
    MEMBER = 1;
};

enum FIDL_TYPE {
    MEMBER = 1;
};

enum FINAL {
    MEMBER = 1;
};

enum FINALLY {
    MEMBER = 1;
};

enum FLOAT {
    MEMBER = 1;
};

enum FN {
    MEMBER = 1;
};

enum FOR {
    MEMBER = 1;
};

enum FRIEND {
    MEMBER = 1;
};

enum FUNC {
    MEMBER = 1;
};

enum FUTURE {
    MEMBER = 1;
};

enum FUTURES {
    MEMBER = 1;
};

enum GET {
    MEMBER = 1;
};

enum GO {
    MEMBER = 1;
};

enum GOTO {
    MEMBER = 1;
};

enum HAS_INVALID_TAG {
    MEMBER = 1;
};

enum HASH_CODE {
    MEMBER = 1;
};

enum IF {
    MEMBER = 1;
};

enum IMPL {
    MEMBER = 1;
};

enum IMPLEMENTS {
    MEMBER = 1;
};

enum IMPORT {
    MEMBER = 1;
};

enum IN {
    MEMBER = 1;
};

enum INDEX {
    MEMBER = 1;
};

enum INLINE {
    MEMBER = 1;
};

enum INT {
    MEMBER = 1;
};

enum INT16 {
    MEMBER = 1;
};

enum INT32 {
    MEMBER = 1;
};

enum INT64 {
    MEMBER = 1;
};

enum INT8 {
    MEMBER = 1;
};

enum INTERFACE {
    MEMBER = 1;
};

enum INTERNAL_TAG {
    MEMBER = 1;
};

enum IS {
    MEMBER = 1;
};

enum LET {
    MEMBER = 1;
};

enum LHS {
    MEMBER = 1;
};

enum LIBRARY {
    MEMBER = 1;
};

enum LIST {
    MEMBER = 1;
};

enum LONG {
    MEMBER = 1;
};

enum LOOP {
    MEMBER = 1;
};

enum MACRO {
    MEMBER = 1;
};

enum MAP {
    MEMBER = 1;
};

enum MATCH {
    MEMBER = 1;
};

enum MIXIN {
    MEMBER = 1;
};

enum MOD {
    MEMBER = 1;
};

enum MODULE {
    MEMBER = 1;
};

enum MOVE {
    MEMBER = 1;
};

enum MUT {
    MEMBER = 1;
};

enum MUTABLE {
    MEMBER = 1;
};

enum NAMESPACE {
    MEMBER = 1;
};

enum NEVER {
    MEMBER = 1;
};

enum NEW {
    MEMBER = 1;
};

enum NO_SUCH_METHOD {
    MEMBER = 1;
};

enum NOEXCEPT {
    MEMBER = 1;
};

enum NONE {
    MEMBER = 1;
};

enum NOT {
    MEMBER = 1;
};

enum NOT_EQ {
    MEMBER = 1;
};

enum NULL {
    MEMBER = 1;
};

enum NULLPTR {
    MEMBER = 1;
};

enum NUM {
    MEMBER = 1;
};

enum OBJECT {
    MEMBER = 1;
};

enum OFFSET {
    MEMBER = 1;
};

enum OFFSETOF {
    MEMBER = 1;
};

enum OK {
    MEMBER = 1;
};

enum ON_OPEN {
    MEMBER = 1;
};

enum OPERATOR {
    MEMBER = 1;
};

enum OPTION {
    MEMBER = 1;
};

enum OR {
    MEMBER = 1;
};

enum OR_EQ {
    MEMBER = 1;
};

enum OVERRIDE {
    MEMBER = 1;
};

enum PACKAGE {
    MEMBER = 1;
};

enum PART {
    MEMBER = 1;
};

enum PRIV {
    MEMBER = 1;
};

enum PRIVATE {
    MEMBER = 1;
};

enum PROC {
    MEMBER = 1;
};

enum PROTECTED {
    MEMBER = 1;
};

enum PROXY {
    MEMBER = 1;
};

enum PUB {
    MEMBER = 1;
};

enum PUBLIC {
    MEMBER = 1;
};

enum PURE {
    MEMBER = 1;
};

enum RANGE {
    MEMBER = 1;
};

enum REF {
    MEMBER = 1;
};

enum REGISTER {
    MEMBER = 1;
};

enum REINTERPRET_CAST {
    MEMBER = 1;
};

enum REQUIRES {
    MEMBER = 1;
};

enum RESULT {
    MEMBER = 1;
};

enum RETHROW {
    MEMBER = 1;
};

enum RETURN {
    MEMBER = 1;
};

enum RHS {
    MEMBER = 1;
};

enum RUNE {
    MEMBER = 1;
};

enum RUNTIME_TYPE {
    MEMBER = 1;
};

enum SELECT {
    MEMBER = 1;
};

enum SELF {
    MEMBER = 1;
};

enum SEND {
    MEMBER = 1;
};

enum SET {
    MEMBER = 1;
};

enum SET_CONTROLLER {
    MEMBER = 1;
};

enum SHORT {
    MEMBER = 1;
};

enum SIGNED {
    MEMBER = 1;
};

enum SIZEOF {
    MEMBER = 1;
};

enum SOME {
    MEMBER = 1;
};

enum STATIC {
    MEMBER = 1;
};

enum STATIC_ASSERT {
    MEMBER = 1;
};

enum STATIC_CAST {
    MEMBER = 1;
};

enum STREAM {
    MEMBER = 1;
};

enum STRING {
    MEMBER = 1;
};

enum STRUCT {
    MEMBER = 1;
};

enum STUB {
    MEMBER = 1;
};

enum SUPER {
    MEMBER = 1;
};

enum SWITCH {
    MEMBER = 1;
};

enum SYNCHRONIZED {
    MEMBER = 1;
};

enum TEMPLATE {
    MEMBER = 1;
};

enum THIS {
    MEMBER = 1;
};

enum THREAD_LOCAL {
    MEMBER = 1;
};

enum THROW {
    MEMBER = 1;
};

enum TO_STRING {
    MEMBER = 1;
};

enum TRAIT {
    MEMBER = 1;
};

enum TRUE {
    MEMBER = 1;
};

enum TRY {
    MEMBER = 1;
};

enum TYPE {
    MEMBER = 1;
};

enum TYPEDEF {
    MEMBER = 1;
};

enum TYPEID {
    MEMBER = 1;
};

enum TYPENAME {
    MEMBER = 1;
};

enum TYPEOF {
    MEMBER = 1;
};

enum UINT16 {
    MEMBER = 1;
};

enum UINT32 {
    MEMBER = 1;
};

enum UINT64 {
    MEMBER = 1;
};

enum UINT8 {
    MEMBER = 1;
};

enum UNION {
    MEMBER = 1;
};

enum UNSAFE {
    MEMBER = 1;
};

enum UNSIGNED {
    MEMBER = 1;
};

enum UNSIZED {
    MEMBER = 1;
};

enum USE {
    MEMBER = 1;
};

enum USING {
    MEMBER = 1;
};

enum VALUE {
    MEMBER = 1;
};

enum VALUE_OF {
    MEMBER = 1;
};

enum VALUE_UNION {
    MEMBER = 1;
};

enum VALUES_MAP {
    MEMBER = 1;
};

enum VAR {
    MEMBER = 1;
};

enum VEC {
    MEMBER = 1;
};

enum VIRTUAL {
    MEMBER = 1;
};

enum VOID {
    MEMBER = 1;
};

enum VOLATILE {
    MEMBER = 1;
};

enum WCHAR_T {
    MEMBER = 1;
};

enum WHERE {
    MEMBER = 1;
};

enum WHICH {
    MEMBER = 1;
};

enum WHILE {
    MEMBER = 1;
};

enum WITH {
    MEMBER = 1;
};

enum XOR {
    MEMBER = 1;
};

enum XOR_EQ {
    MEMBER = 1;
};

enum XUNION {
    MEMBER = 1;
};

enum YIELD {
    MEMBER = 1;
};

enum ZX {
    MEMBER = 1;
};

enum DangerousMembers {
    ABSTRACT = 0;
    ALIGNAS = 1;
    ALIGNOF = 2;
    AND = 3;
    AND_EQ = 4;
    AS = 5;
    ASM = 6;
    ASSERT = 7;
    ASYNC = 8;
    ATOMIC_CANCEL = 9;
    ATOMIC_COMMIT = 10;
    ATOMIC_NOEXCEPT = 11;
    AUTO = 12;
    AWAIT = 13;
    BECOME = 14;
    BITAND = 15;
    BITOR = 16;
    BOOL = 17;
    BOX = 18;
    BREAK = 19;
    BYTE = 20;
    CASE = 21;
    CATCH = 22;
    CHAN = 23;
    CHAR = 24;
    CHAR16_T = 25;
    CHAR32_T = 26;
    CLASS = 27;
    CO_AWAIT = 28;
    CO_RETURN = 29;
    CO_YIELD = 30;
    CODING_TRAITS = 31;
    COMPL = 32;
    CONCEPT = 33;
    CONST = 34;
    CONST_CAST = 35;
    CONSTEXPR = 36;
    CONTINUE = 37;
    CONTROLLER = 38;
    COVARIANT = 39;
    CRATE = 40;
    DECLTYPE = 41;
    DECODER = 42;
    DEFAULT = 43;
    DEFER = 44;
    DEFERRED = 45;
    DELETE = 46;
    DO = 47;
    DOUBLE = 48;
    DYNAMIC = 49;
    DYNAMIC_CAST = 50;
    ELSE = 51;
    ENCODER = 52;
    ENSURE_VALUES_INSTANTIATED = 53;
    ENUM = 54;
    EMPTY = 55;
    ERR = 56;
    EXPLICIT = 57;
    EXPORT = 58;
    EXTENDS = 59;
    EXTERN = 60;
    EXTERNAL = 61;
    FACTORY = 62;
    FALLTHROUGH = 63;
    FALSE = 64;
    FIDL = 65;
    FIDL_TYPE = 66;
    FINAL = 67;
    FINALLY = 68;
    FLOAT = 69;
    FN = 70;
    FOR = 71;
    FRIEND = 72;
    FUNC = 73;
    FUTURE = 74;
    FUTURES = 75;
    GET = 76;
    GO = 77;
    GOTO = 78;
    HAS_INVALID_TAG = 79;
    HASH_CODE = 80;
    IF = 81;
    IMPL = 82;
    IMPLEMENTS = 83;
    IMPORT = 84;
    IN = 85;
    INDEX = 86;
    INLINE = 87;
    INT = 88;
    INT16 = 89;
    INT32 = 90;
    INT64 = 91;
    INT8 = 92;
    INTERFACE = 93;
    INTERNAL_TAG = 94;
    IS = 95;
    LET = 96;
    LHS = 97;
    LIBRARY = 98;
    LIST = 99;
    LONG = 100;
    LOOP = 101;
    MACRO = 102;
    MAP = 103;
    MATCH = 104;
    MIXIN = 105;
    MOD = 106;
    MODULE = 107;
    MOVE = 108;
    MUT = 109;
    MUTABLE = 110;
    NAMESPACE = 111;
    NEVER = 112;
    NEW = 113;
    NO_SUCH_METHOD = 114;
    NOEXCEPT = 115;
    NONE = 116;
    NOT = 117;
    NOT_EQ = 118;
    NULL = 119;
    NULLPTR = 120;
    NUM = 121;
    OBJECT = 122;
    OFFSET = 123;
    OFFSETOF = 124;
    OK = 125;
    ON_OPEN = 126;
    OPERATOR = 127;
    OPTION = 128;
    OR = 129;
    OR_EQ = 130;
    OVERRIDE = 131;
    PACKAGE = 132;
    PART = 133;
    PRIV = 134;
    PRIVATE = 135;
    PROC = 136;
    PROTECTED = 137;
    PROXY = 138;
    PUB = 139;
    PUBLIC = 140;
    PURE = 141;
    RANGE = 142;
    REF = 143;
    REGISTER = 144;
    REINTERPRET_CAST = 145;
    REQUIRES = 146;
    RESULT = 147;
    RETHROW = 148;
    RETURN = 149;
    RHS = 150;
    RUNE = 151;
    RUNTIME_TYPE = 152;
    SELECT = 153;
    SELF = 154;
    SEND = 155;
    SET = 156;
    SET_CONTROLLER = 157;
    SHORT = 158;
    SIGNED = 159;
    SIZEOF = 160;
    SOME = 161;
    STATIC = 162;
    STATIC_ASSERT = 163;
    STATIC_CAST = 164;
    STREAM = 165;
    STRING = 166;
    STRUCT = 167;
    STUB = 168;
    SUPER = 169;
    SWITCH = 170;
    SYNCHRONIZED = 171;
    TEMPLATE = 172;
    THIS = 173;
    THREAD_LOCAL = 174;
    THROW = 175;
    TO_STRING = 176;
    TRAIT = 177;
    TRUE = 178;
    TRY = 179;
    TYPE = 180;
    TYPEDEF = 181;
    TYPEID = 182;
    TYPENAME = 183;
    TYPEOF = 184;
    UINT16 = 185;
    UINT32 = 186;
    UINT64 = 187;
    UINT8 = 188;
    UNION = 189;
    UNSAFE = 190;
    UNSIGNED = 191;
    UNSIZED = 192;
    USE = 193;
    USING = 194;
    VALUE = 195;
    VALUE_OF = 196;
    VALUE_UNION = 197;
    VALUES_MAP = 198;
    VAR = 199;
    VEC = 200;
    VIRTUAL = 201;
    VOID = 202;
    VOLATILE = 203;
    WCHAR_T = 204;
    WHERE = 205;
    WHICH = 206;
    WHILE = 207;
    WITH = 208;
    XOR = 209;
    XOR_EQ = 210;
    XUNION = 211;
    YIELD = 212;
    ZX = 213;
};
