// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.event.names.camel;
protocol DangerousEvents {
  -> Abstract();
  -> Alignas();
  -> Alignof();
  -> And();
  -> AndEq();
  -> As();
  -> Asm();
  -> Async();
  -> AtomicCancel();
  -> AtomicCommit();
  -> AtomicNoexcept();
  -> Auto();
  -> Await();
  -> Become();
  -> Bitand();
  -> Bitor();
  -> Bool();
  -> Box();
  -> Break();
  -> Byte();
  -> Case();
  -> Catch();
  -> Chan();
  -> Char();
  -> Char16T();
  -> Char32T();
  -> Class();
  -> CoAwait();
  -> CoReturn();
  -> CoYield();
  -> CodingTraits();
  -> Compl();
  -> Concept();
  -> Const();
  -> ConstCast();
  -> Constexpr();
  -> Continue();
  -> Controller();
  -> Crate();
  -> Decltype();
  -> Decoder();
  -> Default();
  -> Defer();
  -> Delete();
  -> Do();
  -> Double();
  -> DynamicCast();
  -> Else();
  -> Encoder();
  -> Enum();
  -> Err();
  -> Explicit();
  -> Export();
  -> Extern();
  -> Fallthrough();
  -> False();
  -> Fidl();
  -> FidlType();
  -> Final();
  -> Float();
  -> Fn();
  -> For();
  -> Friend();
  -> Func();
  -> Future();
  -> Futures();
  -> Go();
  -> Goto();
  -> HasInvalidTag();
  -> If();
  -> Impl();
  -> Import();
  -> In();
  -> Inline();
  -> Int();
  -> Int16();
  -> Int32();
  -> Int64();
  -> Int8();
  -> Interface();
  -> Let();
  -> Lhs();
  -> Long();
  -> Loop();
  -> Macro();
  -> Map();
  -> Match();
  -> Mod();
  -> Module();
  -> Move();
  -> Mut();
  -> Mutable();
  -> Namespace();
  -> Never();
  -> New();
  -> Noexcept();
  -> None();
  -> Not();
  -> NotEq();
  -> Nullptr();
  -> Offset();
  -> Offsetof();
  -> Ok();
  -> OnOpen();
  -> Operator();
  -> Option();
  -> Or();
  -> OrEq();
  -> Override();
  -> Package();
  -> Priv();
  -> Private();
  -> Proc();
  -> Protected();
  -> Proxy();
  -> Pub();
  -> Public();
  -> Pure();
  -> Range();
  -> Ref();
  -> Register();
  -> ReinterpretCast();
  -> Requires();
  -> Result();
  -> Return();
  -> Rhs();
  -> Rune();
  -> Select();
  -> Self();
  -> Send();
  -> SetController();
  -> Short();
  -> Signed();
  -> Sizeof();
  -> Some();
  -> Static();
  -> StaticAssert();
  -> StaticCast();
  -> Stream();
  -> String();
  -> Struct();
  -> Stub();
  -> Super();
  -> Switch();
  -> Synchronized();
  -> Tag();
  -> Template();
  -> This();
  -> ThreadLocal();
  -> Throw();
  -> Trait();
  -> True();
  -> Try();
  -> Type();
  -> Typedef();
  -> Typeid();
  -> Typename();
  -> Typeof();
  -> Uint16();
  -> Uint32();
  -> Uint64();
  -> Uint8();
  -> Union();
  -> Unsafe();
  -> Unsigned();
  -> Unsized();
  -> Use();
  -> Using();
  -> Value();
  -> ValueUnion();
  -> Var();
  -> Vec();
  -> Virtual();
  -> Void();
  -> Volatile();
  -> WcharT();
  -> Where();
  -> Which();
  -> While();
  -> Xor();
  -> XorEq();
  -> Xunion();
  -> Yield();
  -> Zx();
};
