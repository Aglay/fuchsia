// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.union.names.upper;
using membertype = uint32;
union ABSTRACT { membertype member; };
union ALIGNAS { membertype member; };
union ALIGNOF { membertype member; };
union AND { membertype member; };
union AND_EQ { membertype member; };
union AS { membertype member; };
union ASM { membertype member; };
union ASYNC { membertype member; };
union ATOMIC_CANCEL { membertype member; };
union ATOMIC_COMMIT { membertype member; };
union ATOMIC_NOEXCEPT { membertype member; };
union AUTO { membertype member; };
union AWAIT { membertype member; };
union BECOME { membertype member; };
union BITAND { membertype member; };
union BITOR { membertype member; };
union BOOL { membertype member; };
union BOX { membertype member; };
union BREAK { membertype member; };
union BYTE { membertype member; };
union CASE { membertype member; };
union CATCH { membertype member; };
union CHAN { membertype member; };
union CHAR { membertype member; };
union CHAR16_T { membertype member; };
union CHAR32_T { membertype member; };
union CLASS { membertype member; };
union CO_AWAIT { membertype member; };
union CO_RETURN { membertype member; };
union CO_YIELD { membertype member; };
union CODING_TRAITS { membertype member; };
union COMPL { membertype member; };
union CONCEPT { membertype member; };
union CONST { membertype member; };
union CONST_CAST { membertype member; };
union CONSTEXPR { membertype member; };
union CONTINUE { membertype member; };
union CONTROLLER { membertype member; };
union CRATE { membertype member; };
union DECLTYPE { membertype member; };
union DECODER { membertype member; };
union DEFAULT { membertype member; };
union DEFER { membertype member; };
union DELETE { membertype member; };
union DO { membertype member; };
union DOUBLE { membertype member; };
union DYNAMIC_CAST { membertype member; };
union ELSE { membertype member; };
union ENCODER { membertype member; };
union ENUM { membertype member; };
union ERR { membertype member; };
union EXPLICIT { membertype member; };
union EXPORT { membertype member; };
union EXTERN { membertype member; };
union FALLTHROUGH { membertype member; };
union FALSE { membertype member; };
union FIDL { membertype member; };
union FIDL_TYPE { membertype member; };
union FINAL { membertype member; };
union FLOAT { membertype member; };
union FN { membertype member; };
union FOR { membertype member; };
union FRIEND { membertype member; };
union FUNC { membertype member; };
union FUTURE { membertype member; };
union FUTURES { membertype member; };
union GO { membertype member; };
union GOTO { membertype member; };
union HAS_INVALID_TAG { membertype member; };
union IF { membertype member; };
union IMPL { membertype member; };
union IMPORT { membertype member; };
union IN { membertype member; };
union INLINE { membertype member; };
union INT { membertype member; };
union INT16 { membertype member; };
union INT32 { membertype member; };
union INT64 { membertype member; };
union INT8 { membertype member; };
union INTERFACE { membertype member; };
union LET { membertype member; };
union LHS { membertype member; };
union LIST { membertype member; };
union LONG { membertype member; };
union LOOP { membertype member; };
union MACRO { membertype member; };
union MAP { membertype member; };
union MATCH { membertype member; };
union MOD { membertype member; };
union MODULE { membertype member; };
union MOVE { membertype member; };
union MUT { membertype member; };
union MUTABLE { membertype member; };
union NAMESPACE { membertype member; };
union NEVER { membertype member; };
union NEW { membertype member; };
union NOEXCEPT { membertype member; };
union NONE { membertype member; };
union NOT { membertype member; };
union NOT_EQ { membertype member; };
union NULLPTR { membertype member; };
union OFFSET { membertype member; };
union OFFSETOF { membertype member; };
union OK { membertype member; };
union ON_OPEN { membertype member; };
union OPERATOR { membertype member; };
union OPTION { membertype member; };
union OR { membertype member; };
union OR_EQ { membertype member; };
union OVERRIDE { membertype member; };
union PACKAGE { membertype member; };
union PRIV { membertype member; };
union PRIVATE { membertype member; };
union PROC { membertype member; };
union PROTECTED { membertype member; };
union PROXY { membertype member; };
union PUB { membertype member; };
union PUBLIC { membertype member; };
union PURE { membertype member; };
union RANGE { membertype member; };
union REF { membertype member; };
union REGISTER { membertype member; };
union REINTERPRET_CAST { membertype member; };
union REQUIRES { membertype member; };
union RESULT { membertype member; };
union RETURN { membertype member; };
union RHS { membertype member; };
union RUNE { membertype member; };
union SELECT { membertype member; };
union SELF { membertype member; };
union SEND { membertype member; };
union SET_CONTROLLER { membertype member; };
union SHORT { membertype member; };
union SIGNED { membertype member; };
union SIZEOF { membertype member; };
union SOME { membertype member; };
union STATIC { membertype member; };
union STATIC_ASSERT { membertype member; };
union STATIC_CAST { membertype member; };
union STREAM { membertype member; };
union STRING { membertype member; };
union STRUCT { membertype member; };
union STUB { membertype member; };
union SUPER { membertype member; };
union SWITCH { membertype member; };
union SYNCHRONIZED { membertype member; };
union TAG { membertype member; };
union TEMPLATE { membertype member; };
union THIS { membertype member; };
union THREAD_LOCAL { membertype member; };
union THROW { membertype member; };
union TO_STRING { membertype member; };
union TRAIT { membertype member; };
union TRUE { membertype member; };
union TRY { membertype member; };
union TYPE { membertype member; };
union TYPEDEF { membertype member; };
union TYPEID { membertype member; };
union TYPENAME { membertype member; };
union TYPEOF { membertype member; };
union UINT16 { membertype member; };
union UINT32 { membertype member; };
union UINT64 { membertype member; };
union UINT8 { membertype member; };
union UNION { membertype member; };
union UNSAFE { membertype member; };
union UNSIGNED { membertype member; };
union UNSIZED { membertype member; };
union USE { membertype member; };
union USING { membertype member; };
union VALUE { membertype member; };
union VALUE_OF { membertype member; };
union VALUE_UNION { membertype member; };
union VALUES { membertype member; };
union VALUES_MAP { membertype member; };
union VAR { membertype member; };
union VEC { membertype member; };
union VIRTUAL { membertype member; };
union VOID { membertype member; };
union VOLATILE { membertype member; };
union WCHAR_T { membertype member; };
union WHERE { membertype member; };
union WHICH { membertype member; };
union WHILE { membertype member; };
union XOR { membertype member; };
union XOR_EQ { membertype member; };
union XUNION { membertype member; };
union YIELD { membertype member; };
union ZX { membertype member; };
union DangerousMembers {
  ABSTRACT f0;
  ALIGNAS f1;
  ALIGNOF f2;
  AND f3;
  AND_EQ f4;
  AS f5;
  ASM f6;
  ASYNC f7;
  ATOMIC_CANCEL f8;
  ATOMIC_COMMIT f9;
  ATOMIC_NOEXCEPT f10;
  AUTO f11;
  AWAIT f12;
  BECOME f13;
  BITAND f14;
  BITOR f15;
  BOOL f16;
  BOX f17;
  BREAK f18;
  BYTE f19;
  CASE f20;
  CATCH f21;
  CHAN f22;
  CHAR f23;
  CHAR16_T f24;
  CHAR32_T f25;
  CLASS f26;
  CO_AWAIT f27;
  CO_RETURN f28;
  CO_YIELD f29;
  CODING_TRAITS f30;
  COMPL f31;
  CONCEPT f32;
  CONST f33;
  CONST_CAST f34;
  CONSTEXPR f35;
  CONTINUE f36;
  CONTROLLER f37;
  CRATE f38;
  DECLTYPE f39;
  DECODER f40;
  DEFAULT f41;
  DEFER f42;
  DELETE f43;
  DO f44;
  DOUBLE f45;
  DYNAMIC_CAST f46;
  ELSE f47;
  ENCODER f48;
  ENUM f49;
  ERR f50;
  EXPLICIT f51;
  EXPORT f52;
  EXTERN f53;
  FALLTHROUGH f54;
  FALSE f55;
  FIDL f56;
  FIDL_TYPE f57;
  FINAL f58;
  FLOAT f59;
  FN f60;
  FOR f61;
  FRIEND f62;
  FUNC f63;
  FUTURE f64;
  FUTURES f65;
  GO f66;
  GOTO f67;
  HAS_INVALID_TAG f68;
  IF f69;
  IMPL f70;
  IMPORT f71;
  IN f72;
  INLINE f73;
  INT f74;
  INT16 f75;
  INT32 f76;
  INT64 f77;
  INT8 f78;
  INTERFACE f79;
  LET f80;
  LHS f81;
  LIST f82;
  LONG f83;
  LOOP f84;
  MACRO f85;
  MAP f86;
  MATCH f87;
  MOD f88;
  MODULE f89;
  MOVE f90;
  MUT f91;
  MUTABLE f92;
  NAMESPACE f93;
  NEVER f94;
  NEW f95;
  NOEXCEPT f96;
  NONE f97;
  NOT f98;
  NOT_EQ f99;
  NULLPTR f100;
  OFFSET f101;
  OFFSETOF f102;
  OK f103;
  ON_OPEN f104;
  OPERATOR f105;
  OPTION f106;
  OR f107;
  OR_EQ f108;
  OVERRIDE f109;
  PACKAGE f110;
  PRIV f111;
  PRIVATE f112;
  PROC f113;
  PROTECTED f114;
  PROXY f115;
  PUB f116;
  PUBLIC f117;
  PURE f118;
  RANGE f119;
  REF f120;
  REGISTER f121;
  REINTERPRET_CAST f122;
  REQUIRES f123;
  RESULT f124;
  RETURN f125;
  RHS f126;
  RUNE f127;
  SELECT f128;
  SELF f129;
  SEND f130;
  SET_CONTROLLER f131;
  SHORT f132;
  SIGNED f133;
  SIZEOF f134;
  SOME f135;
  STATIC f136;
  STATIC_ASSERT f137;
  STATIC_CAST f138;
  STREAM f139;
  STRING f140;
  STRUCT f141;
  STUB f142;
  SUPER f143;
  SWITCH f144;
  SYNCHRONIZED f145;
  TAG f146;
  TEMPLATE f147;
  THIS f148;
  THREAD_LOCAL f149;
  THROW f150;
  TO_STRING f151;
  TRAIT f152;
  TRUE f153;
  TRY f154;
  TYPE f155;
  TYPEDEF f156;
  TYPEID f157;
  TYPENAME f158;
  TYPEOF f159;
  UINT16 f160;
  UINT32 f161;
  UINT64 f162;
  UINT8 f163;
  UNION f164;
  UNSAFE f165;
  UNSIGNED f166;
  UNSIZED f167;
  USE f168;
  USING f169;
  VALUE f170;
  VALUE_OF f171;
  VALUE_UNION f172;
  VALUES f173;
  VALUES_MAP f174;
  VAR f175;
  VEC f176;
  VIRTUAL f177;
  VOID f178;
  VOLATILE f179;
  WCHAR_T f180;
  WHERE f181;
  WHICH f182;
  WHILE f183;
  XOR f184;
  XOR_EQ f185;
  XUNION f186;
  YIELD f187;
  ZX f188;
};
