// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.method.response.arguments.camel;
using argtype = uint32;
protocol DangerousResponseArguments {
  Method0() -> (argtype Abstract);
  Method1() -> (argtype Alignas);
  Method2() -> (argtype Alignof);
  Method3() -> (argtype And);
  Method4() -> (argtype AndEq);
  Method5() -> (argtype As);
  Method6() -> (argtype Asm);
  Method7() -> (argtype Async);
  Method8() -> (argtype AtomicCancel);
  Method9() -> (argtype AtomicCommit);
  Method10() -> (argtype AtomicNoexcept);
  Method11() -> (argtype Auto);
  Method12() -> (argtype Await);
  Method13() -> (argtype Become);
  Method14() -> (argtype Bitand);
  Method15() -> (argtype Bitor);
  Method16() -> (argtype Bool);
  Method17() -> (argtype Box);
  Method18() -> (argtype Break);
  Method19() -> (argtype Byte);
  Method20() -> (argtype Case);
  Method21() -> (argtype Catch);
  Method22() -> (argtype Chan);
  Method23() -> (argtype Char);
  Method24() -> (argtype Char16T);
  Method25() -> (argtype Char32T);
  Method26() -> (argtype Class);
  Method27() -> (argtype CoAwait);
  Method28() -> (argtype CoReturn);
  Method29() -> (argtype CoYield);
  Method30() -> (argtype CodingTraits);
  Method31() -> (argtype Compl);
  Method32() -> (argtype Concept);
  Method33() -> (argtype Const);
  Method34() -> (argtype ConstCast);
  Method35() -> (argtype Constexpr);
  Method36() -> (argtype Continue);
  Method37() -> (argtype Controller);
  Method38() -> (argtype Crate);
  Method39() -> (argtype Decltype);
  Method40() -> (argtype Decoder);
  Method41() -> (argtype Default);
  Method42() -> (argtype Defer);
  Method43() -> (argtype Delete);
  Method44() -> (argtype Do);
  Method45() -> (argtype Double);
  Method46() -> (argtype DynamicCast);
  Method47() -> (argtype Else);
  Method48() -> (argtype Encoder);
  Method49() -> (argtype Enum);
  Method50() -> (argtype Err);
  Method51() -> (argtype Explicit);
  Method52() -> (argtype Export);
  Method53() -> (argtype Extern);
  Method54() -> (argtype Fallthrough);
  Method55() -> (argtype False);
  Method56() -> (argtype Fidl);
  Method57() -> (argtype FidlType);
  Method58() -> (argtype Final);
  Method59() -> (argtype Float);
  Method60() -> (argtype Fn);
  Method61() -> (argtype For);
  Method62() -> (argtype Friend);
  Method63() -> (argtype Func);
  Method64() -> (argtype Future);
  Method65() -> (argtype Futures);
  Method66() -> (argtype Go);
  Method67() -> (argtype Goto);
  Method68() -> (argtype HasInvalidTag);
  Method69() -> (argtype If);
  Method70() -> (argtype Impl);
  Method71() -> (argtype Import);
  Method72() -> (argtype In);
  Method73() -> (argtype Inline);
  Method74() -> (argtype Int);
  Method75() -> (argtype Int16);
  Method76() -> (argtype Int32);
  Method77() -> (argtype Int64);
  Method78() -> (argtype Int8);
  Method79() -> (argtype Interface);
  Method80() -> (argtype Let);
  Method81() -> (argtype Lhs);
  Method82() -> (argtype Long);
  Method83() -> (argtype Loop);
  Method84() -> (argtype Macro);
  Method85() -> (argtype Map);
  Method86() -> (argtype Match);
  Method87() -> (argtype Mod);
  Method88() -> (argtype Module);
  Method89() -> (argtype Move);
  Method90() -> (argtype Mut);
  Method91() -> (argtype Mutable);
  Method92() -> (argtype Namespace);
  Method93() -> (argtype Never);
  Method94() -> (argtype New);
  Method95() -> (argtype Noexcept);
  Method96() -> (argtype None);
  Method97() -> (argtype Not);
  Method98() -> (argtype NotEq);
  Method99() -> (argtype Nullptr);
  Method100() -> (argtype Offset);
  Method101() -> (argtype Offsetof);
  Method102() -> (argtype Ok);
  Method103() -> (argtype OnOpen);
  Method104() -> (argtype Operator);
  Method105() -> (argtype Option);
  Method106() -> (argtype Or);
  Method107() -> (argtype OrEq);
  Method108() -> (argtype Override);
  Method109() -> (argtype Package);
  Method110() -> (argtype Priv);
  Method111() -> (argtype Private);
  Method112() -> (argtype Proc);
  Method113() -> (argtype Protected);
  Method114() -> (argtype Proxy);
  Method115() -> (argtype Pub);
  Method116() -> (argtype Public);
  Method117() -> (argtype Pure);
  Method118() -> (argtype Range);
  Method119() -> (argtype Ref);
  Method120() -> (argtype Register);
  Method121() -> (argtype ReinterpretCast);
  Method122() -> (argtype Requires);
  Method123() -> (argtype Result);
  Method124() -> (argtype Return);
  Method125() -> (argtype Rhs);
  Method126() -> (argtype Rune);
  Method127() -> (argtype Select);
  Method128() -> (argtype Self);
  Method129() -> (argtype Send);
  Method130() -> (argtype SetController);
  Method131() -> (argtype Short);
  Method132() -> (argtype Signed);
  Method133() -> (argtype Sizeof);
  Method134() -> (argtype Some);
  Method135() -> (argtype Static);
  Method136() -> (argtype StaticAssert);
  Method137() -> (argtype StaticCast);
  Method138() -> (argtype Stream);
  Method139() -> (argtype String);
  Method140() -> (argtype Struct);
  Method141() -> (argtype Stub);
  Method142() -> (argtype Super);
  Method143() -> (argtype Switch);
  Method144() -> (argtype Synchronized);
  Method145() -> (argtype Tag);
  Method146() -> (argtype Template);
  Method147() -> (argtype This);
  Method148() -> (argtype ThreadLocal);
  Method149() -> (argtype Throw);
  Method150() -> (argtype Trait);
  Method151() -> (argtype True);
  Method152() -> (argtype Try);
  Method153() -> (argtype Type);
  Method154() -> (argtype Typedef);
  Method155() -> (argtype Typeid);
  Method156() -> (argtype Typename);
  Method157() -> (argtype Typeof);
  Method158() -> (argtype Uint16);
  Method159() -> (argtype Uint32);
  Method160() -> (argtype Uint64);
  Method161() -> (argtype Uint8);
  Method162() -> (argtype Union);
  Method163() -> (argtype Unsafe);
  Method164() -> (argtype Unsigned);
  Method165() -> (argtype Unsized);
  Method166() -> (argtype Use);
  Method167() -> (argtype Using);
  Method168() -> (argtype Value);
  Method169() -> (argtype ValueUnion);
  Method170() -> (argtype Var);
  Method171() -> (argtype Vec);
  Method172() -> (argtype Virtual);
  Method173() -> (argtype Void);
  Method174() -> (argtype Volatile);
  Method175() -> (argtype WcharT);
  Method176() -> (argtype Where);
  Method177() -> (argtype Which);
  Method178() -> (argtype While);
  Method179() -> (argtype Xor);
  Method180() -> (argtype XorEq);
  Method181() -> (argtype Xunion);
  Method182() -> (argtype Yield);
  Method183() -> (argtype Zx);
};
