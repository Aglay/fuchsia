// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.table.names.upper;
using membertype = uint32;
table ABSTRACT { 1: membertype member; };
table ALIGNAS { 1: membertype member; };
table ALIGNOF { 1: membertype member; };
table AND { 1: membertype member; };
table AND_EQ { 1: membertype member; };
table AS { 1: membertype member; };
table ASM { 1: membertype member; };
table ASYNC { 1: membertype member; };
table ATOMIC_CANCEL { 1: membertype member; };
table ATOMIC_COMMIT { 1: membertype member; };
table ATOMIC_NOEXCEPT { 1: membertype member; };
table AUTO { 1: membertype member; };
table AWAIT { 1: membertype member; };
table BECOME { 1: membertype member; };
table BITAND { 1: membertype member; };
table BITOR { 1: membertype member; };
table BOOL { 1: membertype member; };
table BOX { 1: membertype member; };
table BREAK { 1: membertype member; };
table BYTE { 1: membertype member; };
table CASE { 1: membertype member; };
table CATCH { 1: membertype member; };
table CHAN { 1: membertype member; };
table CHAR { 1: membertype member; };
table CHAR16_T { 1: membertype member; };
table CHAR32_T { 1: membertype member; };
table CLASS { 1: membertype member; };
table CO_AWAIT { 1: membertype member; };
table CO_RETURN { 1: membertype member; };
table CO_YIELD { 1: membertype member; };
table CODING_TRAITS { 1: membertype member; };
table COMPL { 1: membertype member; };
table CONCEPT { 1: membertype member; };
table CONST { 1: membertype member; };
table CONST_CAST { 1: membertype member; };
table CONSTEXPR { 1: membertype member; };
table CONTINUE { 1: membertype member; };
table CONTROLLER { 1: membertype member; };
table CRATE { 1: membertype member; };
table DECLTYPE { 1: membertype member; };
table DECODER { 1: membertype member; };
table DEFAULT { 1: membertype member; };
table DEFER { 1: membertype member; };
table DELETE { 1: membertype member; };
table DO { 1: membertype member; };
table DOUBLE { 1: membertype member; };
table DYNAMIC_CAST { 1: membertype member; };
table ELSE { 1: membertype member; };
table ENCODER { 1: membertype member; };
table ENUM { 1: membertype member; };
table ERR { 1: membertype member; };
table EXPLICIT { 1: membertype member; };
table EXPORT { 1: membertype member; };
table EXTERN { 1: membertype member; };
table FALLTHROUGH { 1: membertype member; };
table FALSE { 1: membertype member; };
table FIDL { 1: membertype member; };
table FIDL_TYPE { 1: membertype member; };
table FINAL { 1: membertype member; };
table FLOAT { 1: membertype member; };
table FN { 1: membertype member; };
table FOR { 1: membertype member; };
table FRIEND { 1: membertype member; };
table FUNC { 1: membertype member; };
table FUTURE { 1: membertype member; };
table FUTURES { 1: membertype member; };
table GO { 1: membertype member; };
table GOTO { 1: membertype member; };
table HAS_INVALID_TAG { 1: membertype member; };
table IF { 1: membertype member; };
table IMPL { 1: membertype member; };
table IMPORT { 1: membertype member; };
table IN { 1: membertype member; };
table INLINE { 1: membertype member; };
table INT { 1: membertype member; };
table INT16 { 1: membertype member; };
table INT32 { 1: membertype member; };
table INT64 { 1: membertype member; };
table INT8 { 1: membertype member; };
table INTERFACE { 1: membertype member; };
table LET { 1: membertype member; };
table LHS { 1: membertype member; };
table LONG { 1: membertype member; };
table LOOP { 1: membertype member; };
table MACRO { 1: membertype member; };
table MAP { 1: membertype member; };
table MATCH { 1: membertype member; };
table MOD { 1: membertype member; };
table MODULE { 1: membertype member; };
table MOVE { 1: membertype member; };
table MUT { 1: membertype member; };
table MUTABLE { 1: membertype member; };
table NAMESPACE { 1: membertype member; };
table NEVER { 1: membertype member; };
table NEW { 1: membertype member; };
table NOEXCEPT { 1: membertype member; };
table NONE { 1: membertype member; };
table NOT { 1: membertype member; };
table NOT_EQ { 1: membertype member; };
table NULLPTR { 1: membertype member; };
table OFFSET { 1: membertype member; };
table OFFSETOF { 1: membertype member; };
table OK { 1: membertype member; };
table ON_OPEN { 1: membertype member; };
table OPERATOR { 1: membertype member; };
table OPTION { 1: membertype member; };
table OR { 1: membertype member; };
table OR_EQ { 1: membertype member; };
table OVERRIDE { 1: membertype member; };
table PACKAGE { 1: membertype member; };
table PRIV { 1: membertype member; };
table PRIVATE { 1: membertype member; };
table PROC { 1: membertype member; };
table PROTECTED { 1: membertype member; };
table PROXY { 1: membertype member; };
table PUB { 1: membertype member; };
table PUBLIC { 1: membertype member; };
table PURE { 1: membertype member; };
table RANGE { 1: membertype member; };
table REF { 1: membertype member; };
table REGISTER { 1: membertype member; };
table REINTERPRET_CAST { 1: membertype member; };
table REQUIRES { 1: membertype member; };
table RESULT { 1: membertype member; };
table RETURN { 1: membertype member; };
table RHS { 1: membertype member; };
table RUNE { 1: membertype member; };
table SELECT { 1: membertype member; };
table SELF { 1: membertype member; };
table SEND { 1: membertype member; };
table SET_CONTROLLER { 1: membertype member; };
table SHORT { 1: membertype member; };
table SIGNED { 1: membertype member; };
table SIZEOF { 1: membertype member; };
table SOME { 1: membertype member; };
table STATIC { 1: membertype member; };
table STATIC_ASSERT { 1: membertype member; };
table STATIC_CAST { 1: membertype member; };
table STREAM { 1: membertype member; };
table STRING { 1: membertype member; };
table STRUCT { 1: membertype member; };
table STUB { 1: membertype member; };
table SUPER { 1: membertype member; };
table SWITCH { 1: membertype member; };
table SYNCHRONIZED { 1: membertype member; };
table TAG { 1: membertype member; };
table TEMPLATE { 1: membertype member; };
table THIS { 1: membertype member; };
table THREAD_LOCAL { 1: membertype member; };
table THROW { 1: membertype member; };
table TRAIT { 1: membertype member; };
table TRUE { 1: membertype member; };
table TRY { 1: membertype member; };
table TYPE { 1: membertype member; };
table TYPEDEF { 1: membertype member; };
table TYPEID { 1: membertype member; };
table TYPENAME { 1: membertype member; };
table TYPEOF { 1: membertype member; };
table UINT16 { 1: membertype member; };
table UINT32 { 1: membertype member; };
table UINT64 { 1: membertype member; };
table UINT8 { 1: membertype member; };
table UNION { 1: membertype member; };
table UNSAFE { 1: membertype member; };
table UNSIGNED { 1: membertype member; };
table UNSIZED { 1: membertype member; };
table USE { 1: membertype member; };
table USING { 1: membertype member; };
table VALUE { 1: membertype member; };
table VALUE_UNION { 1: membertype member; };
table VAR { 1: membertype member; };
table VEC { 1: membertype member; };
table VIRTUAL { 1: membertype member; };
table VOID { 1: membertype member; };
table VOLATILE { 1: membertype member; };
table WCHAR_T { 1: membertype member; };
table WHERE { 1: membertype member; };
table WHICH { 1: membertype member; };
table WHILE { 1: membertype member; };
table XOR { 1: membertype member; };
table XOR_EQ { 1: membertype member; };
table XUNION { 1: membertype member; };
table YIELD { 1: membertype member; };
table ZX { 1: membertype member; };
table DangerousMembers {
  1: ABSTRACT f0;
  2: ALIGNAS f1;
  3: ALIGNOF f2;
  4: AND f3;
  5: AND_EQ f4;
  6: AS f5;
  7: ASM f6;
  8: ASYNC f7;
  9: ATOMIC_CANCEL f8;
  10: ATOMIC_COMMIT f9;
  11: ATOMIC_NOEXCEPT f10;
  12: AUTO f11;
  13: AWAIT f12;
  14: BECOME f13;
  15: BITAND f14;
  16: BITOR f15;
  17: BOOL f16;
  18: BOX f17;
  19: BREAK f18;
  20: BYTE f19;
  21: CASE f20;
  22: CATCH f21;
  23: CHAN f22;
  24: CHAR f23;
  25: CHAR16_T f24;
  26: CHAR32_T f25;
  27: CLASS f26;
  28: CO_AWAIT f27;
  29: CO_RETURN f28;
  30: CO_YIELD f29;
  31: CODING_TRAITS f30;
  32: COMPL f31;
  33: CONCEPT f32;
  34: CONST f33;
  35: CONST_CAST f34;
  36: CONSTEXPR f35;
  37: CONTINUE f36;
  38: CONTROLLER f37;
  39: CRATE f38;
  40: DECLTYPE f39;
  41: DECODER f40;
  42: DEFAULT f41;
  43: DEFER f42;
  44: DELETE f43;
  45: DO f44;
  46: DOUBLE f45;
  47: DYNAMIC_CAST f46;
  48: ELSE f47;
  49: ENCODER f48;
  50: ENUM f49;
  51: ERR f50;
  52: EXPLICIT f51;
  53: EXPORT f52;
  54: EXTERN f53;
  55: FALLTHROUGH f54;
  56: FALSE f55;
  57: FIDL f56;
  58: FIDL_TYPE f57;
  59: FINAL f58;
  60: FLOAT f59;
  61: FN f60;
  62: FOR f61;
  63: FRIEND f62;
  64: FUNC f63;
  65: FUTURE f64;
  66: FUTURES f65;
  67: GO f66;
  68: GOTO f67;
  69: HAS_INVALID_TAG f68;
  70: IF f69;
  71: IMPL f70;
  72: IMPORT f71;
  73: IN f72;
  74: INLINE f73;
  75: INT f74;
  76: INT16 f75;
  77: INT32 f76;
  78: INT64 f77;
  79: INT8 f78;
  80: INTERFACE f79;
  81: LET f80;
  82: LHS f81;
  83: LONG f82;
  84: LOOP f83;
  85: MACRO f84;
  86: MAP f85;
  87: MATCH f86;
  88: MOD f87;
  89: MODULE f88;
  90: MOVE f89;
  91: MUT f90;
  92: MUTABLE f91;
  93: NAMESPACE f92;
  94: NEVER f93;
  95: NEW f94;
  96: NOEXCEPT f95;
  97: NONE f96;
  98: NOT f97;
  99: NOT_EQ f98;
  100: NULLPTR f99;
  101: OFFSET f100;
  102: OFFSETOF f101;
  103: OK f102;
  104: ON_OPEN f103;
  105: OPERATOR f104;
  106: OPTION f105;
  107: OR f106;
  108: OR_EQ f107;
  109: OVERRIDE f108;
  110: PACKAGE f109;
  111: PRIV f110;
  112: PRIVATE f111;
  113: PROC f112;
  114: PROTECTED f113;
  115: PROXY f114;
  116: PUB f115;
  117: PUBLIC f116;
  118: PURE f117;
  119: RANGE f118;
  120: REF f119;
  121: REGISTER f120;
  122: REINTERPRET_CAST f121;
  123: REQUIRES f122;
  124: RESULT f123;
  125: RETURN f124;
  126: RHS f125;
  127: RUNE f126;
  128: SELECT f127;
  129: SELF f128;
  130: SEND f129;
  131: SET_CONTROLLER f130;
  132: SHORT f131;
  133: SIGNED f132;
  134: SIZEOF f133;
  135: SOME f134;
  136: STATIC f135;
  137: STATIC_ASSERT f136;
  138: STATIC_CAST f137;
  139: STREAM f138;
  140: STRING f139;
  141: STRUCT f140;
  142: STUB f141;
  143: SUPER f142;
  144: SWITCH f143;
  145: SYNCHRONIZED f144;
  146: TAG f145;
  147: TEMPLATE f146;
  148: THIS f147;
  149: THREAD_LOCAL f148;
  150: THROW f149;
  151: TRAIT f150;
  152: TRUE f151;
  153: TRY f152;
  154: TYPE f153;
  155: TYPEDEF f154;
  156: TYPEID f155;
  157: TYPENAME f156;
  158: TYPEOF f157;
  159: UINT16 f158;
  160: UINT32 f159;
  161: UINT64 f160;
  162: UINT8 f161;
  163: UNION f162;
  164: UNSAFE f163;
  165: UNSIGNED f164;
  166: UNSIZED f165;
  167: USE f166;
  168: USING f167;
  169: VALUE f168;
  170: VALUE_UNION f169;
  171: VAR f170;
  172: VEC f171;
  173: VIRTUAL f172;
  174: VOID f173;
  175: VOLATILE f174;
  176: WCHAR_T f175;
  177: WHERE f176;
  178: WHICH f177;
  179: WHILE f178;
  180: XOR f179;
  181: XOR_EQ f180;
  182: XUNION f181;
  183: YIELD f182;
  184: ZX f183;
};
