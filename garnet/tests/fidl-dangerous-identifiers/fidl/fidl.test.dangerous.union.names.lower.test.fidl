// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.union.names.lower;
using membertype = uint32;
union abstract { membertype member; };
union alignas { membertype member; };
union alignof { membertype member; };
union and { membertype member; };
union and_eq { membertype member; };
union as { membertype member; };
union asm { membertype member; };
union assert { membertype member; };
union async { membertype member; };
union atomic_cancel { membertype member; };
union atomic_commit { membertype member; };
union atomic_noexcept { membertype member; };
union auto { membertype member; };
union await { membertype member; };
union become { membertype member; };
union bitand { membertype member; };
union bitor { membertype member; };
union bool { membertype member; };
union box { membertype member; };
union break { membertype member; };
union byte { membertype member; };
union case { membertype member; };
union catch { membertype member; };
union chan { membertype member; };
union char { membertype member; };
union char16_t { membertype member; };
union char32_t { membertype member; };
union class { membertype member; };
union co_await { membertype member; };
union co_return { membertype member; };
union co_yield { membertype member; };
union coding_traits { membertype member; };
union compl { membertype member; };
union concept { membertype member; };
union const { membertype member; };
union const_cast { membertype member; };
union constexpr { membertype member; };
union continue { membertype member; };
union controller { membertype member; };
union covariant { membertype member; };
union crate { membertype member; };
union decltype { membertype member; };
union decoder { membertype member; };
union default { membertype member; };
union defer { membertype member; };
union deferred { membertype member; };
union delete { membertype member; };
union do { membertype member; };
union double { membertype member; };
union dynamic { membertype member; };
union dynamic_cast { membertype member; };
union else { membertype member; };
union encoder { membertype member; };
union ensure_values_instantiated { membertype member; };
union enum { membertype member; };
union err { membertype member; };
union explicit { membertype member; };
union export { membertype member; };
union extends { membertype member; };
union extern { membertype member; };
union external { membertype member; };
union factory { membertype member; };
union fallthrough { membertype member; };
union false { membertype member; };
union fidl { membertype member; };
union fidl_type { membertype member; };
union final { membertype member; };
union finally { membertype member; };
union float { membertype member; };
union fn { membertype member; };
union for { membertype member; };
union friend { membertype member; };
union func { membertype member; };
union future { membertype member; };
union futures { membertype member; };
union get { membertype member; };
union go { membertype member; };
union goto { membertype member; };
union has_invalid_tag { membertype member; };
union hash_code { membertype member; };
union if { membertype member; };
union impl { membertype member; };
union implements { membertype member; };
union import { membertype member; };
union in { membertype member; };
union index { membertype member; };
union inline { membertype member; };
union int { membertype member; };
union int16 { membertype member; };
union int32 { membertype member; };
union int64 { membertype member; };
union int8 { membertype member; };
union interface { membertype member; };
union is { membertype member; };
union let { membertype member; };
union lhs { membertype member; };
union library { membertype member; };
union list { membertype member; };
union long { membertype member; };
union loop { membertype member; };
union macro { membertype member; };
union map { membertype member; };
union match { membertype member; };
union mixin { membertype member; };
union mod { membertype member; };
union module { membertype member; };
union move { membertype member; };
union mut { membertype member; };
union mutable { membertype member; };
union namespace { membertype member; };
union never { membertype member; };
union new { membertype member; };
union no_such_method { membertype member; };
union noexcept { membertype member; };
union none { membertype member; };
union not { membertype member; };
union not_eq { membertype member; };
union null { membertype member; };
union nullptr { membertype member; };
union num { membertype member; };
union object { membertype member; };
union offset { membertype member; };
union offsetof { membertype member; };
union ok { membertype member; };
union on_open { membertype member; };
union operator { membertype member; };
union option { membertype member; };
union or { membertype member; };
union or_eq { membertype member; };
union override { membertype member; };
union package { membertype member; };
union part { membertype member; };
union priv { membertype member; };
union private { membertype member; };
union proc { membertype member; };
union protected { membertype member; };
union proxy { membertype member; };
union pub { membertype member; };
union public { membertype member; };
union pure { membertype member; };
union range { membertype member; };
union ref { membertype member; };
union register { membertype member; };
union reinterpret_cast { membertype member; };
union requires { membertype member; };
union result { membertype member; };
union rethrow { membertype member; };
union return { membertype member; };
union rhs { membertype member; };
union rune { membertype member; };
union runtime_type { membertype member; };
union select { membertype member; };
union self { membertype member; };
union send { membertype member; };
union set { membertype member; };
union set_controller { membertype member; };
union short { membertype member; };
union signed { membertype member; };
union sizeof { membertype member; };
union some { membertype member; };
union static { membertype member; };
union static_assert { membertype member; };
union static_cast { membertype member; };
union stream { membertype member; };
union string { membertype member; };
union struct { membertype member; };
union stub { membertype member; };
union super { membertype member; };
union switch { membertype member; };
union synchronized { membertype member; };
union template { membertype member; };
union this { membertype member; };
union thread_local { membertype member; };
union throw { membertype member; };
union to_string { membertype member; };
union trait { membertype member; };
union true { membertype member; };
union try { membertype member; };
union type { membertype member; };
union typedef { membertype member; };
union typeid { membertype member; };
union typename { membertype member; };
union typeof { membertype member; };
union uint16 { membertype member; };
union uint64 { membertype member; };
union uint8 { membertype member; };
union union { membertype member; };
union unsafe { membertype member; };
union unsigned { membertype member; };
union unsized { membertype member; };
union use { membertype member; };
union using { membertype member; };
union value { membertype member; };
union value_of { membertype member; };
union value_union { membertype member; };
union values_map { membertype member; };
union var { membertype member; };
union vec { membertype member; };
union virtual { membertype member; };
union void { membertype member; };
union volatile { membertype member; };
union wchar_t { membertype member; };
union where { membertype member; };
union which { membertype member; };
union while { membertype member; };
union with { membertype member; };
union xor { membertype member; };
union xor_eq { membertype member; };
union xunion { membertype member; };
union yield { membertype member; };
union zx { membertype member; };
union DangerousMembers {
    1: abstract f0;
    2: alignas f1;
    3: alignof f2;
    4: and f3;
    5: and_eq f4;
    6: as f5;
    7: asm f6;
    8: assert f7;
    9: async f8;
   10: atomic_cancel f9;
   11: atomic_commit f10;
   12: atomic_noexcept f11;
   13: auto f12;
   14: await f13;
   15: become f14;
   16: bitand f15;
   17: bitor f16;
   18: bool f17;
   19: box f18;
   20: break f19;
   21: byte f20;
   22: case f21;
   23: catch f22;
   24: chan f23;
   25: char f24;
   26: char16_t f25;
   27: char32_t f26;
   28: class f27;
   29: co_await f28;
   30: co_return f29;
   31: co_yield f30;
   32: coding_traits f31;
   33: compl f32;
   34: concept f33;
   35: const f34;
   36: const_cast f35;
   37: constexpr f36;
   38: continue f37;
   39: controller f38;
   40: covariant f39;
   41: crate f40;
   42: decltype f41;
   43: decoder f42;
   44: default f43;
   45: defer f44;
   46: deferred f45;
   47: delete f46;
   48: do f47;
   49: double f48;
   50: dynamic f49;
   51: dynamic_cast f50;
   52: else f51;
   53: encoder f52;
   54: ensure_values_instantiated f53;
   55: enum f54;
   56: err f55;
   57: explicit f56;
   58: export f57;
   59: extends f58;
   60: extern f59;
   61: external f60;
   62: factory f61;
   63: fallthrough f62;
   64: false f63;
   65: fidl f64;
   66: fidl_type f65;
   67: final f66;
   68: finally f67;
   69: float f68;
   70: fn f69;
   71: for f70;
   72: friend f71;
   73: func f72;
   74: future f73;
   75: futures f74;
   76: get f75;
   77: go f76;
   78: goto f77;
   79: has_invalid_tag f78;
   80: hash_code f79;
   81: if f80;
   82: impl f81;
   83: implements f82;
   84: import f83;
   85: in f84;
   86: index f85;
   87: inline f86;
   88: int f87;
   89: int16 f88;
   90: int32 f89;
   91: int64 f90;
   92: int8 f91;
   93: interface f92;
   94: is f93;
   95: let f94;
   96: lhs f95;
   97: library f96;
   98: list f97;
   99: long f98;
  100: loop f99;
  101: macro f100;
  102: map f101;
  103: match f102;
  104: mixin f103;
  105: mod f104;
  106: module f105;
  107: move f106;
  108: mut f107;
  109: mutable f108;
  110: namespace f109;
  111: never f110;
  112: new f111;
  113: no_such_method f112;
  114: noexcept f113;
  115: none f114;
  116: not f115;
  117: not_eq f116;
  118: null f117;
  119: nullptr f118;
  120: num f119;
  121: object f120;
  122: offset f121;
  123: offsetof f122;
  124: ok f123;
  125: on_open f124;
  126: operator f125;
  127: option f126;
  128: or f127;
  129: or_eq f128;
  130: override f129;
  131: package f130;
  132: part f131;
  133: priv f132;
  134: private f133;
  135: proc f134;
  136: protected f135;
  137: proxy f136;
  138: pub f137;
  139: public f138;
  140: pure f139;
  141: range f140;
  142: ref f141;
  143: register f142;
  144: reinterpret_cast f143;
  145: requires f144;
  146: result f145;
  147: rethrow f146;
  148: return f147;
  149: rhs f148;
  150: rune f149;
  151: runtime_type f150;
  152: select f151;
  153: self f152;
  154: send f153;
  155: set f154;
  156: set_controller f155;
  157: short f156;
  158: signed f157;
  159: sizeof f158;
  160: some f159;
  161: static f160;
  162: static_assert f161;
  163: static_cast f162;
  164: stream f163;
  165: string f164;
  166: struct f165;
  167: stub f166;
  168: super f167;
  169: switch f168;
  170: synchronized f169;
  171: template f170;
  172: this f171;
  173: thread_local f172;
  174: throw f173;
  175: to_string f174;
  176: trait f175;
  177: true f176;
  178: try f177;
  179: type f178;
  180: typedef f179;
  181: typeid f180;
  182: typename f181;
  183: typeof f182;
  184: uint16 f183;
  185: uint32 f184;
  186: uint64 f185;
  187: uint8 f186;
  188: union f187;
  189: unsafe f188;
  190: unsigned f189;
  191: unsized f190;
  192: use f191;
  193: using f192;
  194: value f193;
  195: value_of f194;
  196: value_union f195;
  197: values_map f196;
  198: var f197;
  199: vec f198;
  200: virtual f199;
  201: void f200;
  202: volatile f201;
  203: wchar_t f202;
  204: where f203;
  205: which f204;
  206: while f205;
  207: with f206;
  208: xor f207;
  209: xor_eq f208;
  210: xunion f209;
  211: yield f210;
  212: zx f211;
};
