// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.protocol.names.upper;
protocol ABSTRACT { JustOneMethod(); };
protocol ALIGNAS { JustOneMethod(); };
protocol ALIGNOF { JustOneMethod(); };
protocol AND { JustOneMethod(); };
protocol AND_EQ { JustOneMethod(); };
protocol AS { JustOneMethod(); };
protocol ASM { JustOneMethod(); };
protocol ASYNC { JustOneMethod(); };
protocol ATOMIC_CANCEL { JustOneMethod(); };
protocol ATOMIC_COMMIT { JustOneMethod(); };
protocol ATOMIC_NOEXCEPT { JustOneMethod(); };
protocol AUTO { JustOneMethod(); };
protocol AWAIT { JustOneMethod(); };
protocol BECOME { JustOneMethod(); };
protocol BITAND { JustOneMethod(); };
protocol BITOR { JustOneMethod(); };
protocol BOOL { JustOneMethod(); };
protocol BOX { JustOneMethod(); };
protocol BREAK { JustOneMethod(); };
protocol BYTE { JustOneMethod(); };
protocol CASE { JustOneMethod(); };
protocol CATCH { JustOneMethod(); };
protocol CHAN { JustOneMethod(); };
protocol CHAR { JustOneMethod(); };
protocol CHAR16_T { JustOneMethod(); };
protocol CHAR32_T { JustOneMethod(); };
protocol CLASS { JustOneMethod(); };
protocol CO_AWAIT { JustOneMethod(); };
protocol CO_RETURN { JustOneMethod(); };
protocol CO_YIELD { JustOneMethod(); };
protocol CODING_TRAITS { JustOneMethod(); };
protocol COMPL { JustOneMethod(); };
protocol CONCEPT { JustOneMethod(); };
protocol CONST { JustOneMethod(); };
protocol CONST_CAST { JustOneMethod(); };
protocol CONSTEXPR { JustOneMethod(); };
protocol CONTINUE { JustOneMethod(); };
protocol CONTROLLER { JustOneMethod(); };
protocol CRATE { JustOneMethod(); };
protocol DECLTYPE { JustOneMethod(); };
protocol DECODER { JustOneMethod(); };
protocol DEFAULT { JustOneMethod(); };
protocol DEFER { JustOneMethod(); };
protocol DELETE { JustOneMethod(); };
protocol DO { JustOneMethod(); };
protocol DOUBLE { JustOneMethod(); };
protocol DYNAMIC_CAST { JustOneMethod(); };
protocol ELSE { JustOneMethod(); };
protocol ENCODER { JustOneMethod(); };
protocol ENUM { JustOneMethod(); };
protocol ERR { JustOneMethod(); };
protocol EXPLICIT { JustOneMethod(); };
protocol EXPORT { JustOneMethod(); };
protocol EXTERN { JustOneMethod(); };
protocol FALLTHROUGH { JustOneMethod(); };
protocol FALSE { JustOneMethod(); };
protocol FIDL { JustOneMethod(); };
protocol FIDL_TYPE { JustOneMethod(); };
protocol FINAL { JustOneMethod(); };
protocol FLOAT { JustOneMethod(); };
protocol FN { JustOneMethod(); };
protocol FOR { JustOneMethod(); };
protocol FRIEND { JustOneMethod(); };
protocol FUNC { JustOneMethod(); };
protocol FUTURE { JustOneMethod(); };
protocol FUTURES { JustOneMethod(); };
protocol GO { JustOneMethod(); };
protocol GOTO { JustOneMethod(); };
protocol HAS_INVALID_TAG { JustOneMethod(); };
protocol IF { JustOneMethod(); };
protocol IMPL { JustOneMethod(); };
protocol IMPORT { JustOneMethod(); };
protocol IN { JustOneMethod(); };
protocol INLINE { JustOneMethod(); };
protocol INT { JustOneMethod(); };
protocol INT16 { JustOneMethod(); };
protocol INT32 { JustOneMethod(); };
protocol INT64 { JustOneMethod(); };
protocol INT8 { JustOneMethod(); };
protocol INTERFACE { JustOneMethod(); };
protocol LET { JustOneMethod(); };
protocol LHS { JustOneMethod(); };
protocol LONG { JustOneMethod(); };
protocol LOOP { JustOneMethod(); };
protocol MACRO { JustOneMethod(); };
protocol MAP { JustOneMethod(); };
protocol MATCH { JustOneMethod(); };
protocol MOD { JustOneMethod(); };
protocol MODULE { JustOneMethod(); };
protocol MOVE { JustOneMethod(); };
protocol MUT { JustOneMethod(); };
protocol MUTABLE { JustOneMethod(); };
protocol NAMESPACE { JustOneMethod(); };
protocol NEVER { JustOneMethod(); };
protocol NEW { JustOneMethod(); };
protocol NOEXCEPT { JustOneMethod(); };
protocol NONE { JustOneMethod(); };
protocol NOT { JustOneMethod(); };
protocol NOT_EQ { JustOneMethod(); };
protocol NULLPTR { JustOneMethod(); };
protocol OFFSET { JustOneMethod(); };
protocol OFFSETOF { JustOneMethod(); };
protocol OK { JustOneMethod(); };
protocol ON_OPEN { JustOneMethod(); };
protocol OPERATOR { JustOneMethod(); };
protocol OPTION { JustOneMethod(); };
protocol OR { JustOneMethod(); };
protocol OR_EQ { JustOneMethod(); };
protocol OVERRIDE { JustOneMethod(); };
protocol PACKAGE { JustOneMethod(); };
protocol PRIV { JustOneMethod(); };
protocol PRIVATE { JustOneMethod(); };
protocol PROC { JustOneMethod(); };
protocol PROTECTED { JustOneMethod(); };
protocol PROXY { JustOneMethod(); };
protocol PUB { JustOneMethod(); };
protocol PUBLIC { JustOneMethod(); };
protocol PURE { JustOneMethod(); };
protocol RANGE { JustOneMethod(); };
protocol REF { JustOneMethod(); };
protocol REGISTER { JustOneMethod(); };
protocol REINTERPRET_CAST { JustOneMethod(); };
protocol REQUIRES { JustOneMethod(); };
protocol RESULT { JustOneMethod(); };
protocol RETURN { JustOneMethod(); };
protocol RHS { JustOneMethod(); };
protocol RUNE { JustOneMethod(); };
protocol SELECT { JustOneMethod(); };
protocol SELF { JustOneMethod(); };
protocol SEND { JustOneMethod(); };
protocol SET_CONTROLLER { JustOneMethod(); };
protocol SHORT { JustOneMethod(); };
protocol SIGNED { JustOneMethod(); };
protocol SIZEOF { JustOneMethod(); };
protocol SOME { JustOneMethod(); };
protocol STATIC { JustOneMethod(); };
protocol STATIC_ASSERT { JustOneMethod(); };
protocol STATIC_CAST { JustOneMethod(); };
protocol STREAM { JustOneMethod(); };
protocol STRING { JustOneMethod(); };
protocol STRUCT { JustOneMethod(); };
protocol STUB { JustOneMethod(); };
protocol SUPER { JustOneMethod(); };
protocol SWITCH { JustOneMethod(); };
protocol SYNCHRONIZED { JustOneMethod(); };
protocol TAG { JustOneMethod(); };
protocol TEMPLATE { JustOneMethod(); };
protocol THIS { JustOneMethod(); };
protocol THREAD_LOCAL { JustOneMethod(); };
protocol THROW { JustOneMethod(); };
protocol TRAIT { JustOneMethod(); };
protocol TRUE { JustOneMethod(); };
protocol TRY { JustOneMethod(); };
protocol TYPE { JustOneMethod(); };
protocol TYPEDEF { JustOneMethod(); };
protocol TYPEID { JustOneMethod(); };
protocol TYPENAME { JustOneMethod(); };
protocol TYPEOF { JustOneMethod(); };
protocol UINT16 { JustOneMethod(); };
protocol UINT32 { JustOneMethod(); };
protocol UINT64 { JustOneMethod(); };
protocol UINT8 { JustOneMethod(); };
protocol UNION { JustOneMethod(); };
protocol UNSAFE { JustOneMethod(); };
protocol UNSIGNED { JustOneMethod(); };
protocol UNSIZED { JustOneMethod(); };
protocol USE { JustOneMethod(); };
protocol USING { JustOneMethod(); };
protocol VALUE { JustOneMethod(); };
protocol VALUE_UNION { JustOneMethod(); };
protocol VAR { JustOneMethod(); };
protocol VEC { JustOneMethod(); };
protocol VIRTUAL { JustOneMethod(); };
protocol VOID { JustOneMethod(); };
protocol VOLATILE { JustOneMethod(); };
protocol WCHAR_T { JustOneMethod(); };
protocol WHERE { JustOneMethod(); };
protocol WHICH { JustOneMethod(); };
protocol WHILE { JustOneMethod(); };
protocol XOR { JustOneMethod(); };
protocol XOR_EQ { JustOneMethod(); };
protocol XUNION { JustOneMethod(); };
protocol YIELD { JustOneMethod(); };
protocol ZX { JustOneMethod(); };
