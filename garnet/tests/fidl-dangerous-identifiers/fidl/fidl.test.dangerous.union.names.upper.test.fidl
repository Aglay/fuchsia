// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.
// Generated by generate.py.
library fidl.test.dangerous.union.names.upper;
using membertype = uint32;
union ABSTRACT { membertype member; };
union ALIGNAS { membertype member; };
union ALIGNOF { membertype member; };
union AND { membertype member; };
union AND_EQ { membertype member; };
union AS { membertype member; };
union ASM { membertype member; };
union ASSERT { membertype member; };
union ASYNC { membertype member; };
union ATOMIC_CANCEL { membertype member; };
union ATOMIC_COMMIT { membertype member; };
union ATOMIC_NOEXCEPT { membertype member; };
union AUTO { membertype member; };
union AWAIT { membertype member; };
union BECOME { membertype member; };
union BITAND { membertype member; };
union BITOR { membertype member; };
union BOOL { membertype member; };
union BOX { membertype member; };
union BREAK { membertype member; };
union BYTE { membertype member; };
union CASE { membertype member; };
union CATCH { membertype member; };
union CHAN { membertype member; };
union CHAR { membertype member; };
union CHAR16_T { membertype member; };
union CHAR32_T { membertype member; };
union CLASS { membertype member; };
union CO_AWAIT { membertype member; };
union CO_RETURN { membertype member; };
union CO_YIELD { membertype member; };
union CODING_TRAITS { membertype member; };
union COMPL { membertype member; };
union CONCEPT { membertype member; };
union CONST { membertype member; };
union CONST_CAST { membertype member; };
union CONSTEXPR { membertype member; };
union CONTINUE { membertype member; };
union CONTROLLER { membertype member; };
union COVARIANT { membertype member; };
union CRATE { membertype member; };
union DECLTYPE { membertype member; };
union DECODER { membertype member; };
union DEFAULT { membertype member; };
union DEFER { membertype member; };
union DEFERRED { membertype member; };
union DELETE { membertype member; };
union DO { membertype member; };
union DOUBLE { membertype member; };
union DYNAMIC { membertype member; };
union DYNAMIC_CAST { membertype member; };
union ELSE { membertype member; };
union ENCODER { membertype member; };
union ENSURE_VALUES_INSTANTIATED { membertype member; };
union ENUM { membertype member; };
union ERR { membertype member; };
union EXPLICIT { membertype member; };
union EXPORT { membertype member; };
union EXTENDS { membertype member; };
union EXTERN { membertype member; };
union EXTERNAL { membertype member; };
union FACTORY { membertype member; };
union FALLTHROUGH { membertype member; };
union FALSE { membertype member; };
union FIDL { membertype member; };
union FIDL_TYPE { membertype member; };
union FINAL { membertype member; };
union FINALLY { membertype member; };
union FLOAT { membertype member; };
union FN { membertype member; };
union FOR { membertype member; };
union FRIEND { membertype member; };
union FUNC { membertype member; };
union FUTURE { membertype member; };
union FUTURES { membertype member; };
union GET { membertype member; };
union GO { membertype member; };
union GOTO { membertype member; };
union HAS_INVALID_TAG { membertype member; };
union HASH_CODE { membertype member; };
union IF { membertype member; };
union IMPL { membertype member; };
union IMPLEMENTS { membertype member; };
union IMPORT { membertype member; };
union IN { membertype member; };
union INDEX { membertype member; };
union INLINE { membertype member; };
union INT { membertype member; };
union INT16 { membertype member; };
union INT32 { membertype member; };
union INT64 { membertype member; };
union INT8 { membertype member; };
union INTERFACE { membertype member; };
union IS { membertype member; };
union LET { membertype member; };
union LHS { membertype member; };
union LIBRARY { membertype member; };
union LIST { membertype member; };
union LONG { membertype member; };
union LOOP { membertype member; };
union MACRO { membertype member; };
union MAP { membertype member; };
union MATCH { membertype member; };
union MIXIN { membertype member; };
union MOD { membertype member; };
union MODULE { membertype member; };
union MOVE { membertype member; };
union MUT { membertype member; };
union MUTABLE { membertype member; };
union NAMESPACE { membertype member; };
union NEVER { membertype member; };
union NEW { membertype member; };
union NO_SUCH_METHOD { membertype member; };
union NOEXCEPT { membertype member; };
union NONE { membertype member; };
union NOT { membertype member; };
union NOT_EQ { membertype member; };
union NULL { membertype member; };
union NULLPTR { membertype member; };
union NUM { membertype member; };
union OBJECT { membertype member; };
union OFFSET { membertype member; };
union OFFSETOF { membertype member; };
union OK { membertype member; };
union ON_OPEN { membertype member; };
union OPERATOR { membertype member; };
union OPTION { membertype member; };
union OR { membertype member; };
union OR_EQ { membertype member; };
union OVERRIDE { membertype member; };
union PACKAGE { membertype member; };
union PART { membertype member; };
union PRIV { membertype member; };
union PRIVATE { membertype member; };
union PROC { membertype member; };
union PROTECTED { membertype member; };
union PROXY { membertype member; };
union PUB { membertype member; };
union PUBLIC { membertype member; };
union PURE { membertype member; };
union RANGE { membertype member; };
union REF { membertype member; };
union REGISTER { membertype member; };
union REINTERPRET_CAST { membertype member; };
union REQUIRES { membertype member; };
union RESULT { membertype member; };
union RETHROW { membertype member; };
union RETURN { membertype member; };
union RHS { membertype member; };
union RUNE { membertype member; };
union RUNTIME_TYPE { membertype member; };
union SELECT { membertype member; };
union SELF { membertype member; };
union SEND { membertype member; };
union SET { membertype member; };
union SET_CONTROLLER { membertype member; };
union SHORT { membertype member; };
union SIGNED { membertype member; };
union SIZEOF { membertype member; };
union SOME { membertype member; };
union STATIC { membertype member; };
union STATIC_ASSERT { membertype member; };
union STATIC_CAST { membertype member; };
union STREAM { membertype member; };
union STRING { membertype member; };
union STRUCT { membertype member; };
union STUB { membertype member; };
union SUPER { membertype member; };
union SWITCH { membertype member; };
union SYNCHRONIZED { membertype member; };
union TEMPLATE { membertype member; };
union THIS { membertype member; };
union THREAD_LOCAL { membertype member; };
union THROW { membertype member; };
union TO_STRING { membertype member; };
union TRAIT { membertype member; };
union TRUE { membertype member; };
union TRY { membertype member; };
union TYPE { membertype member; };
union TYPEDEF { membertype member; };
union TYPEID { membertype member; };
union TYPENAME { membertype member; };
union TYPEOF { membertype member; };
union UINT16 { membertype member; };
union UINT32 { membertype member; };
union UINT64 { membertype member; };
union UINT8 { membertype member; };
union UNION { membertype member; };
union UNSAFE { membertype member; };
union UNSIGNED { membertype member; };
union UNSIZED { membertype member; };
union USE { membertype member; };
union USING { membertype member; };
union VALUE { membertype member; };
union VALUE_OF { membertype member; };
union VALUE_UNION { membertype member; };
union VALUES_MAP { membertype member; };
union VAR { membertype member; };
union VEC { membertype member; };
union VIRTUAL { membertype member; };
union VOID { membertype member; };
union VOLATILE { membertype member; };
union WCHAR_T { membertype member; };
union WHERE { membertype member; };
union WHICH { membertype member; };
union WHILE { membertype member; };
union WITH { membertype member; };
union XOR { membertype member; };
union XOR_EQ { membertype member; };
union XUNION { membertype member; };
union YIELD { membertype member; };
union ZX { membertype member; };
union DangerousMembers {
    1: ABSTRACT f0;
    2: ALIGNAS f1;
    3: ALIGNOF f2;
    4: AND f3;
    5: AND_EQ f4;
    6: AS f5;
    7: ASM f6;
    8: ASSERT f7;
    9: ASYNC f8;
   10: ATOMIC_CANCEL f9;
   11: ATOMIC_COMMIT f10;
   12: ATOMIC_NOEXCEPT f11;
   13: AUTO f12;
   14: AWAIT f13;
   15: BECOME f14;
   16: BITAND f15;
   17: BITOR f16;
   18: BOOL f17;
   19: BOX f18;
   20: BREAK f19;
   21: BYTE f20;
   22: CASE f21;
   23: CATCH f22;
   24: CHAN f23;
   25: CHAR f24;
   26: CHAR16_T f25;
   27: CHAR32_T f26;
   28: CLASS f27;
   29: CO_AWAIT f28;
   30: CO_RETURN f29;
   31: CO_YIELD f30;
   32: CODING_TRAITS f31;
   33: COMPL f32;
   34: CONCEPT f33;
   35: CONST f34;
   36: CONST_CAST f35;
   37: CONSTEXPR f36;
   38: CONTINUE f37;
   39: CONTROLLER f38;
   40: COVARIANT f39;
   41: CRATE f40;
   42: DECLTYPE f41;
   43: DECODER f42;
   44: DEFAULT f43;
   45: DEFER f44;
   46: DEFERRED f45;
   47: DELETE f46;
   48: DO f47;
   49: DOUBLE f48;
   50: DYNAMIC f49;
   51: DYNAMIC_CAST f50;
   52: ELSE f51;
   53: ENCODER f52;
   54: ENSURE_VALUES_INSTANTIATED f53;
   55: ENUM f54;
   56: ERR f55;
   57: EXPLICIT f56;
   58: EXPORT f57;
   59: EXTENDS f58;
   60: EXTERN f59;
   61: EXTERNAL f60;
   62: FACTORY f61;
   63: FALLTHROUGH f62;
   64: FALSE f63;
   65: FIDL f64;
   66: FIDL_TYPE f65;
   67: FINAL f66;
   68: FINALLY f67;
   69: FLOAT f68;
   70: FN f69;
   71: FOR f70;
   72: FRIEND f71;
   73: FUNC f72;
   74: FUTURE f73;
   75: FUTURES f74;
   76: GET f75;
   77: GO f76;
   78: GOTO f77;
   79: HAS_INVALID_TAG f78;
   80: HASH_CODE f79;
   81: IF f80;
   82: IMPL f81;
   83: IMPLEMENTS f82;
   84: IMPORT f83;
   85: IN f84;
   86: INDEX f85;
   87: INLINE f86;
   88: INT f87;
   89: INT16 f88;
   90: INT32 f89;
   91: INT64 f90;
   92: INT8 f91;
   93: INTERFACE f92;
   94: IS f93;
   95: LET f94;
   96: LHS f95;
   97: LIBRARY f96;
   98: LIST f97;
   99: LONG f98;
  100: LOOP f99;
  101: MACRO f100;
  102: MAP f101;
  103: MATCH f102;
  104: MIXIN f103;
  105: MOD f104;
  106: MODULE f105;
  107: MOVE f106;
  108: MUT f107;
  109: MUTABLE f108;
  110: NAMESPACE f109;
  111: NEVER f110;
  112: NEW f111;
  113: NO_SUCH_METHOD f112;
  114: NOEXCEPT f113;
  115: NONE f114;
  116: NOT f115;
  117: NOT_EQ f116;
  118: NULL f117;
  119: NULLPTR f118;
  120: NUM f119;
  121: OBJECT f120;
  122: OFFSET f121;
  123: OFFSETOF f122;
  124: OK f123;
  125: ON_OPEN f124;
  126: OPERATOR f125;
  127: OPTION f126;
  128: OR f127;
  129: OR_EQ f128;
  130: OVERRIDE f129;
  131: PACKAGE f130;
  132: PART f131;
  133: PRIV f132;
  134: PRIVATE f133;
  135: PROC f134;
  136: PROTECTED f135;
  137: PROXY f136;
  138: PUB f137;
  139: PUBLIC f138;
  140: PURE f139;
  141: RANGE f140;
  142: REF f141;
  143: REGISTER f142;
  144: REINTERPRET_CAST f143;
  145: REQUIRES f144;
  146: RESULT f145;
  147: RETHROW f146;
  148: RETURN f147;
  149: RHS f148;
  150: RUNE f149;
  151: RUNTIME_TYPE f150;
  152: SELECT f151;
  153: SELF f152;
  154: SEND f153;
  155: SET f154;
  156: SET_CONTROLLER f155;
  157: SHORT f156;
  158: SIGNED f157;
  159: SIZEOF f158;
  160: SOME f159;
  161: STATIC f160;
  162: STATIC_ASSERT f161;
  163: STATIC_CAST f162;
  164: STREAM f163;
  165: STRING f164;
  166: STRUCT f165;
  167: STUB f166;
  168: SUPER f167;
  169: SWITCH f168;
  170: SYNCHRONIZED f169;
  171: TEMPLATE f170;
  172: THIS f171;
  173: THREAD_LOCAL f172;
  174: THROW f173;
  175: TO_STRING f174;
  176: TRAIT f175;
  177: TRUE f176;
  178: TRY f177;
  179: TYPE f178;
  180: TYPEDEF f179;
  181: TYPEID f180;
  182: TYPENAME f181;
  183: TYPEOF f182;
  184: UINT16 f183;
  185: UINT32 f184;
  186: UINT64 f185;
  187: UINT8 f186;
  188: UNION f187;
  189: UNSAFE f188;
  190: UNSIGNED f189;
  191: UNSIZED f190;
  192: USE f191;
  193: USING f192;
  194: VALUE f193;
  195: VALUE_OF f194;
  196: VALUE_UNION f195;
  197: VALUES_MAP f196;
  198: VAR f197;
  199: VEC f198;
  200: VIRTUAL f199;
  201: VOID f200;
  202: VOLATILE f201;
  203: WCHAR_T f202;
  204: WHERE f203;
  205: WHICH f204;
  206: WHILE f205;
  207: WITH f206;
  208: XOR f207;
  209: XOR_EQ f208;
  210: XUNION f209;
  211: YIELD f210;
  212: ZX f211;
};
