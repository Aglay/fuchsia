# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/test.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

group("test") {
  testonly = true
  deps = [
    ":chunk_input_stream_tests",
    ":codec_adapter_sw_test",
    ":output_sink_tests",
    ":timestamp_extrapolator_tests",
  ]
}

executable("codec_adapter_sw_test_bin") {
  output_name = "codec_adapter_sw_test"
  testonly = true

  sources = [
    "codec_adapter_sw_test.cc",
  ]

  deps = [
    "//garnet/bin/media/codecs/sw:codec_adapter_sw",
    "//src/lib/fxl/test:gtest_main",
  ]
}

test_package("codec_adapter_sw_test") {
  tests = [
    {
      name = "codec_adapter_sw_test"
      environments = basic_envs
    },
  ]

  deps = [
    ":codec_adapter_sw_test_bin",
  ]
}

executable("timestamp_extrapolator_test_bin") {
  output_name = "timestamp_extrapolator_tests"

  testonly = true

  sources = [
    "timestamp_extrapolator_tests.cc",
  ]

  deps = [
    "//garnet/bin/media/codecs:timestamp_extrapolator",
    "//src/lib/fxl/test:gtest_main",
  ]
}

test_package("timestamp_extrapolator_tests") {
  deps = [
    ":timestamp_extrapolator_test_bin",
  ]

  tests = [
    {
      name = "timestamp_extrapolator_tests"
      environments = basic_envs
    },
  ]
}

source_set("test_codec_packets") {
  testonly = true
  public = [
    "test_codec_packets.h",
  ]
  public_deps = [
    "//garnet/lib/media/codec_impl",
    "//zircon/public/lib/fzl",
  ]
}

executable("chunk_input_stream_test_bin") {
  output_name = "chunk_input_stream_tests"

  testonly = true

  sources = [
    "chunk_input_stream_tests.cc",
  ]

  deps = [
    ":test_codec_packets",
    "//garnet/bin/media/codecs:chunk_input_stream",
    "//src/lib/fxl",
    "//src/lib/fxl/test:gtest_main",
  ]
}

test_package("chunk_input_stream_tests") {
  deps = [
    ":chunk_input_stream_test_bin",
  ]

  tests = [
    {
      name = "chunk_input_stream_tests"
      environments = basic_envs
    },
  ]
}

executable("output_sink_test_bin") {
  output_name = "output_sink_tests"

  testonly = true

  sources = [
    "output_sink_tests.cc",
  ]

  deps = [
    ":test_codec_packets",
    "//garnet/bin/media/codecs:output_sink",
    "//src/lib/fxl",
    "//third_party/googletest:gtest_main",
  ]
}

test_package("output_sink_tests") {
  deps = [
    ":output_sink_test_bin",
  ]

  tests = [
    {
      name = "output_sink_tests"
      environments = basic_envs
    },
  ]
}
