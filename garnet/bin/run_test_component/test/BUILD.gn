# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/rust/rustc_binary.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")

group("test") {
  testonly = true
  deps = [
    ":bin",
    ":run_test_component_test",
  ]
}

executable("bin") {
  testonly = true
  output_name = "run_test_component_test"

  sources = [ "run_test_component_test.cc" ]

  deps = [
    "//garnet/public/lib/gtest",
    "//sdk/fidl/fuchsia.sys",
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp/testing:unit",
    "//src/lib/fxl",
    "//src/lib/fxl/test:gtest_main",
    "//third_party/googletest:gmock",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/public/lib/fdio",
    "//zircon/system/fidl/fuchsia-debugdata",
    "//zircon/system/fidl/fuchsia-process",
  ]

  # TODO(46834): Fix the leaks and remove this.
  deps += [ "//build/config/sanitizers:suppress-lsan.DO-NOT-USE-THIS" ]
}

executable("coverage_component") {
  testonly = true

  sources = [ "coverage_component.cc" ]

  deps = [
    "//sdk/lib/fidl/cpp",
    "//sdk/lib/sys/cpp",
    "//zircon/public/lib/async-loop-cpp",
    "//zircon/public/lib/async-loop-default",
    "//zircon/system/fidl/fuchsia-debugdata",
  ]
}

rustc_binary("component_to_test_standard_out") {
  name = "component_to_test_standard_out"
  source_root = "./component_to_test_standard_out.rs"
  edition = "2018"

  deps = [
    "//src/lib/syslog/rust:syslog",
    "//third_party/rust_crates:log",
  ]
}

test_package("run_test_component_test") {
  deps = [
    ":bin",
    ":component_to_test_standard_out",
    ":coverage_component",
    "//src/diagnostics/archivist/tests/logs:logging_component",
  ]

  binaries = [
    {
      name = "coverage_component"
    },
    {
      name = "logging_component"
    },
    {
      name = "component_to_test_standard_out"
    },
  ]

  meta = [
    {
      path = rebase_path("meta/coverage_component.cmx")
      dest = "coverage_component.cmx"
    },
    {
      path = rebase_path(
              "//src/diagnostics/archivist/tests/meta/logging_component.cmx")
      dest = "logging_component.cmx"
    },
    {
      path = rebase_path("meta/component_to_test_standard_out.cmx")
      dest = "component_to_test_standard_out.cmx"
    },
  ]

  tests = [
    {
      name = "run_test_component_test"
      environments = basic_envs
    },
  ]
}
