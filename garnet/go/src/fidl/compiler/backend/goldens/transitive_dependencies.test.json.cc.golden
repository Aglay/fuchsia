// WARNING: This file is machine generated by fidlgen.

#include <transitive_dependencies.test.json.h>

#include "lib/fidl/cpp/internal/implementation.h"
namespace top {

extern "C" const fidl_type_t v1_top_BazTable;
const fidl_type_t* Baz::FidlType = &v1_top_BazTable;

void Baz::Encode(::fidl::Encoder* _encoder, size_t _offset) {
  ::fidl::Encode(_encoder, &g, _offset + 0);
}

void Baz::Decode(::fidl::Decoder* _decoder, Baz* value, size_t _offset) {
  ::fidl::Decode(_decoder, &value->g, _offset + 0);
}

zx_status_t Baz::Clone(Baz* _result) const {
  zx_status_t _status = ::fidl::Clone(g, &_result->g);
  if (_status != ZX_OK)
    return _status;
  return ZX_OK;
}
}  // namespace top

