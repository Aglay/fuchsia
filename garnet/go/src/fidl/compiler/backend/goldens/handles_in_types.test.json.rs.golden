// WARNING: This file is machine generated by fidlgen.

#![allow(
	deprecated, // FIDL Impl struct pattern is referenced internally
	unused_parens, // one-element-tuple-case is not a tuple
	unused_mut, // not all args require mutation, but many do
	nonstandard_style, // auto-caps does its best, but is not always successful
)]

#[allow(unused_imports)]
use fidl::{
    fidl_bits, fidl_empty_struct, fidl_enum, fidl_struct, fidl_struct_copy, fidl_table, fidl_xunion,
};
#[cfg(target_os = "fuchsia")]
#[allow(unused_imports)]
use fuchsia_zircon as zx;
#[allow(unused_imports)]
use fuchsia_zircon_status as zx_status;

fidl_enum! {
  ObjType(u32) {
    None = 0,
    Vmo = 3,
  }
}

fidl_xunion! {
    #[derive(Debug, PartialEq)]
    name: UnionWithHandle,
    members: [
        H {
            ty: fidl::Vmo,
            ordinal: 1,
        },
    ],
    unknown_member: __UnknownVariant,
}

#[derive(Debug, PartialEq)]

pub struct HandlesInTypes {
    pub normal_handle: fidl::Vmo,
    pub handle_in_vec: Vec<fidl::Vmo>,
    pub handle_in_array: [fidl::Vmo; 5],
    pub handle_in_mixed_vec_array: Vec<[fidl::Vmo; 5]>,
    pub table_with_handle: TableWithHandle,
    pub union_with_handle: UnionWithHandle,
}

fidl_struct! {
  name: HandlesInTypes,
  members: [
    normal_handle {
      ty: fidl::Vmo,
      offset_v1: 0,
    },
    handle_in_vec {
      ty: Vec<fidl::Vmo>,
      offset_v1: 8,
    },
    handle_in_array {
      ty: [fidl::Vmo; 5],
      offset_v1: 24,
    },
    handle_in_mixed_vec_array {
      ty: Vec<[fidl::Vmo; 5]>,
      offset_v1: 48,
    },
    table_with_handle {
      ty: TableWithHandle,
      offset_v1: 64,
    },
    union_with_handle {
      ty: UnionWithHandle,
      offset_v1: 80,
    },
  ],
  padding: [
  {
      ty: u64,
      offset: 0,
      mask: 0xffffffff00000000u64,
  },
  {
      ty: u64,
      offset: 40,
      mask: 0xffffffff00000000u64,
  },],
  size_v1: 104,
  align_v1: 8,
}

#[derive(Debug, PartialEq)]
pub struct TableWithHandle {
    pub h: Option<fidl::Vmo>,
}

fidl_table! {
  name: TableWithHandle,
  members: {
    h {
      ty: fidl::Vmo,
      ordinal: 1,
    },
  },
}
