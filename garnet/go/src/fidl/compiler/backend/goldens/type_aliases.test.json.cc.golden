// WARNING: This file is machine generated by fidlgen.

#include <type_aliases.test.json.h>

#include "lib/fidl/cpp/internal/implementation.h"
namespace example {

extern "C" const fidl_type_t v1_example_ExampleOfUseOfAliasesTable;
const fidl_type_t* ExampleOfUseOfAliases::FidlType = &v1_example_ExampleOfUseOfAliasesTable;

void ExampleOfUseOfAliases::Encode(::fidl::Encoder* _encoder, size_t _offset) {
  ::fidl::Encode(_encoder, &field_of_u32, _offset + 0);
  ::fidl::Encode(_encoder, &field_of_vec_at_most_five_of_string, _offset + 8);
  ::fidl::Encode(_encoder, &field_of_vec_at_most_five_of_uint32, _offset + 24);
  ::fidl::Encode(_encoder, &field_of_vec_of_strings, _offset + 40);
  ::fidl::Encode(_encoder, &field_of_vec_of_strings_at_most_nine, _offset + 56);
  ::fidl::Encode(_encoder, &field_of_vec_of_strings_at_most_5, _offset + 72);
  ::fidl::Encode(_encoder, &field_of_vec_at_most_5_of_reference_me, _offset + 88);
  ::fidl::Encode(_encoder, &field_of_channel, _offset + 104);
  ::fidl::Encode(_encoder, &field_of_client_end, _offset + 108);
  ::fidl::Encode(_encoder, &field_of_nullable_client_end, _offset + 112);
}

void ExampleOfUseOfAliases::Decode(::fidl::Decoder* _decoder, ExampleOfUseOfAliases* value, size_t _offset) {
  ::fidl::Decode(_decoder, &value->field_of_u32, _offset + 0);
  ::fidl::Decode(_decoder, &value->field_of_vec_at_most_five_of_string, _offset + 8);
  ::fidl::Decode(_decoder, &value->field_of_vec_at_most_five_of_uint32, _offset + 24);
  ::fidl::Decode(_decoder, &value->field_of_vec_of_strings, _offset + 40);
  ::fidl::Decode(_decoder, &value->field_of_vec_of_strings_at_most_nine, _offset + 56);
  ::fidl::Decode(_decoder, &value->field_of_vec_of_strings_at_most_5, _offset + 72);
  ::fidl::Decode(_decoder, &value->field_of_vec_at_most_5_of_reference_me, _offset + 88);
  ::fidl::Decode(_decoder, &value->field_of_channel, _offset + 104);
  ::fidl::Decode(_decoder, &value->field_of_client_end, _offset + 108);
  ::fidl::Decode(_decoder, &value->field_of_nullable_client_end, _offset + 112);
}

zx_status_t ExampleOfUseOfAliases::Clone(ExampleOfUseOfAliases* _result) const {
  zx_status_t _status = ::fidl::Clone(field_of_u32, &_result->field_of_u32);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_vec_at_most_five_of_string, &_result->field_of_vec_at_most_five_of_string);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_vec_at_most_five_of_uint32, &_result->field_of_vec_at_most_five_of_uint32);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_vec_of_strings, &_result->field_of_vec_of_strings);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_vec_of_strings_at_most_nine, &_result->field_of_vec_of_strings_at_most_nine);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_vec_of_strings_at_most_5, &_result->field_of_vec_of_strings_at_most_5);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_vec_at_most_5_of_reference_me, &_result->field_of_vec_at_most_5_of_reference_me);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_channel, &_result->field_of_channel);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_client_end, &_result->field_of_client_end);
  if (_status != ZX_OK)
    return _status;
  _status = ::fidl::Clone(field_of_nullable_client_end, &_result->field_of_nullable_client_end);
  if (_status != ZX_OK)
    return _status;
  return ZX_OK;
}
}  // namespace example

