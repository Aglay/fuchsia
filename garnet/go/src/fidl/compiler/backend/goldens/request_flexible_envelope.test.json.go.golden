// Code generated by fidlgen; DO NOT EDIT.

package json


import (
	_zx "syscall/zx"
	_bindings "syscall/zx/fidl"
)





type protocolRequestStrictResponseFlexibleRequest struct {
	_ struct{} `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	S StrictFoo`fidl:"0" fidl_offset_v1:"0"`
}

var _mprotocolRequestStrictResponseFlexibleRequest = _bindings.CreateLazyMarshaler(protocolRequestStrictResponseFlexibleRequest{})

func (msg *protocolRequestStrictResponseFlexibleRequest) Marshaler() _bindings.Marshaler {
	return _mprotocolRequestStrictResponseFlexibleRequest
}

type protocolRequestStrictResponseFlexibleResponse struct {
	_ struct{} `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	F FlexibleFoo`fidl:"0" fidl_offset_v1:"0"`
}

var _mprotocolRequestStrictResponseFlexibleResponse = _bindings.CreateLazyMarshaler(protocolRequestStrictResponseFlexibleResponse{})

func (msg *protocolRequestStrictResponseFlexibleResponse) Marshaler() _bindings.Marshaler {
	return _mprotocolRequestStrictResponseFlexibleResponse
}

type protocolRequestFlexibleResponseStrictRequest struct {
	_ struct{} `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	S FlexibleFoo`fidl:"0" fidl_offset_v1:"0"`
}

var _mprotocolRequestFlexibleResponseStrictRequest = _bindings.CreateLazyMarshaler(protocolRequestFlexibleResponseStrictRequest{})

func (msg *protocolRequestFlexibleResponseStrictRequest) Marshaler() _bindings.Marshaler {
	return _mprotocolRequestFlexibleResponseStrictRequest
}

type protocolRequestFlexibleResponseStrictResponse struct {
	_ struct{} `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	F StrictFoo`fidl:"0" fidl_offset_v1:"0"`
}

var _mprotocolRequestFlexibleResponseStrictResponse = _bindings.CreateLazyMarshaler(protocolRequestFlexibleResponseStrictResponse{})

func (msg *protocolRequestFlexibleResponseStrictResponse) Marshaler() _bindings.Marshaler {
	return _mprotocolRequestFlexibleResponseStrictResponse
}
type I_flexibleFooTag uint64
const (
	FlexibleFoo_unknownData = 0  // 0x00000000
	FlexibleFooS = 1 // 0x00000001
	FlexibleFooI = 2 // 0x00000002
)


type FlexibleFoo struct {
	I_flexibleFooTag `fidl:"x" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	I_unknownData []byte
	S string  `fidl:"1," fidl_hashed_ord:"1056421836" fidl_explicit_ord:"1"`
	I int32  `fidl:"2" fidl_hashed_ord:"1911600824" fidl_explicit_ord:"2"`
}

func (_m *FlexibleFoo) Which() I_flexibleFooTag {
	switch _m.I_flexibleFooTag {
	case 1:
		return FlexibleFooS
	case 2:
		return FlexibleFooI
	default:
		return FlexibleFoo_unknownData
	}
}

func (_m *FlexibleFoo) Ordinal() uint64 {
	return uint64(_m.I_flexibleFooTag)
}

func (_m *FlexibleFoo) SetS(s string) {
	_m.I_flexibleFooTag = FlexibleFooS
	_m.S = s
}

func FlexibleFooWithS(s string) FlexibleFoo {
	var _u FlexibleFoo
	_u.SetS(s)
	return _u
}

func (_m *FlexibleFoo) SetI(i int32) {
	_m.I_flexibleFooTag = FlexibleFooI
	_m.I = i
}

func FlexibleFooWithI(i int32) FlexibleFoo {
	var _u FlexibleFoo
	_u.SetI(i)
	return _u
}


type I_strictFooTag uint64
const (
	StrictFooS = 1 // 0x00000001
	StrictFooI = 2 // 0x00000002
)


type StrictFoo struct {
	I_strictFooTag `fidl:"x!" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	S string  `fidl:"1," fidl_hashed_ord:"215696753" fidl_explicit_ord:"1"`
	I int32  `fidl:"2" fidl_hashed_ord:"2063855467" fidl_explicit_ord:"2"`
}

func (_m *StrictFoo) Which() I_strictFooTag {
	return _m.I_strictFooTag
}

func (_m *StrictFoo) Ordinal() uint64 {
	return uint64(_m.I_strictFooTag)
}

func (_m *StrictFoo) SetS(s string) {
	_m.I_strictFooTag = StrictFooS
	_m.S = s
}

func StrictFooWithS(s string) StrictFoo {
	var _u StrictFoo
	_u.SetS(s)
	return _u
}

func (_m *StrictFoo) SetI(i int32) {
	_m.I_strictFooTag = StrictFooI
	_m.I = i
}

func StrictFooWithI(i int32) StrictFoo {
	var _u StrictFoo
	_u.SetI(i)
	return _u
}


const (
	ProtocolRequestStrictResponseFlexibleOrdinal uint64 = 0x1143e3c200000000
	ProtocolRequestStrictResponseFlexibleGenOrdinal uint64 = 0x72b1a46e5e2af282
	ProtocolRequestFlexibleResponseStrictOrdinal uint64 = 0x3136aeff00000000
	ProtocolRequestFlexibleResponseStrictGenOrdinal uint64 = 0x42a34ad5c4a1d952
)

type ProtocolInterface _bindings.ChannelProxy


func (p *ProtocolInterface) RequestStrictResponseFlexible(s StrictFoo) (FlexibleFoo, error) {
	req_ := &protocolRequestStrictResponseFlexibleRequest{
		S: s,
	}
	resp_ := &protocolRequestStrictResponseFlexibleResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(ProtocolRequestStrictResponseFlexibleGenOrdinal, req_, resp_, ProtocolRequestStrictResponseFlexibleOrdinal, ProtocolRequestStrictResponseFlexibleGenOrdinal)
	return resp_.F, err_
}

func (p *ProtocolInterface) RequestFlexibleResponseStrict(s FlexibleFoo) (StrictFoo, error) {
	req_ := &protocolRequestFlexibleResponseStrictRequest{
		S: s,
	}
	resp_ := &protocolRequestFlexibleResponseStrictResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(ProtocolRequestFlexibleResponseStrictGenOrdinal, req_, resp_, ProtocolRequestFlexibleResponseStrictOrdinal, ProtocolRequestFlexibleResponseStrictGenOrdinal)
	return resp_.F, err_
}


type ProtocolWithCtx interface {
	RequestStrictResponseFlexible(ctx_ _bindings.Context, s StrictFoo) (FlexibleFoo, error)
	RequestFlexibleResponseStrict(ctx_ _bindings.Context, s FlexibleFoo) (StrictFoo, error)
}



type ProtocolWithCtxTransitionalBase struct {}




type Protocol interface {
	RequestStrictResponseFlexible(s StrictFoo) (FlexibleFoo, error)
	RequestFlexibleResponseStrict(s FlexibleFoo) (StrictFoo, error)
}

type ProtocolTransitionalBase struct {}


type ProtocolInterfaceRequest _bindings.InterfaceRequest

func NewProtocolInterfaceRequest() (ProtocolInterfaceRequest, *ProtocolInterface, error) {
	req, cli, err := _bindings.NewInterfaceRequest()
	return ProtocolInterfaceRequest(req), (*ProtocolInterface)(cli), err
}

type ProtocolStub struct {
	Impl Protocol
}

func (s_ *ProtocolStub) DispatchImpl(ctx_ _bindings.Context, ordinal_ uint64, data_ []byte, handles_ []_zx.Handle) (_bindings.Message, bool, error) {
	return s_.DispatchImplWithCtx(ordinal_, ctx_.GetMarshalerContext(), data_, handles_)
}

func (s_ *ProtocolStub) DispatchImplWithCtx(ordinal_ uint64, ctx_ _bindings.MarshalerContext, data_ []byte, handles_ []_zx.Handle) (_bindings.Message, bool, error) {
	switch ordinal_ {
	case ProtocolRequestStrictResponseFlexibleOrdinal:
		fallthrough
	case ProtocolRequestStrictResponseFlexibleGenOrdinal:
		in_ := protocolRequestStrictResponseFlexibleRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext(ctx_, data_, handles_, &in_); err_ != nil {
			return nil, false, err_
		}
		f, err_ := s_.Impl.RequestStrictResponseFlexible(in_.S)
		out_ := protocolRequestStrictResponseFlexibleResponse{}
		out_.F = f
		return &out_, true, err_
	case ProtocolRequestFlexibleResponseStrictOrdinal:
		fallthrough
	case ProtocolRequestFlexibleResponseStrictGenOrdinal:
		in_ := protocolRequestFlexibleResponseStrictRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext(ctx_, data_, handles_, &in_); err_ != nil {
			return nil, false, err_
		}
		f, err_ := s_.Impl.RequestFlexibleResponseStrict(in_.S)
		out_ := protocolRequestFlexibleResponseStrictResponse{}
		out_.F = f
		return &out_, true, err_
	}
	return nil, false, _bindings.ErrUnknownOrdinal
}

func (s_ *ProtocolStub) Dispatch(args_ _bindings.DispatchArgs) (_bindings.Message, bool, error) {
	return s_.DispatchImplWithCtx2(args_.Ordinal, args_.Ctx.GetMarshalerContext(), args_.Bytes, args_.HandleInfos)
}

func (s_ *ProtocolStub) DispatchImplWithCtx2(ordinal_ uint64, ctx_ _bindings.MarshalerContext, data_ []byte, handleInfos_ []_zx.HandleInfo) (_bindings.Message, bool, error) {
	switch ordinal_ {
	case ProtocolRequestStrictResponseFlexibleOrdinal:
		fallthrough
	case ProtocolRequestStrictResponseFlexibleGenOrdinal:
		in_ := protocolRequestStrictResponseFlexibleRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext2(ctx_, data_, handleInfos_, &in_); err_ != nil {
			return nil, false, err_
		}
		f, err_ := s_.Impl.RequestStrictResponseFlexible(in_.S)
		out_ := protocolRequestStrictResponseFlexibleResponse{}
		out_.F = f
		return &out_, true, err_
	case ProtocolRequestFlexibleResponseStrictOrdinal:
		fallthrough
	case ProtocolRequestFlexibleResponseStrictGenOrdinal:
		in_ := protocolRequestFlexibleResponseStrictRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext2(ctx_, data_, handleInfos_, &in_); err_ != nil {
			return nil, false, err_
		}
		f, err_ := s_.Impl.RequestFlexibleResponseStrict(in_.S)
		out_ := protocolRequestFlexibleResponseStrictResponse{}
		out_.F = f
		return &out_, true, err_
	}
	return nil, false, _bindings.ErrUnknownOrdinal
}

type ProtocolWithCtxStub struct {
	Impl ProtocolWithCtx
}

func (s_ *ProtocolWithCtxStub) DispatchImpl(ctx_ _bindings.Context, ordinal_ uint64, data_ []byte, handles_ []_zx.Handle) (_bindings.Message, bool, error) {
	switch ordinal_ {
	case ProtocolRequestStrictResponseFlexibleOrdinal:
		fallthrough
	case ProtocolRequestStrictResponseFlexibleGenOrdinal:
		in_ := protocolRequestStrictResponseFlexibleRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext(ctx_.GetMarshalerContext(), data_, handles_, &in_); err_ != nil {
			return nil, false, err_
		}
		f, err_ := s_.Impl.RequestStrictResponseFlexible(ctx_, in_.S)
		out_ := protocolRequestStrictResponseFlexibleResponse{}
		out_.F = f
		return &out_, true, err_
	case ProtocolRequestFlexibleResponseStrictOrdinal:
		fallthrough
	case ProtocolRequestFlexibleResponseStrictGenOrdinal:
		in_ := protocolRequestFlexibleResponseStrictRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext(ctx_.GetMarshalerContext(), data_, handles_, &in_); err_ != nil {
			return nil, false, err_
		}
		f, err_ := s_.Impl.RequestFlexibleResponseStrict(ctx_, in_.S)
		out_ := protocolRequestFlexibleResponseStrictResponse{}
		out_.F = f
		return &out_, true, err_
	}
	return nil, false, _bindings.ErrUnknownOrdinal
}

func (s_ *ProtocolWithCtxStub) Dispatch(args_ _bindings.DispatchArgs) (_bindings.Message, bool, error) {
	switch args_.Ordinal {
	case ProtocolRequestStrictResponseFlexibleOrdinal:
		fallthrough
	case ProtocolRequestStrictResponseFlexibleGenOrdinal:
		in_ := protocolRequestStrictResponseFlexibleRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext2(args_.Ctx.GetMarshalerContext(), args_.Bytes, args_.HandleInfos, &in_); err_ != nil {
			return nil, false, err_
		}
		f, err_ := s_.Impl.RequestStrictResponseFlexible(args_.Ctx, in_.S)
		out_ := protocolRequestStrictResponseFlexibleResponse{}
		out_.F = f
		return &out_, true, err_
	case ProtocolRequestFlexibleResponseStrictOrdinal:
		fallthrough
	case ProtocolRequestFlexibleResponseStrictGenOrdinal:
		in_ := protocolRequestFlexibleResponseStrictRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext2(args_.Ctx.GetMarshalerContext(), args_.Bytes, args_.HandleInfos, &in_); err_ != nil {
			return nil, false, err_
		}
		f, err_ := s_.Impl.RequestFlexibleResponseStrict(args_.Ctx, in_.S)
		out_ := protocolRequestFlexibleResponseStrictResponse{}
		out_.F = f
		return &out_, true, err_
	}
	return nil, false, _bindings.ErrUnknownOrdinal
}
type ProtocolService struct {
	_bindings.BindingSet
}

func (s *ProtocolService) Add(impl Protocol, c _zx.Channel, onError func(error)) (_bindings.BindingKey, error) {
	return s.BindingSet.Add(&ProtocolStub{Impl: impl}, c, onError)
}

func (s *ProtocolService) AddWithCtx(impl ProtocolWithCtx, c _zx.Channel, onError func(error)) (_bindings.BindingKey, error) {
	return s.BindingSet.Add(&ProtocolWithCtxStub{Impl: impl}, c, onError)
}

func (s *ProtocolService) EventProxyFor(key _bindings.BindingKey) (*ProtocolEventProxy, bool) {
	pxy, err := s.BindingSet.ProxyFor(key)
	return (*ProtocolEventProxy)(pxy), err
}

type ProtocolEventProxy _bindings.ChannelProxy



