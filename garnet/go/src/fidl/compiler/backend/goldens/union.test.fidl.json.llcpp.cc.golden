// WARNING: This file is machine generated by fidlgen.

#include <union.test.fidl.json.llcpp.h>
#include <memory>

namespace llcpp {

namespace test {
namespace name {

void ::llcpp::test::name::Union::SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(Union) == sizeof(fidl_xunion_t));
  static_assert(offsetof(Union, ordinal_) == offsetof(fidl_xunion_t, tag));
  static_assert(offsetof(Union, envelope_) == offsetof(fidl_xunion_t, envelope));
}

void ::llcpp::test::name::ReverseOrdinalUnion::SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(ReverseOrdinalUnion) == sizeof(fidl_xunion_t));
  static_assert(offsetof(ReverseOrdinalUnion, ordinal_) == offsetof(fidl_xunion_t, tag));
  static_assert(offsetof(ReverseOrdinalUnion, envelope_) == offsetof(fidl_xunion_t, envelope));
}

void ::llcpp::test::name::FieldCollision::SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(FieldCollision) == sizeof(fidl_xunion_t));
  static_assert(offsetof(FieldCollision, ordinal_) == offsetof(fidl_xunion_t, tag));
  static_assert(offsetof(FieldCollision, envelope_) == offsetof(fidl_xunion_t, envelope));
}

void ::llcpp::test::name::ExplicitUnion::SizeAndOffsetAssertionHelper() {
  static_assert(sizeof(ExplicitUnion) == sizeof(fidl_xunion_t));
  static_assert(offsetof(ExplicitUnion, ordinal_) == offsetof(fidl_xunion_t, tag));
  static_assert(offsetof(ExplicitUnion, envelope_) == offsetof(fidl_xunion_t, envelope));
}

}  // namespace name
}  // namespace test
}  // namespace llcpp
