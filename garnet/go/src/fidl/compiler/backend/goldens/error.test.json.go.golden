// Code generated by fidlgen; DO NOT EDIT.

package json


import (
	_zx "syscall/zx"
	_bindings "syscall/zx/fidl"
)





type ExampleFooResponse struct {
	_ struct{} `fidl:"s" fidl_size_v1:"8" fidl_alignment_v1:"8"`
	Y int64`fidl:"0" fidl_offset_v1:"0"`
}

var _mExampleFooResponse = _bindings.CreateLazyMarshaler(ExampleFooResponse{})

func (msg *ExampleFooResponse) Marshaler() _bindings.Marshaler {
	return _mExampleFooResponse
}

type exampleFooRequest struct {
	_ struct{} `fidl:"s" fidl_size_v1:"16" fidl_alignment_v1:"8"`
	S string`fidl:"0," fidl_offset_v1:"0"`
}

var _mexampleFooRequest = _bindings.CreateLazyMarshaler(exampleFooRequest{})

func (msg *exampleFooRequest) Marshaler() _bindings.Marshaler {
	return _mexampleFooRequest
}

type exampleWithCtxFooRequest struct {
	_ struct{} `fidl:"s" fidl_size_v1:"16" fidl_alignment_v1:"8"`
	S string`fidl:"0," fidl_offset_v1:"0"`
}

var _mexampleWithCtxFooRequest = _bindings.CreateLazyMarshaler(exampleWithCtxFooRequest{})

func (msg *exampleWithCtxFooRequest) Marshaler() _bindings.Marshaler {
	return _mexampleWithCtxFooRequest
}

type exampleFooResponse struct {
	_ struct{} `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	Result ExampleFooResult`fidl:"0" fidl_offset_v1:"0"`
}

var _mexampleFooResponse = _bindings.CreateLazyMarshaler(exampleFooResponse{})

func (msg *exampleFooResponse) Marshaler() _bindings.Marshaler {
	return _mexampleFooResponse
}

type exampleWithCtxFooResponse struct {
	_ struct{} `fidl:"s" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	Result ExampleFooResult`fidl:"0" fidl_offset_v1:"0"`
}

var _mexampleWithCtxFooResponse = _bindings.CreateLazyMarshaler(exampleWithCtxFooResponse{})

func (msg *exampleWithCtxFooResponse) Marshaler() _bindings.Marshaler {
	return _mexampleWithCtxFooResponse
}
type I_exampleFooResultTag uint64
const (
	ExampleFooResultResponse = 1 // 0x00000001
	ExampleFooResultErr = 2 // 0x00000002
)


type ExampleFooResult struct {
	I_exampleFooResultTag `fidl:"x!" fidl_size_v1:"24" fidl_alignment_v1:"8"`
	Response ExampleFooResponse  `fidl:"1"`
	Err uint32  `fidl:"2"`
}

func (_m *ExampleFooResult) Which() I_exampleFooResultTag {
	return _m.I_exampleFooResultTag
}

func (_m *ExampleFooResult) Ordinal() uint64 {
	return uint64(_m.I_exampleFooResultTag)
}

func (_m *ExampleFooResult) SetResponse(response ExampleFooResponse) {
	_m.I_exampleFooResultTag = ExampleFooResultResponse
	_m.Response = response
}

func ExampleFooResultWithResponse(response ExampleFooResponse) ExampleFooResult {
	var _u ExampleFooResult
	_u.SetResponse(response)
	return _u
}

func (_m *ExampleFooResult) SetErr(err uint32) {
	_m.I_exampleFooResultTag = ExampleFooResultErr
	_m.Err = err
}

func ExampleFooResultWithErr(err uint32) ExampleFooResult {
	var _u ExampleFooResult
	_u.SetErr(err)
	return _u
}


const (
	ExampleFooOrdinal uint64 = 0x51a3dcd800000000
	ExampleFooGenOrdinal uint64 = 0xbaf4e613e45f29b
)

type ExampleWithCtxInterface _bindings.ChannelProxy


func (p *ExampleWithCtxInterface) Foo(ctx_ _bindings.Context, s string) (ExampleFooResult, error) {
	req_ := &exampleWithCtxFooRequest{
		S: s,
	}
	resp_ := &exampleWithCtxFooResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(ExampleFooGenOrdinal, req_, resp_, ExampleFooOrdinal, ExampleFooGenOrdinal)
	return resp_.Result, err_
}

type ExampleInterface _bindings.ChannelProxy


func (p *ExampleInterface) Foo(s string) (ExampleFooResult, error) {
	req_ := &exampleFooRequest{
		S: s,
	}
	resp_ := &exampleFooResponse{}
	err_ := ((*_bindings.ChannelProxy)(p)).Call(ExampleFooGenOrdinal, req_, resp_, ExampleFooOrdinal, ExampleFooGenOrdinal)
	return resp_.Result, err_
}


type ExampleWithCtx interface {
	Foo(ctx_ _bindings.Context, s string) (ExampleFooResult, error)
}



type ExampleWithCtxTransitionalBase struct {}




type Example interface {
	Foo(s string) (ExampleFooResult, error)
}

type ExampleTransitionalBase struct {}


type ExampleWithCtxInterfaceRequest _bindings.InterfaceRequest

func NewExampleWithCtxInterfaceRequest() (ExampleWithCtxInterfaceRequest, *ExampleWithCtxInterface, error) {
	req, cli, err := _bindings.NewInterfaceRequest()
	return ExampleWithCtxInterfaceRequest(req), (*ExampleWithCtxInterface)(cli), err
}

type ExampleInterfaceRequest _bindings.InterfaceRequest

func NewExampleInterfaceRequest() (ExampleInterfaceRequest, *ExampleInterface, error) {
	req, cli, err := _bindings.NewInterfaceRequest()
	return ExampleInterfaceRequest(req), (*ExampleInterface)(cli), err
}

type ExampleStub struct {
	Impl Example
}

func (s_ *ExampleStub) Dispatch(args_ _bindings.DispatchArgs) (_bindings.Message, bool, error) {
	ctx, ok := _bindings.GetMarshalerContext(args_.Ctx)
	if !ok {
		return nil, false, _bindings.ErrMissingMarshalerContext
	}
	return s_.DispatchImplWithCtx2(args_.Ordinal, ctx, args_.Bytes, args_.HandleInfos)
}

func (s_ *ExampleStub) DispatchImplWithCtx2(ordinal_ uint64, ctx_ _bindings.MarshalerContext, data_ []byte, handleInfos_ []_zx.HandleInfo) (_bindings.Message, bool, error) {
	switch ordinal_ {
	case ExampleFooOrdinal:
		fallthrough
	case ExampleFooGenOrdinal:
		in_ := exampleFooRequest{}
		if _, _, err_ := _bindings.UnmarshalWithContext2(ctx_, data_, handleInfos_, &in_); err_ != nil {
			return nil, false, err_
		}
		result, err_ := s_.Impl.Foo(in_.S)
		out_ := exampleFooResponse{}
		out_.Result = result
		return &out_, true, err_
	}
	return nil, false, _bindings.ErrUnknownOrdinal
}

type ExampleWithCtxStub struct {
	Impl ExampleWithCtx
}

func (s_ *ExampleWithCtxStub) Dispatch(args_ _bindings.DispatchArgs) (_bindings.Message, bool, error) {
	switch args_.Ordinal {
	case ExampleFooOrdinal:
		fallthrough
	case ExampleFooGenOrdinal:
		in_ := exampleWithCtxFooRequest{}
		marshalerCtx, ok := _bindings.GetMarshalerContext(args_.Ctx)
		if !ok {
			return nil, false, _bindings.ErrMissingMarshalerContext
		}
		if _, _, err_ := _bindings.UnmarshalWithContext2(marshalerCtx, args_.Bytes, args_.HandleInfos, &in_); err_ != nil {
			return nil, false, err_
		}
		result, err_ := s_.Impl.Foo(args_.Ctx, in_.S)
		out_ := exampleWithCtxFooResponse{}
		out_.Result = result
		return &out_, true, err_
	}
	return nil, false, _bindings.ErrUnknownOrdinal
}
type ExampleService struct {
	_bindings.BindingSet
}

func (s *ExampleService) Add(impl Example, c _zx.Channel, onError func(error)) (_bindings.BindingKey, error) {
	return s.BindingSet.Add(&ExampleStub{Impl: impl}, c, onError)
}

func (s *ExampleService) AddWithCtx(impl ExampleWithCtx, c _zx.Channel, onError func(error)) (_bindings.BindingKey, error) {
	return s.BindingSet.Add(&ExampleWithCtxStub{Impl: impl}, c, onError)
}

func (s *ExampleService) EventProxyFor(key _bindings.BindingKey) (*ExampleEventProxy, bool) {
	pxy, err := s.BindingSet.ProxyFor(key)
	return (*ExampleEventProxy)(pxy), err
}

type ExampleEventProxy _bindings.ChannelProxy



