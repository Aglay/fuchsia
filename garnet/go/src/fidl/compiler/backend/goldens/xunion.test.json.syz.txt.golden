# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

include <fidl/test/json/c/fidl.h>
fidl_test_json_EmptyInLine {
       padding int8
} [packed]
fidl_test_json_EmptyOutOfLine {
       void void
} [packed]
fidl_test_json_EmptyHandles {
       void void
} [packed]
fidl_test_json_StructWithNullableXUnionInLine {
        
} [packed]
fidl_test_json_StructWithNullableXUnionOutOfLine {
       void void
} [packed]
fidl_test_json_StructWithNullableXUnionHandles {
       void void
} [packed]


fidl_test_json_TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedRequest {
       hdr fidl_message_header[7548006651618394112]
} [packed]
fidl_test_json_TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedRequestHandles {
       void void
} [packed]
fidl_test_json_TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedResponse {
       hdr fidl_message_header[7548006651618394112]
        
} [packed]
fidl_test_json_TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedResponseHandles {
       void void
} [packed]
fidl_test_json_TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedRequest {
       hdr fidl_message_header[1688296084360658944]
} [packed]
fidl_test_json_TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedRequestHandles {
       void void
} [packed]
fidl_test_json_TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedResponse {
       hdr fidl_message_header[1688296084360658944]
        
} [packed]
fidl_test_json_TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedResponseHandles {
       void void
} [packed]

resource zx_chan_fidl_test_json_TestProtocol_client[zx_chan]
resource zx_chan_fidl_test_json_TestProtocol_server[zx_chan]

zx_channel_create$fidl_test_json_TestProtocol(options const[0], out0 ptr[out, zx_chan_fidl_test_json_TestProtocol_client], out1 ptr[out, zx_chan_fidl_test_json_TestProtocol_server])
fdio_service_connect$fidl_test_json_TestProtocol(path ptr[in, string["/svc/"]], handle zx_chan_fidl_test_json_TestProtocol_server)
zx_channel_call$fidl_test_json_TestProtocolStrictXUnionHenceResponseMayBeStackAllocated(handle zx_chan_fidl_test_json_TestProtocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fidl_test_json_TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedRequest, fidl_test_json_TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fidl_test_json_TestProtocolStrictXUnionHenceResponseMayBeStackAllocatedResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fidl_test_json_TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocated(handle zx_chan_fidl_test_json_TestProtocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fidl_test_json_TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedRequest, fidl_test_json_TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fidl_test_json_TestProtocolFlexibleXUnionHenceResponseMustBeHeapAllocatedResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

