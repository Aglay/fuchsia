// Code generated by fidlgen; DO NOT EDIT.

package name


import (
	_bindings "syscall/zx/fidl"
)





type NullableUnionStruct struct {
	_ struct{} `fidl:"s,8,8" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v1_no_ee:"24" fidl_alignment_v1_no_ee:"8"`
	TheUnion *Union`fidl:"0" fidl_offset_v1:"0" fidl_offset_v1_no_ee:"0"`
}

var _mNullableUnionStruct = _bindings.CreateLazyMarshaler(NullableUnionStruct{})

func (msg *NullableUnionStruct) Marshaler() _bindings.Marshaler {
	return _mNullableUnionStruct
}
type I_unionTag uint32
const (
	_ I_unionTag = iota
	UnionPrimitive
	UnionStringNeedsConstructor
	UnionVectorStringAlsoNeedsConstructor
)


type Union struct {
	I_unionTag `fidl:"u,24,8" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v1_no_ee:"24" fidl_alignment_v1_no_ee:"8"`
	Primitive int32  `fidl:"1"`
	StringNeedsConstructor string  `fidl:"2,"`
	VectorStringAlsoNeedsConstructor []string  `fidl:"3,,"`
}

func (u *Union) Which() I_unionTag {
	return u.I_unionTag
}

func (u *Union) SetPrimitive(primitive int32) {
	u.I_unionTag = UnionPrimitive
	u.Primitive = primitive
}

func UnionWithPrimitive(primitive int32) Union {
	var _u Union
	_u.SetPrimitive(primitive)
	return _u
}

func (u *Union) SetStringNeedsConstructor(stringNeedsConstructor string) {
	u.I_unionTag = UnionStringNeedsConstructor
	u.StringNeedsConstructor = stringNeedsConstructor
}

func UnionWithStringNeedsConstructor(stringNeedsConstructor string) Union {
	var _u Union
	_u.SetStringNeedsConstructor(stringNeedsConstructor)
	return _u
}

func (u *Union) SetVectorStringAlsoNeedsConstructor(vectorStringAlsoNeedsConstructor []string) {
	u.I_unionTag = UnionVectorStringAlsoNeedsConstructor
	u.VectorStringAlsoNeedsConstructor = vectorStringAlsoNeedsConstructor
}

func UnionWithVectorStringAlsoNeedsConstructor(vectorStringAlsoNeedsConstructor []string) Union {
	var _u Union
	_u.SetVectorStringAlsoNeedsConstructor(vectorStringAlsoNeedsConstructor)
	return _u
}
type I_fieldCollisionTag uint32
const (
	_ I_fieldCollisionTag = iota
	FieldCollisionFieldCollisionTag
)


type FieldCollision struct {
	I_fieldCollisionTag `fidl:"u,8,4" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v1_no_ee:"24" fidl_alignment_v1_no_ee:"8"`
	FieldCollisionTag int32  `fidl:"1"`
}

func (u *FieldCollision) Which() I_fieldCollisionTag {
	return u.I_fieldCollisionTag
}

func (u *FieldCollision) SetFieldCollisionTag(fieldCollisionTag int32) {
	u.I_fieldCollisionTag = FieldCollisionFieldCollisionTag
	u.FieldCollisionTag = fieldCollisionTag
}

func FieldCollisionWithFieldCollisionTag(fieldCollisionTag int32) FieldCollision {
	var _u FieldCollision
	_u.SetFieldCollisionTag(fieldCollisionTag)
	return _u
}
type I_explicitUnionTag uint32
const (
	_ I_explicitUnionTag = iota
	ExplicitUnionPrimitive
	ExplicitUnionStringNeedsConstructor
)


type ExplicitUnion struct {
	I_explicitUnionTag `fidl:"u,24,8" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v1_no_ee:"24" fidl_alignment_v1_no_ee:"8"`
	Primitive int32  `fidl:"1"`
	StringNeedsConstructor string  `fidl:"3,"`
}

func (u *ExplicitUnion) Which() I_explicitUnionTag {
	return u.I_explicitUnionTag
}

func (u *ExplicitUnion) SetPrimitive(primitive int32) {
	u.I_explicitUnionTag = ExplicitUnionPrimitive
	u.Primitive = primitive
}

func ExplicitUnionWithPrimitive(primitive int32) ExplicitUnion {
	var _u ExplicitUnion
	_u.SetPrimitive(primitive)
	return _u
}

func (u *ExplicitUnion) SetStringNeedsConstructor(stringNeedsConstructor string) {
	u.I_explicitUnionTag = ExplicitUnionStringNeedsConstructor
	u.StringNeedsConstructor = stringNeedsConstructor
}

func ExplicitUnionWithStringNeedsConstructor(stringNeedsConstructor string) ExplicitUnion {
	var _u ExplicitUnion
	_u.SetStringNeedsConstructor(stringNeedsConstructor)
	return _u
}
type I_reverseOrdinalUnionTag uint32
const (
	_ I_reverseOrdinalUnionTag = iota
	ReverseOrdinalUnionFirst
	ReverseOrdinalUnionSecond
)


type ReverseOrdinalUnion struct {
	I_reverseOrdinalUnionTag `fidl:"u,8,4" fidl_size_v1:"24" fidl_alignment_v1:"8" fidl_size_v1_no_ee:"24" fidl_alignment_v1_no_ee:"8"`
	First uint32  `fidl:"1"`
	Second uint32  `fidl:"2"`
}

func (u *ReverseOrdinalUnion) Which() I_reverseOrdinalUnionTag {
	return u.I_reverseOrdinalUnionTag
}

func (u *ReverseOrdinalUnion) SetFirst(first uint32) {
	u.I_reverseOrdinalUnionTag = ReverseOrdinalUnionFirst
	u.First = first
}

func ReverseOrdinalUnionWithFirst(first uint32) ReverseOrdinalUnion {
	var _u ReverseOrdinalUnion
	_u.SetFirst(first)
	return _u
}

func (u *ReverseOrdinalUnion) SetSecond(second uint32) {
	u.I_reverseOrdinalUnionTag = ReverseOrdinalUnionSecond
	u.Second = second
}

func ReverseOrdinalUnionWithSecond(second uint32) ReverseOrdinalUnion {
	var _u ReverseOrdinalUnion
	_u.SetSecond(second)
	return _u
}
