// Code generated by fidlgen; DO NOT EDIT.

package name





type UnionTag uint32
const (
	_ UnionTag = iota
	UnionPrimitive
	UnionStringNeedsConstructor
	UnionVectorStringAlsoNeedsConstructor
)


type Union struct {
	UnionTag `fidl:"tag" fidl2:"u,24,8"`
	Primitive int32 
	StringNeedsConstructor string 
	VectorStringAlsoNeedsConstructor []string 
}

func (u *Union) Which() UnionTag {
	return u.UnionTag
}

func (u *Union) SetPrimitive(primitive int32) {
	u.UnionTag = UnionPrimitive
	u.Primitive = primitive
}

func UnionWithPrimitive(primitive int32) Union {
	var _u Union
	_u.SetPrimitive(primitive)
	return _u
}

func (u *Union) SetStringNeedsConstructor(stringNeedsConstructor string) {
	u.UnionTag = UnionStringNeedsConstructor
	u.StringNeedsConstructor = stringNeedsConstructor
}

func UnionWithStringNeedsConstructor(stringNeedsConstructor string) Union {
	var _u Union
	_u.SetStringNeedsConstructor(stringNeedsConstructor)
	return _u
}

func (u *Union) SetVectorStringAlsoNeedsConstructor(vectorStringAlsoNeedsConstructor []string) {
	u.UnionTag = UnionVectorStringAlsoNeedsConstructor
	u.VectorStringAlsoNeedsConstructor = vectorStringAlsoNeedsConstructor
}

func UnionWithVectorStringAlsoNeedsConstructor(vectorStringAlsoNeedsConstructor []string) Union {
	var _u Union
	_u.SetVectorStringAlsoNeedsConstructor(vectorStringAlsoNeedsConstructor)
	return _u
}
