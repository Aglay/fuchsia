# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

include <fidl/test/json/c/fidl.h>
fidl_test_json_FlexibleFooInLine [
       sInLine fidl_union_member[1, fidl_string]
       i fidl_union_member[2, int32]
]
fidl_test_json_FlexibleFooOutOfLine [
       sOutOfLine fidl_aligned[stringnoz]
][varlen]
fidl_test_json_FlexibleFooHandles [
       void void
][varlen]
fidl_test_json_StrictFooInLine [
       sInLine fidl_union_member[1, fidl_string]
       i fidl_union_member[2, int32]
]
fidl_test_json_StrictFooOutOfLine [
       sOutOfLine fidl_aligned[stringnoz]
][varlen]
fidl_test_json_StrictFooHandles [
       void void
][varlen]


fidl_test_json_ProtocolRequestStrictResponseFlexibleRequest {
       hdr fidl_message_header[8264567585134801538]
       sInLine fidl_test_json_StrictFooInLine
       sOutOfLine fidl_test_json_StrictFooOutOfLine
} [packed]
fidl_test_json_ProtocolRequestStrictResponseFlexibleRequestHandles {
       void void
} [packed]
fidl_test_json_ProtocolRequestStrictResponseFlexibleResponse {
       hdr fidl_message_header[8264567585134801538]
       fInLine fidl_test_json_FlexibleFooInLine
       fOutOfLine fidl_test_json_FlexibleFooOutOfLine
} [packed]
fidl_test_json_ProtocolRequestStrictResponseFlexibleResponseHandles {
       void void
} [packed]
fidl_test_json_ProtocolRequestFlexibleResponseStrictRequest {
       hdr fidl_message_header[4801763909694511442]
       sInLine fidl_test_json_FlexibleFooInLine
       sOutOfLine fidl_test_json_FlexibleFooOutOfLine
} [packed]
fidl_test_json_ProtocolRequestFlexibleResponseStrictRequestHandles {
       void void
} [packed]
fidl_test_json_ProtocolRequestFlexibleResponseStrictResponse {
       hdr fidl_message_header[4801763909694511442]
       fInLine fidl_test_json_StrictFooInLine
       fOutOfLine fidl_test_json_StrictFooOutOfLine
} [packed]
fidl_test_json_ProtocolRequestFlexibleResponseStrictResponseHandles {
       void void
} [packed]

resource zx_chan_fidl_test_json_Protocol_client[zx_chan]
resource zx_chan_fidl_test_json_Protocol_server[zx_chan]

zx_channel_create$fidl_test_json_Protocol(options const[0], out0 ptr[out, zx_chan_fidl_test_json_Protocol_client], out1 ptr[out, zx_chan_fidl_test_json_Protocol_server])
fdio_service_connect$fidl_test_json_Protocol(path ptr[in, string["/svc/"]], handle zx_chan_fidl_test_json_Protocol_server)
zx_channel_call$fidl_test_json_ProtocolRequestStrictResponseFlexible(handle zx_chan_fidl_test_json_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fidl_test_json_ProtocolRequestStrictResponseFlexibleRequest, fidl_test_json_ProtocolRequestStrictResponseFlexibleRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fidl_test_json_ProtocolRequestStrictResponseFlexibleResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])
zx_channel_call$fidl_test_json_ProtocolRequestFlexibleResponseStrict(handle zx_chan_fidl_test_json_Protocol_client, options const[0], deadline zx_time, args ptr[in, fidl_call_args[fidl_test_json_ProtocolRequestFlexibleResponseStrictRequest, fidl_test_json_ProtocolRequestFlexibleResponseStrictRequestHandles, array[int8, ZX_CHANNEL_MAX_MSG_BYTES], fidl_test_json_ProtocolRequestFlexibleResponseStrictResponseHandles]], actual_bytes ptr[out, int32], actual_handles ptr[out, int32])

