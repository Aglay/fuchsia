// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>

// Forward declarations for old <-> V1 mappings


// Coding tables for old wire format.

extern const fidl_type_t test_name_SimpleTableTable;
extern const fidl_type_t test_name_ReverseOrdinalTableTable;
extern const fidl_type_t test_name_OlderSimpleTableTable;
extern const fidl_type_t test_name_NewerSimpleTableTable;
extern const fidl_type_t test_name_EmptyTableTable;



static const struct FidlTableField Fields21test_name_SimpleTable[] = {
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=1u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=5u}
};
const fidl_type_t test_name_SimpleTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields21test_name_SimpleTable, .field_count=2u, .name="test.name/SimpleTable"}}};

static const struct FidlTableField Fields29test_name_ReverseOrdinalTable[] = {
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=1u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=2u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=3u}
};
const fidl_type_t test_name_ReverseOrdinalTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields29test_name_ReverseOrdinalTable, .field_count=3u, .name="test.name/ReverseOrdinalTable"}}};

static const struct FidlTableField Fields26test_name_OlderSimpleTable[] = {
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=1u}
};
const fidl_type_t test_name_OlderSimpleTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields26test_name_OlderSimpleTable, .field_count=1u, .name="test.name/OlderSimpleTable"}}};

static const struct FidlTableField Fields26test_name_NewerSimpleTable[] = {
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=1u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=5u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=6u}
};
const fidl_type_t test_name_NewerSimpleTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields26test_name_NewerSimpleTable, .field_count=3u, .name="test.name/NewerSimpleTable"}}};

static const struct FidlTableField Fields20test_name_EmptyTable[] = {};
const fidl_type_t test_name_EmptyTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields20test_name_EmptyTable, .field_count=0u, .name="test.name/EmptyTable"}}};

// Coding tables for v1 wire format.

extern const fidl_type_t v1_test_name_SimpleTableTable;
extern const fidl_type_t v1_test_name_ReverseOrdinalTableTable;
extern const fidl_type_t v1_test_name_OlderSimpleTableTable;
extern const fidl_type_t v1_test_name_NewerSimpleTableTable;
extern const fidl_type_t v1_test_name_EmptyTableTable;



static const struct FidlTableField Fields24v1_test_name_SimpleTable[] = {
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=1u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=5u}
};
const fidl_type_t v1_test_name_SimpleTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields24v1_test_name_SimpleTable, .field_count=2u, .name="test.name/SimpleTable"}}};

static const struct FidlTableField Fields32v1_test_name_ReverseOrdinalTable[] = {
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=1u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=2u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=3u}
};
const fidl_type_t v1_test_name_ReverseOrdinalTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields32v1_test_name_ReverseOrdinalTable, .field_count=3u, .name="test.name/ReverseOrdinalTable"}}};

static const struct FidlTableField Fields29v1_test_name_OlderSimpleTable[] = {
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=1u}
};
const fidl_type_t v1_test_name_OlderSimpleTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields29v1_test_name_OlderSimpleTable, .field_count=1u, .name="test.name/OlderSimpleTable"}}};

static const struct FidlTableField Fields29v1_test_name_NewerSimpleTable[] = {
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=1u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=5u},
    /*FidlTableField*/{.type=&fidl_internal_kInt64Table, .ordinal=6u}
};
const fidl_type_t v1_test_name_NewerSimpleTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields29v1_test_name_NewerSimpleTable, .field_count=3u, .name="test.name/NewerSimpleTable"}}};

static const struct FidlTableField Fields23v1_test_name_EmptyTable[] = {};
const fidl_type_t v1_test_name_EmptyTableTable = {.type_tag=kFidlTypeTable, {.coded_table={.fields=Fields23v1_test_name_EmptyTable, .field_count=0u, .name="test.name/EmptyTable"}}};

