// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>

extern "C" {

// Coding tables for old wire format.

extern const fidl_type_t test_name_SimpleTableTable;
extern const fidl_type_t test_name_ReverseOrdinalTableTable;
extern const fidl_type_t test_name_OlderSimpleTableTable;
extern const fidl_type_t test_name_NewerSimpleTableTable;
extern const fidl_type_t test_name_EmptyTableTable;



static const ::fidl::FidlTableField Fields21test_name_SimpleTable[] = {
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,1u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,5u)
};
const fidl_type_t test_name_SimpleTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields21test_name_SimpleTable, 2u, "test.name/SimpleTable"));

static const ::fidl::FidlTableField Fields29test_name_ReverseOrdinalTable[] = {
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,1u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,2u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,3u)
};
const fidl_type_t test_name_ReverseOrdinalTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields29test_name_ReverseOrdinalTable, 3u, "test.name/ReverseOrdinalTable"));

static const ::fidl::FidlTableField Fields26test_name_OlderSimpleTable[] = {
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,1u)
};
const fidl_type_t test_name_OlderSimpleTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields26test_name_OlderSimpleTable, 1u, "test.name/OlderSimpleTable"));

static const ::fidl::FidlTableField Fields26test_name_NewerSimpleTable[] = {
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,1u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,5u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,6u)
};
const fidl_type_t test_name_NewerSimpleTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields26test_name_NewerSimpleTable, 3u, "test.name/NewerSimpleTable"));

static const ::fidl::FidlTableField Fields20test_name_EmptyTable[] = {};
const fidl_type_t test_name_EmptyTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields20test_name_EmptyTable, 0u, "test.name/EmptyTable"));

// Coding tables for v1 wire format.

extern const fidl_type_t v1_test_name_SimpleTableTable;
extern const fidl_type_t v1_test_name_ReverseOrdinalTableTable;
extern const fidl_type_t v1_test_name_OlderSimpleTableTable;
extern const fidl_type_t v1_test_name_NewerSimpleTableTable;
extern const fidl_type_t v1_test_name_EmptyTableTable;



static const ::fidl::FidlTableField Fields24v1_test_name_SimpleTable[] = {
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,1u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,5u)
};
const fidl_type_t v1_test_name_SimpleTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields24v1_test_name_SimpleTable, 2u, "test.name/SimpleTable"));

static const ::fidl::FidlTableField Fields32v1_test_name_ReverseOrdinalTable[] = {
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,1u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,2u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,3u)
};
const fidl_type_t v1_test_name_ReverseOrdinalTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields32v1_test_name_ReverseOrdinalTable, 3u, "test.name/ReverseOrdinalTable"));

static const ::fidl::FidlTableField Fields29v1_test_name_OlderSimpleTable[] = {
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,1u)
};
const fidl_type_t v1_test_name_OlderSimpleTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields29v1_test_name_OlderSimpleTable, 1u, "test.name/OlderSimpleTable"));

static const ::fidl::FidlTableField Fields29v1_test_name_NewerSimpleTable[] = {
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,1u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,5u),
    ::fidl::FidlTableField(&::fidl::internal::kInt64Table,6u)
};
const fidl_type_t v1_test_name_NewerSimpleTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields29v1_test_name_NewerSimpleTable, 3u, "test.name/NewerSimpleTable"));

static const ::fidl::FidlTableField Fields23v1_test_name_EmptyTable[] = {};
const fidl_type_t v1_test_name_EmptyTableTable = fidl_type_t(::fidl::FidlCodedTable(Fields23v1_test_name_EmptyTable, 0u, "test.name/EmptyTable"));

// Old <-> V1 map.

} // extern "C"
