// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>

// Forward declarations for old <-> V1 mappings

static const fidl_type_t Vector4294967295nonnullable27String4294967295nonnullableTable;
extern const fidl_type_t test_name_UnionTable;
extern const fidl_type_t test_name_ReverseOrdinalUnionTable;
extern const fidl_type_t test_name_NullableUnionStructTable;
extern const fidl_type_t test_name_FieldCollisionTable;
extern const fidl_type_t test_name_ExplicitUnionTable;
static const fidl_type_t v1_Vector4294967295nonnullable30v1_String4294967295nonnullableTable;
extern const fidl_type_t v1_test_name_UnionTable;
static const fidl_type_t v1_Pointer18v1_test_name_UnionTable;
extern const fidl_type_t v1_test_name_ReverseOrdinalUnionTable;
extern const fidl_type_t v1_test_name_NullableUnionStructTable;
extern const fidl_type_t v1_test_name_FieldCollisionTable;
extern const fidl_type_t v1_test_name_ExplicitUnionTable;

// Coding tables for old wire format.

extern const fidl_type_t test_name_UnionTable;
extern const fidl_type_t test_name_ReverseOrdinalUnionTable;
extern const fidl_type_t test_name_NullableUnionStructTable;
extern const fidl_type_t test_name_FieldCollisionTable;
extern const fidl_type_t test_name_ExplicitUnionTable;

static const fidl_type_t Pointer15test_name_UnionTable = {.type_tag=kFidlTypeUnionPointer, {.coded_union_pointer={.union_type=&test_name_UnionTable.coded_union}}};

static const fidl_type_t String4294967295nonnullableTable = {.type_tag=kFidlTypeString, {.coded_string={.max_size=4294967295u, .nullable=kFidlNullability_Nonnullable}}};

static const fidl_type_t Vector4294967295nonnullable27String4294967295nonnullableTable = {.type_tag=kFidlTypeVector, {.coded_vector={.element=&String4294967295nonnullableTable, .max_count=4294967295u, .element_size=16u, .nullable=kFidlNullability_Nonnullable, .alt_type=&v1_Vector4294967295nonnullable30v1_String4294967295nonnullableTable}}};


static const struct FidlUnionField Fields15test_name_Union[] = {
    /*FidlUnionField*/{.type=NULL, .padding=12u, .xunion_ordinal=1u},
    /*FidlUnionField*/{.type=&String4294967295nonnullableTable, .padding=0u, .xunion_ordinal=2u},
    /*FidlUnionField*/{.type=&Vector4294967295nonnullable27String4294967295nonnullableTable, .padding=0u, .xunion_ordinal=3u}
};
const fidl_type_t test_name_UnionTable = {.type_tag=kFidlTypeUnion, {.coded_union={.fields=Fields15test_name_Union, .field_count=3u, .data_offset=8u, .size=24u, .name="test.name/Union", .alt_type=&v1_test_name_UnionTable}}};

static const struct FidlUnionField Fields29test_name_ReverseOrdinalUnion[] = {
    /*FidlUnionField*/{.type=NULL, .padding=0u, .xunion_ordinal=1u},
    /*FidlUnionField*/{.type=NULL, .padding=0u, .xunion_ordinal=2u}
};
const fidl_type_t test_name_ReverseOrdinalUnionTable = {.type_tag=kFidlTypeUnion, {.coded_union={.fields=Fields29test_name_ReverseOrdinalUnion, .field_count=2u, .data_offset=4u, .size=8u, .name="test.name/ReverseOrdinalUnion", .alt_type=&v1_test_name_ReverseOrdinalUnionTable}}};

static const struct FidlStructField Fields29test_name_NullableUnionStruct[] = {
    /*FidlStructField*/{.type=&Pointer15test_name_UnionTable, .offset=0u, .padding=0u}
};
const fidl_type_t test_name_NullableUnionStructTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields29test_name_NullableUnionStruct, .field_count=1u, .size=8u, .max_out_of_line=4294967295u, .contains_union=true, .name="test.name/NullableUnionStruct", .alt_type=&v1_test_name_NullableUnionStructTable}}};

static const struct FidlUnionField Fields24test_name_FieldCollision[] = {
    /*FidlUnionField*/{.type=NULL, .padding=0u, .xunion_ordinal=1u}
};
const fidl_type_t test_name_FieldCollisionTable = {.type_tag=kFidlTypeUnion, {.coded_union={.fields=Fields24test_name_FieldCollision, .field_count=1u, .data_offset=4u, .size=8u, .name="test.name/FieldCollision", .alt_type=&v1_test_name_FieldCollisionTable}}};

static const struct FidlUnionField Fields23test_name_ExplicitUnion[] = {
    /*FidlUnionField*/{.type=NULL, .padding=12u, .xunion_ordinal=1u},
    /*FidlUnionField*/{.type=&String4294967295nonnullableTable, .padding=0u, .xunion_ordinal=3u}
};
const fidl_type_t test_name_ExplicitUnionTable = {.type_tag=kFidlTypeUnion, {.coded_union={.fields=Fields23test_name_ExplicitUnion, .field_count=2u, .data_offset=8u, .size=24u, .name="test.name/ExplicitUnion", .alt_type=&v1_test_name_ExplicitUnionTable}}};

// Coding tables for v1 wire format.

extern const fidl_type_t v1_test_name_UnionTable;
static const fidl_type_t v1_Pointer18v1_test_name_UnionTable;
extern const fidl_type_t v1_test_name_ReverseOrdinalUnionTable;
extern const fidl_type_t v1_test_name_NullableUnionStructTable;
extern const fidl_type_t v1_test_name_FieldCollisionTable;
extern const fidl_type_t v1_test_name_ExplicitUnionTable;


static const fidl_type_t v1_String4294967295nonnullableTable = {.type_tag=kFidlTypeString, {.coded_string={.max_size=4294967295u, .nullable=kFidlNullability_Nonnullable}}};

static const fidl_type_t v1_Vector4294967295nonnullable30v1_String4294967295nonnullableTable = {.type_tag=kFidlTypeVector, {.coded_vector={.element=&v1_String4294967295nonnullableTable, .max_count=4294967295u, .element_size=16u, .nullable=kFidlNullability_Nonnullable, .alt_type=&Vector4294967295nonnullable27String4294967295nonnullableTable}}};


static const struct FidlXUnionField Fields18v1_test_name_Union[] = {
    /*FidlXUnionField*/{.type=&fidl_internal_kInt32Table, .ordinal=1u, .hashed_ordinal=1u, .explicit_ordinal=1u},
    /*FidlXUnionField*/{.type=&v1_String4294967295nonnullableTable, .ordinal=2u, .hashed_ordinal=2u, .explicit_ordinal=2u},
    /*FidlXUnionField*/{.type=&v1_Vector4294967295nonnullable30v1_String4294967295nonnullableTable, .ordinal=3u, .hashed_ordinal=3u, .explicit_ordinal=3u}
};
const fidl_type_t v1_test_name_UnionTable = {.type_tag=kFidlTypeXUnion, {.coded_xunion={.field_count=3u, .fields=Fields18v1_test_name_Union, .nullable=kFidlNullability_Nonnullable, .name="test.name/Union", .strictness=kFidlStrictness_Strict, .alt_type=&test_name_UnionTable}}};
static const struct FidlXUnionField Fields30v1_Pointer18v1_test_name_Union[] = {
    /*FidlXUnionField*/{.type=&fidl_internal_kInt32Table, .ordinal=1u, .hashed_ordinal=1u, .explicit_ordinal=1u},
    /*FidlXUnionField*/{.type=&v1_String4294967295nonnullableTable, .ordinal=2u, .hashed_ordinal=2u, .explicit_ordinal=2u},
    /*FidlXUnionField*/{.type=&v1_Vector4294967295nonnullable30v1_String4294967295nonnullableTable, .ordinal=3u, .hashed_ordinal=3u, .explicit_ordinal=3u}
};
static const fidl_type_t v1_Pointer18v1_test_name_UnionTable = {.type_tag=kFidlTypeXUnion, {.coded_xunion={.field_count=3u, .fields=Fields30v1_Pointer18v1_test_name_Union, .nullable=kFidlNullability_Nullable, .name="test.name/Union", .strictness=kFidlStrictness_Strict, .alt_type=&Pointer15test_name_UnionTable}}};
static const struct FidlXUnionField Fields32v1_test_name_ReverseOrdinalUnion[] = {
    /*FidlXUnionField*/{.type=&fidl_internal_kUint32Table, .ordinal=1u, .hashed_ordinal=1u, .explicit_ordinal=1u},
    /*FidlXUnionField*/{.type=&fidl_internal_kUint32Table, .ordinal=2u, .hashed_ordinal=2u, .explicit_ordinal=2u}
};
const fidl_type_t v1_test_name_ReverseOrdinalUnionTable = {.type_tag=kFidlTypeXUnion, {.coded_xunion={.field_count=2u, .fields=Fields32v1_test_name_ReverseOrdinalUnion, .nullable=kFidlNullability_Nonnullable, .name="test.name/ReverseOrdinalUnion", .strictness=kFidlStrictness_Strict, .alt_type=&test_name_ReverseOrdinalUnionTable}}};
static const struct FidlStructField Fields32v1_test_name_NullableUnionStruct[] = {
    /*FidlStructField*/{.type=&v1_Pointer18v1_test_name_UnionTable, .offset=0u, .padding=0u}
};
const fidl_type_t v1_test_name_NullableUnionStructTable = {.type_tag=kFidlTypeStruct, {.coded_struct={.fields=Fields32v1_test_name_NullableUnionStruct, .field_count=1u, .size=24u, .max_out_of_line=4294967295u, .contains_union=true, .name="test.name/NullableUnionStruct", .alt_type=&test_name_NullableUnionStructTable}}};

static const struct FidlXUnionField Fields27v1_test_name_FieldCollision[] = {
    /*FidlXUnionField*/{.type=&fidl_internal_kInt32Table, .ordinal=1u, .hashed_ordinal=1u, .explicit_ordinal=1u}
};
const fidl_type_t v1_test_name_FieldCollisionTable = {.type_tag=kFidlTypeXUnion, {.coded_xunion={.field_count=1u, .fields=Fields27v1_test_name_FieldCollision, .nullable=kFidlNullability_Nonnullable, .name="test.name/FieldCollision", .strictness=kFidlStrictness_Strict, .alt_type=&test_name_FieldCollisionTable}}};
static const struct FidlXUnionField Fields26v1_test_name_ExplicitUnion[] = {
    /*FidlXUnionField*/{.type=&fidl_internal_kInt32Table, .ordinal=1u, .hashed_ordinal=1u, .explicit_ordinal=1u},
    /*FidlXUnionField*/{.type=&v1_String4294967295nonnullableTable, .ordinal=3u, .hashed_ordinal=3u, .explicit_ordinal=3u}
};
const fidl_type_t v1_test_name_ExplicitUnionTable = {.type_tag=kFidlTypeXUnion, {.coded_xunion={.field_count=2u, .fields=Fields26v1_test_name_ExplicitUnion, .nullable=kFidlNullability_Nonnullable, .name="test.name/ExplicitUnion", .strictness=kFidlStrictness_Strict, .alt_type=&test_name_ExplicitUnionTable}}};
