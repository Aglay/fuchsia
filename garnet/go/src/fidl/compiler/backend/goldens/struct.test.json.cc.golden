// WARNING: This file is machine generated by fidlgen.

#include <struct.test.json.h>

#include "lib/fidl/cpp/internal/implementation.h"
namespace fidl {
namespace test {
namespace json {

extern "C" const fidl_type_t fidl_test_json_SimpleTable;
const fidl_type_t* Simple::FidlType = &fidl_test_json_SimpleTable;

void Simple::Encode(::fidl::Encoder* _encoder, size_t _offset) {
  ::fidl::Encode(_encoder, &f1, _offset + 0);
  ::fidl::Encode(_encoder, &f2, _offset + 1);
}

void Simple::Decode(::fidl::Decoder* _decoder, Simple* value, size_t _offset) {
  ::fidl::Decode(_decoder, &value->f1, _offset + 0);
  ::fidl::Decode(_decoder, &value->f2, _offset + 1);
}

zx_status_t Simple::Clone(Simple* _result) const {
  zx_status_t _status = ::fidl::Clone(f1, &_result->f1);
  if (_status != ZX_OK) return _status;
  _status = ::fidl::Clone(f2, &_result->f2);
  if (_status != ZX_OK) return _status;
  return ZX_OK;
}
extern "C" const fidl_type_t fidl_test_json_BasicStructTable;
const fidl_type_t* BasicStruct::FidlType = &fidl_test_json_BasicStructTable;

void BasicStruct::Encode(::fidl::Encoder* _encoder, size_t _offset) {
  ::fidl::Encode(_encoder, &x, _offset + 0);
  ::fidl::Encode(_encoder, &y, _offset + 8);
}

void BasicStruct::Decode(::fidl::Decoder* _decoder, BasicStruct* value,
                         size_t _offset) {
  ::fidl::Decode(_decoder, &value->x, _offset + 0);
  ::fidl::Decode(_decoder, &value->y, _offset + 8);
}

zx_status_t BasicStruct::Clone(BasicStruct* _result) const {
  zx_status_t _status = ::fidl::Clone(x, &_result->x);
  if (_status != ZX_OK) return _status;
  _status = ::fidl::Clone(y, &_result->y);
  if (_status != ZX_OK) return _status;
  return ZX_OK;
}
}  // namespace json
}  // namespace test
}  // namespace fidl
