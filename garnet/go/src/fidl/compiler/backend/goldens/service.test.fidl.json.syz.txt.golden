# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be found in the LICENSE file.
#
# WARNING: This file is machine generated by fidlgen.

include <test/name/c/fidl.h>


test_name_FirstProtocolMethodOnFirstRequest {
       hdr fidl_message_header[2898251288619778048]
} [packed]
test_name_FirstProtocolMethodOnFirstRequestHandles {
       void void
} [packed]

resource zx_chan_test_name_FirstProtocol_client[zx_chan]
resource zx_chan_test_name_FirstProtocol_server[zx_chan]

zx_channel_create$test_name_FirstProtocol(options const[0], out0 ptr[out, zx_chan_test_name_FirstProtocol_client], out1 ptr[out, zx_chan_test_name_FirstProtocol_server])
fdio_service_connect$test_name_FirstProtocol(path ptr[in, string["/svc/"]], handle zx_chan_test_name_FirstProtocol_server)
zx_channel_write$test_name_FirstProtocolMethodOnFirst(handle zx_chan_test_name_FirstProtocol_client, options const[0], bytes ptr[in, test_name_FirstProtocolMethodOnFirstRequest], num_bytes bytesize[bytes], handles ptr[in, test_name_FirstProtocolMethodOnFirstRequestHandles], num_handles bytesize[handles])


test_name_SecondProtocolMethodOnSecondRequest {
       hdr fidl_message_header[939493167940501504]
} [packed]
test_name_SecondProtocolMethodOnSecondRequestHandles {
       void void
} [packed]

resource zx_chan_test_name_SecondProtocol_client[zx_chan]
resource zx_chan_test_name_SecondProtocol_server[zx_chan]

zx_channel_create$test_name_SecondProtocol(options const[0], out0 ptr[out, zx_chan_test_name_SecondProtocol_client], out1 ptr[out, zx_chan_test_name_SecondProtocol_server])
fdio_service_connect$test_name_SecondProtocol(path ptr[in, string["/svc/"]], handle zx_chan_test_name_SecondProtocol_server)
zx_channel_write$test_name_SecondProtocolMethodOnSecond(handle zx_chan_test_name_SecondProtocol_client, options const[0], bytes ptr[in, test_name_SecondProtocolMethodOnSecondRequest], num_bytes bytesize[bytes], handles ptr[in, test_name_SecondProtocolMethodOnSecondRequestHandles], num_handles bytesize[handles])

