/* automatically generated by rust-bindgen */

#[link(name = "sysconfig-sync-client-c")]
extern "C" {}

pub type zx_handle_t = u32;
pub type zx_status_t = i32;
pub type zx_off_t = u64;
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sysconfig_sync_client {
    _unused: [u8; 0],
}
pub type sysconfig_sync_client_t = sysconfig_sync_client;
#[repr(u32)]
#[derive(Debug, Copy, Clone, PartialEq, Eq, Hash)]
pub enum SysconfigPartition {
    Config = 0,
    ABRMetadata = 1,
    VerifiedBootMetadataA = 2,
    VerifiedBootMetadataB = 3,
    VerifiedBootMetadataR = 4,
}
use self::SysconfigPartition as sysconfig_partition_t;
extern "C" {
    pub fn sysconfig_sync_client_create(
        devfs_root: ::std::os::raw::c_int,
        out_client: *mut *mut sysconfig_sync_client_t,
    ) -> zx_status_t;
}
extern "C" {
    pub fn sysconfig_sync_client_free(client: *mut sysconfig_sync_client_t);
}
extern "C" {
    pub fn sysconfig_write_partition(
        client: *mut sysconfig_sync_client_t,
        partition: sysconfig_partition_t,
        vmo: zx_handle_t,
        vmo_offset: zx_off_t,
    ) -> zx_status_t;
}
extern "C" {
    pub fn sysconfig_read_partition(
        client: *mut sysconfig_sync_client_t,
        partition: sysconfig_partition_t,
        vmo: zx_handle_t,
        vmo_offset: zx_off_t,
    ) -> zx_status_t;
}
extern "C" {
    pub fn sysconfig_get_partition_size(
        client: *mut sysconfig_sync_client_t,
        partition: sysconfig_partition_t,
    ) -> usize;
}
