# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/fidl/fidl.gni")
import("//build/fuzzing/fuzzer.gni")

###############################################################################
# AGGREGATE LIBRARIES

source_set("lib") {
  public_deps = [
    ":fidl",
  ]
}

source_set("tests") {
  testonly = true
  deps = [
    ":ack_frame_test",
    ":routable_message_test",
    ":varint_test",
  ]
}

###############################################################################

# ack_frame
source_set("ack_frame") {
  sources = [
    "ack_frame.cc",
    "ack_frame.h",
  ]
  deps = [
    ":varint",
    "//garnet/lib/overnet/environment:trace",
    "//garnet/lib/overnet/vocabulary:slice",
    "//garnet/lib/overnet/vocabulary:status",
  ]
}

source_set("ack_frame_test") {
  testonly = true
  sources = [
    "ack_frame_test.cc",
  ]
  deps = [
    ":ack_frame",
    "//third_party/googletest:gtest",
  ]
}

# fidl
source_set("fidl") {
  sources = [
    "fidl.h",
  ]
  deps = [
    "//garnet/lib/overnet/vocabulary:slice",
    "//garnet/lib/overnet/vocabulary:status",
    "//sdk/lib/fidl/cpp:cpp_base",
  ]
}

# routable_message
source_set("routable_message") {
  sources = [
    "routable_message.cc",
    "routable_message.h",
  ]
  public_deps = [
    "//garnet/lib/overnet/labels:node_id",
    "//garnet/lib/overnet/labels:seq_num",
    "//garnet/lib/overnet/labels:stream_id",
  ]
  deps = [
    ":varint",
    "//garnet/lib/overnet/vocabulary:optional",
    "//garnet/lib/overnet/vocabulary:slice",
    "//garnet/lib/overnet/vocabulary:status",
  ]
}

source_set("routable_message_test") {
  testonly = true
  sources = [
    "routable_message_test.cc",
  ]
  deps = [
    ":routable_message",
    "//third_party/googletest:gtest",
  ]
}

fuzz_target("routable_message_fuzzer") {
  testonly = true
  sources = [
    "routable_message_fuzzer.cc",
  ]
  deps = [
    ":routable_message",
  ]
}

# serialization_helpers
source_set("serialization_helpers") {
  sources = [
    "serialization_helpers.h",
  ]
}

# varint
source_set("varint") {
  sources = [
    "varint.cc",
    "varint.h",
  ]
}

source_set("varint_test") {
  testonly = true
  sources = [
    "varint_test.cc",
  ]
  deps = [
    ":varint",
    "//third_party/googletest:gtest",
  ]
}
