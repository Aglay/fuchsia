# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

declare_args() {
  # Use a prebuilt ffmpeg binary rather than building it locally.  See
  # //garnet/lib/media/ffmpeg/README.md for details.  This is ignored when
  # building in variant builds (e.g. sanitizers); in that case, ffmpeg is always
  # built from source so as to be built with the selected variant's config.  When
  # this is false (either explicitly or in a variant build) then
  # //third_party/ffmpeg must be in the source tree, which requires:
  # `jiri import -name garnet manifest/ffmpeg https://fuchsia.googlesource.com/garnet`
  use_prebuilt_ffmpeg = true
}

if (toolchain_variant.name != "" && toolchain_variant.name != "debug" &&
    toolchain_variant.name != "release") {
  use_prebuilt_ffmpeg = false
}

group("ffmpeg") {
  visibility = ["//garnet/bin/mediaplayer/ffmpeg"]

  deps = []
  if (use_prebuilt_ffmpeg) {
    deps += [ ":prebuilt_ffmpeg" ]
    public_configs = [ ":prebuilt_ffmpeg_config" ]
  } else {
    deps += [ "//third_party/ffmpeg" ]
    public_configs = [ "//third_party/ffmpeg:ffmpeg_dependent_config" ]
  }
}

if (use_prebuilt_ffmpeg) {
  assert(
      toolchain_variant.name == "" || toolchain_variant.name == "debug" ||
          toolchain_variant.name == "release",
      "Set use_prebuilt_ffmpeg=false when selecting variants for ffmpeg clients.")

  group("prebuilt_ffmpeg") {
    deps = [
      ":prebuilt_ffmpeg_copy",
    ]

    public_configs = [ ":prebuilt_ffmpeg_config" ]
  }

  copy("prebuilt_ffmpeg_copy") {
    visibility = [ ":prebuilt_ffmpeg" ]

    sources = [
      "prebuilt/${current_cpu}/libffmpeg.so",
    ]
    outputs = [
      "$root_out_dir/${current_cpu}-shared/libffmpeg.so",
    ]
  }

  config("prebuilt_ffmpeg_config") {
    visibility = [ ":prebuilt_ffmpeg" ]

    prebuilt_ffmpeg_base = "prebuilt/${current_cpu}/"
    if (current_cpu == "x64") {
      ffmpeg_config = "max"
    } else {
      ffmpeg_config = "default"
    }

    include_dirs = [
      prebuilt_ffmpeg_base,
      prebuilt_ffmpeg_base + "/fuchsia/config/" + ffmpeg_config + "/" +
          current_cpu,
    ]

    libs = get_target_outputs(":prebuilt_ffmpeg_copy")
  }
}
