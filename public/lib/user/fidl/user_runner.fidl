// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library modular_private;

// The device_runner application (there is no |DeviceRunner| service) requests
// an instance of this service in order to launch and display a |UserRunner| per
// user.
[Discoverable]  // Created by user_runner application.
interface UserRunner {
  // Launches a user runner instance for a user identified by |user_id|.
  // TODO(alhaad): Fold paramters into |UserContext|.
  1: Initialize(modular_auth.Account? account,
               modular.AppConfig user_shell,
               modular.AppConfig story_shell,
               modular_auth.TokenProviderFactory token_provider_factory,
               UserContext user_context,
               request<views_v1_token.ViewOwner>? view_owner);

  2: SwapUserShell(modular.AppConfig user_shell) -> ();
};

// This interface is provided by device runner to |UserRunner|.
interface UserContext {
  // See detailed comments in UserShellContext.Logout().
  1: Logout();

  2: GetPresentation(request<presentation.Presentation> presentation);
};
