# Copyright 2018 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/compiled_action.gni")
import("//build/fidl/toolchain.gni")

# Generates some representation of a FIDL library that's consumable by Language
# bindings generators.
#
# The parameters for this template are defined in //build/fidl/fidl.gni. The
# relevant parameters in this template are:
#   - sources.

template("fidl_library") {
  assert(current_toolchain == fidl_toolchain,
      "This template can only be used in the FIDL toolchain $fidl_toolchain.")

  if (!defined(invoker.sources)) {
    assert(false, "A FIDL library requires some sources.")
  }

  not_needed(invoker, [
    "name",
  ])

  json_representation = "$target_gen_dir/$target_name.fidl.json"

  main_target_name = target_name
  compilation_target_name = "${target_name}_compile"
  verification_target_name = "${target_name}_verify"

  compiled_action(compilation_target_name) {
    visibility = [
      ":*",
    ]

    tool = "//zircon/public/tool/fidl2"

    inputs = invoker.sources

    outputs = [
      json_representation,
    ]

    args = [
      "--json",
      rebase_path(json_representation, root_build_dir),
      "--files",
    ] + rebase_path(inputs, root_build_dir)
  }

  compiled_action(verification_target_name) {
    visibility = [
      ":*",
    ]

    tool = "//build/tools/json_validator"

    inputs = [
      "//zircon/system/host/fidl/schema.json",
      json_representation,
    ]

    outputs = [
      "${json_representation}.stamp",
    ]

    args = rebase_path(inputs, root_build_dir) +
        rebase_path(outputs, root_build_dir)

    deps = [
      ":$compilation_target_name",
    ]
  }

  group(main_target_name) {
    public_deps = [
      ":$compilation_target_name",
    ]

    deps = [
      ":$verification_target_name",
    ]
  }
}
