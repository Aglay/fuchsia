// Copyright 2017 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library modular;

// EntityProviders (agents) must implement and provide the |EntityProvider|
// service if they create entity references (using |EntityReferenceFactory|).
// This service is used by the framework to provide data for an |Entity|
// interface for an entity. This interface is requested by the framework in the
// agent's *application* outgoing services, and is closed by the framework when
// there are no more |Entity|s that need to be provided.
[Discoverable]
interface EntityProvider {
  // Returns Entity types for the supplied |cookie|. |cookie| will be
  // an identical one previously passed to
  // EntityReferenceFactory.CreateReference(). Each entry in |types| should
  // reference a well-known content type.
  1: GetTypes(string cookie) -> (vector<string> types);

  // Given one of the types returned from |GetTypes()| above, returns
  // associated short-form data as a string of bytes. It is common for the data
  // to be represented as JSON. If data for |type| exists, a non-null |data| is
  // returned.
   // TODO(vardhan,thatguy): |data| should be a VMO or a file.
  2: GetData(string cookie, string type) -> (string? data);
};
