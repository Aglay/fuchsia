// Copyright 2016 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library modular;

// import "lib/images/fidl/encoded_image.fidl";

enum SuggestionImageType {
  PERSON = 0;
  OTHER = 1;
};

enum AnnoyanceType {
  NONE = 0;
  PEEK = 1;
  INTERRUPT = 2;
};

// Information for the main image of the Suggestion.
struct SuggestionDisplayImage {
  // The image as a vmo.
  images.EncodedImage image;

  // Information about the content contained in the image
  SuggestionImageType image_type;
};

// TODO(thatguy): This will likely be a union eventually, with different
// display descriptions for different kinds of Suggestions.
struct SuggestionDisplay {
  // Title text for this Suggestion
  string headline;

  // Sub-headline text to be optionally displayed with this Suggestion
  string? subheadline;

  // A longer details string to be optionally displayed with this Suggestion
  string? details;

  // Color in which the Suggestion should be displayed
  // Format is 0xaarrggbb
  uint32 color;

  // Optional list of icons that can be displayed with the Suggestion
  vector<SuggestionDisplayImage>? icons;

  // Optional image to display as part of the Suggestion
  SuggestionDisplayImage? image;

  // How annoying should this suggestion be?
  AnnoyanceType annoyance;
};
