// Copyright 2018 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library modular;

interface SessionWatcher {
  // Some events, in particular those that represent changes to internal
  // modular framework state, or those that do not pertain to a single story,
  // are not represented as commands.
  1: OnStoryStateChanged(StoryState state);
  2: OnStoryDeleted(string story_id);

  // Notifies of StoryCommands. If |is_last| == false, more StoryCommands
  // were executed in a single batch than can be fit into one message and the
  // client should expect further calls to OnStoryCommands() immediately.
  3: OnStoryCommands(string story_id, vector<StoryCommand> commands, bool is_last);
};
