// WARNING: This file is machine generated by fidlc.

#include <lib/fidl/internal.h>


extern const struct FidlCodedEnum test_name_obj_typeTable;
extern const struct FidlCodedXUnion test_name_UnionWithHandleTable;
extern const struct FidlCodedXUnion test_name_UnionWithHandleNullableRefTable;
extern const struct FidlCodedTable test_name_TableWithHandleTable;
extern const struct FidlCodedStruct test_name_HandlesInTypesTable;


static const struct FidlCodedHandle HandlevmononnullableTable = {.tag=kFidlTypeHandle, .handle_subtype=ZX_OBJ_TYPE_VMO, .handle_rights=2147483648u, .nullable=kFidlNullability_Nonnullable};

static const struct FidlCodedVector Vector4294967295nonnullable20HandlevmononnullableTable = {.tag=kFidlTypeVector, .element=(fidl_type_t*)(&HandlevmononnullableTable), .max_count=4294967295u, .element_size=4u, .nullable=kFidlNullability_Nonnullable};

static const struct FidlCodedArray Array20_20HandlevmononnullableTable __attribute__((unused)) = {.tag=kFidlTypeArray, .element=(fidl_type_t*)(&HandlevmononnullableTable), .array_size=20u, .element_size=4u};

static const struct FidlCodedVector Vector4294967295nonnullable30Array20_20HandlevmononnullableTable = {.tag=kFidlTypeVector, .element=(fidl_type_t*)(&Array20_20HandlevmononnullableTable), .max_count=4294967295u, .element_size=20u, .nullable=kFidlNullability_Nonnullable};


static bool EnumValidatorFor_test_name_obj_type(uint64_t v) {
  switch (v) {
    case 0ul:
    case 3ul:
      return true;
    default:
      return false;
  }
}

const struct FidlCodedEnum test_name_obj_typeTable = {.tag=kFidlTypeEnum, .underlying_type=kFidlCodedPrimitiveSubtype_Uint32, .validate=&EnumValidatorFor_test_name_obj_type, .name="test.name/obj_type"};

static const struct FidlXUnionField Fields25test_name_UnionWithHandle[] = {
    /*FidlXUnionField*/{.type=(fidl_type_t*)(&HandlevmononnullableTable)}
};
const struct FidlCodedXUnion test_name_UnionWithHandleTable = {.tag=kFidlTypeXUnion, .field_count=1u, .fields=Fields25test_name_UnionWithHandle, .nullable=kFidlNullability_Nonnullable, .name="test.name/UnionWithHandle", .strictness=kFidlStrictness_Flexible};
static const struct FidlXUnionField Fields36test_name_UnionWithHandleNullableRef[] = {
    /*FidlXUnionField*/{.type=(fidl_type_t*)(&HandlevmononnullableTable)}
};
const struct FidlCodedXUnion test_name_UnionWithHandleNullableRefTable = {.tag=kFidlTypeXUnion, .field_count=1u, .fields=Fields36test_name_UnionWithHandleNullableRef, .nullable=kFidlNullability_Nullable, .name="test.name/UnionWithHandle", .strictness=kFidlStrictness_Flexible};
static const struct FidlTableField Fields25test_name_TableWithHandle[] = {
    /*FidlTableField*/{.type=(fidl_type_t*)(&HandlevmononnullableTable), .ordinal=1u}
};
const struct FidlCodedTable test_name_TableWithHandleTable = {.tag=kFidlTypeTable, .fields=Fields25test_name_TableWithHandle, .field_count=1u, .name="test.name/TableWithHandle"};

static const struct FidlStructElement Fields24test_name_HandlesInTypes[] = {
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_Resource},.offset=0u, .field_type=(fidl_type_t*)(&HandlevmononnullableTable)}},
    /*FidlStructPadding*/{.padding=/*FidlStructPadding*/{.offset=4u, .header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Padding32,.is_resource=kFidlIsResource_NotResource},.mask_32=4294967295u}},
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_Resource},.offset=8u, .field_type=(fidl_type_t*)(&Vector4294967295nonnullable20HandlevmononnullableTable)}},
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_Resource},.offset=24u, .field_type=(fidl_type_t*)(&Array20_20HandlevmononnullableTable)}},
    /*FidlStructPadding*/{.padding=/*FidlStructPadding*/{.offset=44u, .header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Padding32,.is_resource=kFidlIsResource_NotResource},.mask_32=4294967295u}},
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_Resource},.offset=48u, .field_type=(fidl_type_t*)(&Vector4294967295nonnullable30Array20_20HandlevmononnullableTable)}},
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_Resource},.offset=64u, .field_type=(fidl_type_t*)(&test_name_TableWithHandleTable)}},
    /*FidlStructPadding*/{.field=/*FidlStructField*/{.header=/*FidlStructElementHeader*/{.element_type=kFidlStructElementType_Field, .is_resource=kFidlIsResource_Resource},.offset=80u, .field_type=(fidl_type_t*)(&test_name_UnionWithHandleTable)}}
};
const struct FidlCodedStruct test_name_HandlesInTypesTable = {.tag=kFidlTypeStruct, .elements=Fields24test_name_HandlesInTypes, .element_count=8u, .size=104u, .name="test.name/HandlesInTypes"};

