# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("$zx/public/gn/prebuilt_host_tool.gni")

# Run the banjo compiler for a banjo_library().
#
# This is not really meant for general use.  It's used by banjo support
# modules (see $zx/public/gn/banjo.gni for details).
#
# Parameters
#
#   deps
#     Required: List of exactly one banjo_library() target label.
#     Type: list(label_no_toolchain)
#
#   args
#     Required: Arguments for `banjoc` to generate the desired outputs.
#     Type: list(string)
#
#   outputs
#     Required: Files that `banjoc` will generate when given $args.
#     Type: list(file)
#
template("banjoc") {
  if (current_toolchain == default_toolchain) {
    banjoc_target = target_name

    banjo_deps = invoker.deps
    banjoc_outputs = invoker.outputs

    banjo_library = banjo_deps[0]
    assert(banjo_deps == [ banjo_library ],
           "banjoc() must list exactly one banjo_library() target in `deps`")
    banjo_label_dir = get_label_info(banjo_library, "dir")
    banjo_label_name = get_label_info(banjo_library, "name")

    # TODO(mcgrathr): temporary until everything is renamed with . names
    banjo_name = string_replace(banjo_label_name, "-", ".")

    # banjo_library() generates a response file of all the input arguments.
    banjo_gen_dir = get_label_info(banjo_library, "target_gen_dir")
    banjo_target_name = get_label_info(banjo_library, "name")
    files_rspfile = "$banjo_gen_dir/$banjo_target_name.rsp"
    files_rspfile_target =
        "$banjo_label_dir:_banjo_library.files.$banjo_label_name.rsp"

    # Next, combine that into a response file for the whole command.
    # At the same time, produce a depfile listing all the input files.
    banjoc_rspfile = "$target_out_dir/$banjoc_target.rsp"
    banjoc_depfile = "$target_out_dir/$banjoc_target.d"
    action("_banjoc.rsp.$target_name") {
      forward_variables_from(invoker, [ "testonly" ])
      visibility = [ ":$banjoc_target" ]
      deps = [
        files_rspfile_target,
      ]
      sources = [
        files_rspfile,
      ]
      outputs = [
        banjoc_rspfile,
        banjoc_depfile,
      ]
      script = "$zx/public/gn/fidl/gen-fidlc-rsp.sh"
      args = rebase_path(outputs + [ banjoc_outputs[0] ] + sources,
                         root_build_dir) +
             [
               "--name",
               banjo_name,
             ] + invoker.args
    }

    prebuilt_host_tool(banjoc_target) {
      forward_variables_from(invoker,
                             [
                               "visibility",
                               "testonly",
                             ])
      tool = "$zx/prebuilt/downloads/banjo/banjo_bin"
      outputs = banjoc_outputs
      deps = [
        ":_banjoc.rsp.$target_name",
      ]
      sources = [
        banjoc_rspfile,
      ]
      args = [ "@" + rebase_path(banjoc_rspfile, root_build_dir) ]
    }
  } else {
    group(target_name) {
      forward_variables_from(invoker,
                             [
                               "visibility",
                               "testonly",
                             ])
      public_deps = [
        ":$target_name($default_toolchain)",
      ]
      not_needed(invoker, "*")
    }
  }
}
