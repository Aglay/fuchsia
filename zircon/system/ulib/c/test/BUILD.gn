# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

default_stack_size_cases = [
  {
    # This uses the compiled-in default.
    name = "default"
  },
  {
    # This uses an arbitrary, non-default size.  It needs to be an even
    # multiple of page size, since specified sizes are always rounded up.
    name = "phdr"
    size = 1114112  # 0x110000
  },
]

foreach(case, default_stack_size_cases) {
  zx_test("default-stack-size-${case.name}") {
    sources = [ "default-stack-size-test.cc" ]
    deps = [
      "$zx/system/ulib/fdio",
      "$zx/system/ulib/zircon-internal",
      "$zx/system/ulib/zxtest",
    ]
    if (defined(case.size)) {
      defines = [ "STACK_TEST_EXPECTED_SIZE=${case.size}" ]
      ldflags = [ "-Wl,-z,stack-size=${case.size}" ]
    }
  }
}

zx_executable("debugdata-test-helper") {
  testonly = true
  sources = [ "debugdata-test-helper.cc" ]
  deps = [ "$zx/system/ulib/zx" ]
}

zx_test("debugdata") {
  test_group = "c"
  sources = [ "debugdata.cc" ]
  data_deps = [ ":debugdata-test-helper" ]
  deps = [
    "$zx/system/fidl/fuchsia-debugdata:llcpp",
    "$zx/system/ulib/async",
    "$zx/system/ulib/async:async-cpp",
    "$zx/system/ulib/async-loop",
    "$zx/system/ulib/async-loop:async-loop-cpp",
    "$zx/system/ulib/async-loop:async-loop-default.static",
    "$zx/system/ulib/fdio",
    "$zx/system/ulib/fidl",
    "$zx/system/ulib/fidl-async",
    "$zx/system/ulib/fidl-async:fidl-async-cpp",
    "$zx/system/ulib/fs",
    "$zx/system/ulib/zircon-internal",
    "$zx/system/ulib/zx",
    "$zx/system/ulib/zxtest",
  ]
}

zx_test("posix-clocks") {
  test_group = "c"
  sources = [ "posix-clocks.cc" ]
  deps = [
    "$zx/system/ulib/fbl",
    "$zx/system/ulib/fdio",
    "$zx/system/ulib/zircon",
    "$zx/system/ulib/zx",
    "$zx/system/ulib/zxtest",
  ]
}

zx_test("atexit") {
  test_group = "c"
  sources = [ "atexit.cc" ]
  deps = [
    "$zx/system/ulib/fdio",
    "$zx/system/ulib/zxtest",
  ]
}

group("test") {
  testonly = true
  deps = [
    ":atexit",
    ":debugdata",
    ":posix-clocks",
  ]
  foreach(case, default_stack_size_cases) {
    deps += [ ":default-stack-size-${case.name}" ]
  }
}
