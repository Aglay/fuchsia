#
# Use of this source code is governed by a MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT

##########################################
# Though under //zircon, this build file #
# is meant to be used in the Fuchsia GN  #
# build.                                 #
# See fxb/36139.                         #
##########################################

assert(!defined(zx) || zx != "/",
       "This file can only be used in the Fuchsia GN build.")

import("//build/test.gni")
import("//build/test/test_package.gni")
import("//build/testing/environments.gni")
import("//build/testing/host_test_data.gni")

group("tests") {
  testonly = true
  deps = [
    ":devicetree-test-package",
    ":devicetree-tests($host_toolchain)",
  ]
}

test("devicetree-tests") {
  sources = [ "devicetree_tests.cc" ]
  deps = [
    "//zircon/public/lib/devicetree",
    "//zircon/public/lib/zxtest",
  ]
  if (is_host) {
    data_deps = [ ":host-test-data" ]
  }
}

# The binary, flattened devicetrees files created by data/update.sh.
dtb_sources = [
  "data/complex_no_properties.dtb",
  "data/empty.dtb",
  "data/simple_with_properties.dtb",
]

if (is_host) {
  host_test_data("host-test-data") {
    sources = dtb_sources
    outputs = [ "$root_out_dir/test_data/devicetree/{{source_file_part}}" ]
  }
}

unittest_package("devicetree-test-package") {
  package_name = "devicetree-test"
  tests = [
    {
      name = "devicetree-tests"
      environments = [ emu_env ]
    },
  ]
  resources = []
  foreach(dtb, dtb_sources) {
    resources += [
      {
        path = dtb
        dest = get_path_info(dtb, "file")
      },
    ]
  }

  deps = [ ":devicetree-tests" ]
}
