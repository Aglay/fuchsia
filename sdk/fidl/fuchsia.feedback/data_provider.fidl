// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.feedback;

using fuchsia.math;
using fuchsia.mem;

/// Provides data useful to attach in feedback reports (crash or user feedback).
[Discoverable]
protocol DataProvider {
    /// Returns an image of the current view encoded in the provided |encoding|.
    ///
    /// |screenshot| may be null if the encoding is not supported, the device
    /// does not have a display, or there is not enough memory to allocate the
    /// screenshot image.
    ///
    /// The screenshot is provided separately from the rest of the data as
    /// callers might want to block on it before changing the view.
    GetScreenshot(ImageEncoding encoding) -> (Screenshot? screenshot);
};

/// The encoding used for the image.
///
/// Today, only PNG is supported, but in the future the screenshot could be
/// returned in other encodings if need arises.
enum ImageEncoding {
  PNG = 0;
};

/// An encoded image of the screen.
struct Screenshot {
  fuchsia.mem.Buffer image;

  // While all encoded images contain their dimensions in their headers, some
  // clients still expect to receive the width and height separately, so we
  // also provide it separately so clients don't need to decode |image|.
  fuchsia.math.Size dimensions_in_px;
};

