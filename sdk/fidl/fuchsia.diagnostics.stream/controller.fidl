// Copyright 2020 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.diagnostics.stream;

/// A component which allows clients to control its generation of diagnostics data.
///
/// If an implementer of this protocol receives multiple connections, it should generate diagnostics
/// based on a union of the `Interest` registrations.
[Discoverable]
protocol Controller {
    /// Notifies the component of interest in a subset of diagnostic records.
    ///
    /// Before the component receives this request it should filter according to a default interest
    /// specifier.
    ///
    /// Implementers should respect the `Interest` last sent by the client for the lifetime of the
    /// client's connection.
    Register(Interest desired);
};

/// The clients's current interest in stream records.
///
/// Without having received an interest specifier or receiving one with empty fields, components
/// should assume a default interest specifier, as documented for each field in this table.
table Interest {
    /// Minimum desired severity. Components should include records at or above this severity.
    ///
    /// The default is `INFO`.
    1: Severity min_severity;
};
