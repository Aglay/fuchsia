// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.diagnostics.inspect;

using fuchsia.diagnostics;

/// TreeSelector represents a selection request on a nested structure where each
/// nested node has properties that can be retrieved. The node_path specifies which
/// nodes we search through, and the target_properties specify which properties to
/// look for on the matched nodes.
table TreeSelector {
    // This is an optional vector providing a path from the "root" node of an
    // inspect tree to the node(s) that we will query for property data.
    // If absent, we assume we are querying only the properties which are direct
    // children of "root".
    1: vector<fuchsia.diagnostics.StringSelector>:1024 node_path;

    // This is the property selector that we will use to find relevant properties
    // in the node(s) specified by inspect_node_path.
    // This field is required.
    2: fuchsia.diagnostics.StringSelector target_properties;
};

/// Structured selector containing all required information for the
/// Inspect service to provide specific views into inspect data.
struct Selector {
    fuchsia.diagnostics.ComponentSelector component_selector;
    TreeSelector tree_selector;
};
