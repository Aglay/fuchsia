// Copyright 2019 The Fuchsia Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

library fuchsia.castauth;

/// Input hash to be signed by Cast key.
/// It must be ASN1-encoded SHA1 or SHA256 hash, with sizes 39 or 51 bytes.
union Hash {
  array<uint8>:39 sha1;
  array<uint8>:51 sha256;
};

/// Response codes for CastKeySigner operations.
enum Status {
    /// Operation successful.
    OK = 0;
    /// Operation failed due to unrecoverable errors.
    FAILED = 1;
};

/// This FIDL interface is used to sign with hardware Cast key.
/// It is intended for short-term use only and will not be supported on all
/// devices. It will eventually be replaced by an attestation service.
[Discoverable]
protocol CastKeySigner {
  /// Use Cast key to sign a hash value.
  ///
  /// The input is hash value.
  /// The return value is the return code or the signature if the operation
  /// succeeds. The signature algorithm is RSA-2048-PKCS1.
  SignHash(Hash hash) -> (array<uint8>:256 signature) error Status;

  /// Get the Cast certificate chain.
  ///
  /// The return value is the return code or the certificate chain if
  /// the operation succeeds. The chain contains Cast key cert,
  /// one or more intermediate CA certs and root CA cert.
  GetCertificateChain() -> (vector<bytes:2048> cert_chain) error Status;
};
